# vim ft=yaml
# travis-ci.org definition for DataLad build
language: python

python:
  - 3.5
  - 3.8

cache:
  - apt

env:
  global:
    # will be used in the matrix, where neither other variable is used
    - TESTS_TO_PERFORM=
    - NOSE_OPTS=-s
    - NOSE_SELECTION_OP="not "   # so it would be "not (integration or usecase)"
    # Special settings/helper for combined coverage from special remotes execution
    - COVERAGE=coverage

matrix:
  include:
  - python: 3.5
    env:
    # eventually: - TMPDIR="/var/tmp/sym ссылка"
    - TMPDIR="/var/tmp/sym link"

before_install:
  # Just in case we need to check if nfs is there etc
  - sudo lsmod
  # The ultimate one-liner setup for NeuroDebian repository
  - bash <(wget -q -O- http://neuro.debian.net/_files/neurodebian-travis.sh)
  - travis_retry sudo apt-get update -qq
  - travis_retry sudo apt-get install eatmydata  # to speedup some installations
  # install git-annex with the relevant bits
  # no recommends to avoid inheriting the entire multimedia stack
  - travis_retry sudo eatmydata apt-get install --no-install-recommends git-annex-standalone aria2 git-remote-gcrypt lsof gnupg nocache

install:
  # for metadata support
  - git config --global user.email "test@travis.land"
  - git config --global user.name "Travis Almighty"
  - cd ..; pip install -q codecov; cd -
  # So we could test under sudo -E with PATH pointing to installed location
  - sudo sed -i -e 's/^Defaults.*secure_path.*$//' /etc/sudoers
  # TMPDIRs
  - if [[ "${TMPDIR:-}" =~ .*/sym\ link ]]; then echo "Symlinking $TMPDIR"; ln -s /tmp "$TMPDIR"; fi
  - if [[ "${TMPDIR:-}" =~ .*/d\ i\ r ]]; then echo "mkdir $TMPDIR"; mkdir -p "$TMPDIR"; fi

script:
  # Verify that setup.py build doesn't puke
  - python setup.py build
  # Test installation system-wide
  - sudo pip install .
  # Run tests
  - http_proxy=
    PATH=$PWD/tools/coverage-bin:$PATH
    $NOSE_WRAPPER `which nosetests` $NOSE_OPTS
      -v
      --with-doctest
      --with-cov --cover-package datalad_ukbiobank
      --logging-level=INFO
      $TESTS_TO_PERFORM
  # Report WTF information using system wide installed version
  - datalad wtf

after_success:
  - coverage combine -a /tmp/.coverage-entrypoints-*
  - codecov
