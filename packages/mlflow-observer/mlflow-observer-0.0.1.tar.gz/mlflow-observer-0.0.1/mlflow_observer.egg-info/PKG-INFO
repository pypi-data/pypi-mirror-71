Metadata-Version: 1.2
Name: mlflow-observer
Version: 0.0.1
Summary: Experiment tracking with sacred and mlflow
Home-page: https://github.com/johny-c/mlflow-observer
Author: John Chiotellis
Author-email: johnyc.code@gmail.com
License: MIT
Description: mlflow-observer
        ===============
        Observe your `sacred <https://github.com/IDSIA/sacred>`_ experiments with `mlflow <https://github.com/mlflow/mlflow>`_.
        
        
        Writing experiments with ``sacred`` is great.
        
        ``mlflow`` provides a nice UI that can be used to get a quick overview of your runs and analyze the results.
        
        
        Usage
        -----
        In your code, add the observer:
        
        .. code-block:: python
        
            from sacred import Experiment
            from mlflow_observer import MlflowObserver
        
            from _paths import MY_TRACKING_URI
        
            ex = Experiment('MyExperiment')
            ex.observers.append(MlflowObserver(MY_TRACKING_URI))
        
        
        In the commandline, you can pass a run name through sacred's comment flag:
        
        .. code-block:: bash
        
          python train.py -c "My sacred run"
        
         
        Otherwise the run name will be of the form ``run_[datetime]``.
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Utilities
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: License :: OSI Approved :: MIT License
Requires-Python: >=3.6
