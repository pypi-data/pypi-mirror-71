#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

#########################################################
# Name: generate_INNO_setup.py
# Porpose: make videomass.iss file on Windows for inno setup
# Compatibility: Python3, wxPython Phoenix
# Author: Gianluca Pernigoto <jeanlucperni@gmail.com>
# Copyright: (c) 2020 Gianluca Pernigoto <jeanlucperni@gmail.com>
# license: GPL3
# Rev: June.20.2020
#########################################################

# This file is part of Videomass.

#    Videomass is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.

#    Videomass is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with Videomass.  If not, see <http://www.gnu.org/licenses/>.

#########################################################
import os
import sys
import shutil
import platform

this = os.path.realpath(os.path.abspath(__file__))
here = os.path.dirname(os.path.dirname(os.path.dirname(this)))
sys.path.insert(0, here)
# here = os.path.dirname(this)
videomass = os.path.join(here, 'dist', 'Videomass')

if not os.path.exists(videomass):
    if not os.path.isdir(videomass):
        sys.exit('ERROR: You should first create a videomass bundle with '
                 'pyinstaller.')

from videomass3.vdms_sys.msg_info import current_release

# ---- Get info data
cr = current_release()
RLS_NAME = cr[0]  # release name first letter is Uppercase
PRG_NAME = cr[1]
VERSION = cr[2]
RELEASE = cr[3]
COPYRIGHT = cr[4]
WEBSITE = cr[5]
AUTHOR = cr[6]
EMAIL = cr[7]
COMMENT = cr[8]

COPYING = os.path.join(videomass, 'DOC', 'COPYING')
INFO_RTF = os.path.join(videomass, 'DOC', 'NOTICE.rtf')
AUTH = os.path.join(videomass, 'DOC', 'AUTHORS')
ICONS_PATH = os.path.join(videomass, 'art', 'videomass.ico')
PATH_EXE = os.path.join(videomass, 'Videomass.exe')

def createinno():
    content = r"""; Script generated by the Inno Setup Script Wizard.
; Edited by Gianluca Pernigotto
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Videomass"
#define MyAppVersion "%(VERSION)s (64-bit)"
#define MyAppPublisher "Gianluca Pernigotto"
#define MyAppURL "http://jeanslack.github.io/Videomass/"
#define MyAppExeName "Videomass.exe"
#define MyAppIcoName "videomass.ico"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{1608E2C6-6B13-4793-A9A6-6283E3BF1305}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={commonpf}\{#MyAppName}
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
LicenseFile=%(COPYING)s
InfoBeforeFile=%(INFO_RTF)s
InfoAfterFile=%(AUTH)s
OutputDir=%(here)s
OutputBaseFilename=Videomass-v%(VERSION)s-py3-x64-Setup
SetupIconFile=%(ICONS_PATH)s
Password=
Compression=lzma
SolidCompression=yes
CreateAppDir=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags:

[Files]
Source: "%(PATH_EXE)s"; DestDir: "{app}"; Flags: ignoreversion
Source: "%(here)s\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\{#MyAppIcoName}"; WorkingDir: "{app}"
Name: "{group}\Uninstall Videomass"; Filename: "{uninstallexe}"
Name: "{group}\Website"; Filename: "https://jeanslack.github.io/Videomass/"

Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}";IconFilename: "{app}\{#MyAppIcoName}"; Tasks: desktopicon
; Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}";IconFilename: "{app}\{#MyAppIcoName}";
; Name: "{commonstartup}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}";IconFilename: "{app}\{#MyAppIcoName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent
""" % {"VERSION": VERSION, "COPYING": COPYING, "INFO_RTF": INFO_RTF,
       "AUTH": AUTH, "here": here, "ICONS_PATH": ICONS_PATH,
       "PATH_EXE": PATH_EXE
       }
    specfile = os.path.join(here, 'videomass_v%s.iss' % VERSION)
    with open(specfile, 'w') as spec:
        spec.write(content)

if __name__ == '__main__':
    if platform.system() == 'Windows':
        createinno()
    else:
        sys.exit('ERROR: invalid platform. This script work on Windows '
                 'only, exit.')
