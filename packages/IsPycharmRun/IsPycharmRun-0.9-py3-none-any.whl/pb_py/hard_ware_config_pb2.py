# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: hard_ware_config.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='hard_ware_config.proto',
  package='FunPlus.Common.Config',
  syntax='proto2',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x16hard_ware_config.proto\x12\x15\x46unPlus.Common.Config\"\x8e\x01\n\x12\x43onfHardWareConfig\x12;\n\x0b\x43PUHardWare\x18\x0b \x03(\x0b\x32&.FunPlus.Common.Config.ConfCPUHardWare\x12;\n\x0bGPUHardWare\x18\x0c \x03(\x0b\x32&.FunPlus.Common.Config.ConfGPUHardWare\"B\n\x0f\x43onfCPUHardWare\x12\x10\n\x08\x63pu_name\x18\x01 \x01(\t\x12\r\n\x05level\x18\x02 \x01(\x05\x12\x0e\n\x06\x61\x64just\x18\x03 \x01(\t\"w\n\x0f\x43onfGPUHardWare\x12\x10\n\x08gpu_name\x18\x01 \x01(\t\x12\x0f\n\x07quality\x18\x02 \x01(\x05\x12\x19\n\x11\x63hange_resolution\x18\x03 \x01(\x08\x12\x16\n\x0emax_resolution\x18\x04 \x01(\x05\x12\x0e\n\x06\x61\x64just\x18\x05 \x01(\t'
)




_CONFHARDWARECONFIG = _descriptor.Descriptor(
  name='ConfHardWareConfig',
  full_name='FunPlus.Common.Config.ConfHardWareConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='CPUHardWare', full_name='FunPlus.Common.Config.ConfHardWareConfig.CPUHardWare', index=0,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='GPUHardWare', full_name='FunPlus.Common.Config.ConfHardWareConfig.GPUHardWare', index=1,
      number=12, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=50,
  serialized_end=192,
)


_CONFCPUHARDWARE = _descriptor.Descriptor(
  name='ConfCPUHardWare',
  full_name='FunPlus.Common.Config.ConfCPUHardWare',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='cpu_name', full_name='FunPlus.Common.Config.ConfCPUHardWare.cpu_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='level', full_name='FunPlus.Common.Config.ConfCPUHardWare.level', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='adjust', full_name='FunPlus.Common.Config.ConfCPUHardWare.adjust', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=194,
  serialized_end=260,
)


_CONFGPUHARDWARE = _descriptor.Descriptor(
  name='ConfGPUHardWare',
  full_name='FunPlus.Common.Config.ConfGPUHardWare',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='gpu_name', full_name='FunPlus.Common.Config.ConfGPUHardWare.gpu_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='quality', full_name='FunPlus.Common.Config.ConfGPUHardWare.quality', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='change_resolution', full_name='FunPlus.Common.Config.ConfGPUHardWare.change_resolution', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_resolution', full_name='FunPlus.Common.Config.ConfGPUHardWare.max_resolution', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='adjust', full_name='FunPlus.Common.Config.ConfGPUHardWare.adjust', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=262,
  serialized_end=381,
)

_CONFHARDWARECONFIG.fields_by_name['CPUHardWare'].message_type = _CONFCPUHARDWARE
_CONFHARDWARECONFIG.fields_by_name['GPUHardWare'].message_type = _CONFGPUHARDWARE
DESCRIPTOR.message_types_by_name['ConfHardWareConfig'] = _CONFHARDWARECONFIG
DESCRIPTOR.message_types_by_name['ConfCPUHardWare'] = _CONFCPUHARDWARE
DESCRIPTOR.message_types_by_name['ConfGPUHardWare'] = _CONFGPUHARDWARE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ConfHardWareConfig = _reflection.GeneratedProtocolMessageType('ConfHardWareConfig', (_message.Message,), {
  'DESCRIPTOR' : _CONFHARDWARECONFIG,
  '__module__' : 'hard_ware_config_pb2'
  # @@protoc_insertion_point(class_scope:FunPlus.Common.Config.ConfHardWareConfig)
  })
_sym_db.RegisterMessage(ConfHardWareConfig)

ConfCPUHardWare = _reflection.GeneratedProtocolMessageType('ConfCPUHardWare', (_message.Message,), {
  'DESCRIPTOR' : _CONFCPUHARDWARE,
  '__module__' : 'hard_ware_config_pb2'
  # @@protoc_insertion_point(class_scope:FunPlus.Common.Config.ConfCPUHardWare)
  })
_sym_db.RegisterMessage(ConfCPUHardWare)

ConfGPUHardWare = _reflection.GeneratedProtocolMessageType('ConfGPUHardWare', (_message.Message,), {
  'DESCRIPTOR' : _CONFGPUHARDWARE,
  '__module__' : 'hard_ware_config_pb2'
  # @@protoc_insertion_point(class_scope:FunPlus.Common.Config.ConfGPUHardWare)
  })
_sym_db.RegisterMessage(ConfGPUHardWare)


# @@protoc_insertion_point(module_scope)
