{"version":3,"file":"chunk.a484fed718d5f0b5109e.js","sources":["webpack:///./src/components/ha-icon-button.ts"],"sourcesContent":["import \"@material/mwc-icon-button\";\nimport {\n  customElement,\n  html,\n  TemplateResult,\n  property,\n  LitElement,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"./ha-icon\";\n\n@customElement(\"ha-icon-button\")\nexport class HaIconButton extends LitElement {\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  @property({ type: String }) icon = \"\";\n\n  @property({ type: String }) label = \"\";\n\n  protected createRenderRoot() {\n    return this.attachShadow({ mode: \"open\", delegatesFocus: true });\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <mwc-icon-button .label=${this.label} .disabled=${this.disabled}>\n        <ha-icon .icon=${this.icon}></ha-icon>\n      </mwc-icon-button>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: inline-block;\n        outline: none;\n      }\n      :host([disabled]) {\n        pointer-events: none;\n      }\n      mwc-icon-button {\n        --mdc-theme-on-primary: currentColor;\n        --mdc-theme-text-disabled-on-light: var(--disabled-text-color);\n      }\n      ha-icon {\n        --ha-icon-display: inline;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-button\": HaIconButton;\n  }\n}\n"],"mappings":"AAaA","sourceRoot":""}