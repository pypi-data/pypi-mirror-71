{"version":3,"file":"chunk.2a81401bf4d7bbdc8042.js","sources":["webpack:///./src/panels/config/logs/error-log-card.ts","webpack:///./src/panels/lovelace/cards/hui-safe-mode-card.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport \"../../../components/ha-icon-button\";\nimport {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fetchErrorLog } from \"../../../data/error_log\";\nimport { HomeAssistant } from \"../../../types\";\n\nclass ErrorLogCard extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _errorLog?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      <p class=\"error-log-intro\">\n        ${this._errorLog\n          ? html`\n              <ha-icon-button\n                icon=\"hass:refresh\"\n                @click=${this._refreshErrorLog}\n              ></ha-icon-button>\n            `\n          : html`\n              <mwc-button raised @click=${this._refreshErrorLog}>\n                ${this.hass.localize(\"ui.panel.config.logs.load_full_log\")}\n              </mwc-button>\n            `}\n      </p>\n      <div class=\"error-log\">${this._errorLog}</div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n\n    if (this.hass?.config.safe_mode) {\n      this._refreshErrorLog();\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .error-log-intro {\n        text-align: center;\n        margin: 16px;\n      }\n\n      ha-icon-button {\n        float: right;\n      }\n\n      .error-log {\n        @apply --paper-font-code)\n          clear: both;\n        white-space: pre-wrap;\n        margin: 16px;\n      }\n    `;\n  }\n\n  private async _refreshErrorLog(): Promise<void> {\n    this._errorLog = this.hass.localize(\"ui.panel.config.logs.loading_log\");\n    const log = await fetchErrorLog(this.hass!);\n    this._errorLog =\n      log || this.hass.localize(\"ui.panel.config.logs.no_errors\");\n  }\n}\n\ncustomElements.define(\"error-log-card\", ErrorLogCard);\n","import \"@material/mwc-button\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../../../components/ha-card\";\nimport { HomeAssistant } from \"../../../types\";\nimport \"../../config/logs/error-log-card\";\nimport { LovelaceCard } from \"../types\";\n\n@customElement(\"hui-safe-mode-card\")\nexport class HuiSafeModeCard extends LitElement implements LovelaceCard {\n  @property() public hass?: HomeAssistant;\n\n  public getCardSize(): number {\n    return 3;\n  }\n\n  public setConfig(_config: any): void {\n    // No config necessary.\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-card\n        .header=${this.hass!.localize(\n          \"ui.panel.lovelace.cards.safe-mode.header\"\n        )}\n      >\n        <div class=\"card-content\">\n          ${this.hass!.localize(\n            \"ui.panel.lovelace.cards.safe-mode.description\"\n          )}\n        </div>\n        <error-log-card .hass=${this.hass}></error-log-card>\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-card {\n        --ha-card-header-color: var(--primary-color);\n      }\n      error-log-card {\n        display: block;\n        padding-bottom: 16px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-safe-mode-card\": HuiSafeModeCard;\n  }\n}\n"],"mappings":"AAaA;;AAQA;;;AAIA;;AAGA;AACA;AACA;;;;AAIA;AAIA;;;;;;;;;;;;;;;;AA4BA;;ACpCA;;;AAKA;;AAIA;;AAvBA;;;;;;;;AAAA","sourceRoot":""}