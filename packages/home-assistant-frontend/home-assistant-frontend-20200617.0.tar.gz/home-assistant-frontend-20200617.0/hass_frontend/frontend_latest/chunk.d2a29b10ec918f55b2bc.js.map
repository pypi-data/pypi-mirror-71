{"version":3,"file":"chunk.d2a29b10ec918f55b2bc.js","sources":["webpack:///./src/data/zha.ts","webpack:///./src/panels/config/devices/device-detail/integration-elements/ha-device-info-zha.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { HomeAssistant } from \"../types\";\n\nexport interface ZHAEntityReference extends HassEntity {\n  name: string;\n  original_name?: string;\n}\n\nexport interface ZHADevice {\n  name: string;\n  ieee: string;\n  nwk: string;\n  lqi: string;\n  rssi: string;\n  last_seen: string;\n  manufacturer: string;\n  model: string;\n  quirk_applied: boolean;\n  quirk_class: string;\n  entities: ZHAEntityReference[];\n  manufacturer_code: number;\n  device_reg_id: string;\n  user_given_name?: string;\n  power_source?: string;\n  area_id?: string;\n  device_type: string;\n  signature: any;\n}\n\nexport interface ZHADeviceEndpoint {\n  device: ZHADevice;\n  endpoint_id: number;\n  entities: ZHAEntityReference[];\n}\n\nexport interface Attribute {\n  name: string;\n  id: number;\n}\n\nexport interface Cluster {\n  name: string;\n  id: number;\n  endpoint_id: number;\n  type: string;\n}\n\nexport interface Command {\n  name: string;\n  id: number;\n  type: string;\n}\n\nexport interface ReadAttributeServiceData {\n  ieee: string;\n  endpoint_id: number;\n  cluster_id: number;\n  cluster_type: string;\n  attribute: number;\n  manufacturer?: number;\n}\n\nexport interface ZHAGroup {\n  name: string;\n  group_id: number;\n  members: ZHADeviceEndpoint[];\n}\n\nexport interface ZHAGroupMember {\n  ieee: string;\n  endpoint_id: string;\n}\n\nexport const reconfigureNode = (\n  hass: HomeAssistant,\n  ieeeAddress: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"zha/devices/reconfigure\",\n    ieee: ieeeAddress,\n  });\n\nexport const fetchAttributesForCluster = (\n  hass: HomeAssistant,\n  ieeeAddress: string,\n  endpointId: number,\n  clusterId: number,\n  clusterType: string\n): Promise<Attribute[]> =>\n  hass.callWS({\n    type: \"zha/devices/clusters/attributes\",\n    ieee: ieeeAddress,\n    endpoint_id: endpointId,\n    cluster_id: clusterId,\n    cluster_type: clusterType,\n  });\n\nexport const fetchDevices = (hass: HomeAssistant): Promise<ZHADevice[]> =>\n  hass.callWS({\n    type: \"zha/devices\",\n  });\n\nexport const fetchZHADevice = (\n  hass: HomeAssistant,\n  ieeeAddress: string\n): Promise<ZHADevice> =>\n  hass.callWS({\n    type: \"zha/device\",\n    ieee: ieeeAddress,\n  });\n\nexport const fetchBindableDevices = (\n  hass: HomeAssistant,\n  ieeeAddress: string\n): Promise<ZHADevice[]> =>\n  hass.callWS({\n    type: \"zha/devices/bindable\",\n    ieee: ieeeAddress,\n  });\n\nexport const bindDevices = (\n  hass: HomeAssistant,\n  sourceIEEE: string,\n  targetIEEE: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"zha/devices/bind\",\n    source_ieee: sourceIEEE,\n    target_ieee: targetIEEE,\n  });\n\nexport const unbindDevices = (\n  hass: HomeAssistant,\n  sourceIEEE: string,\n  targetIEEE: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"zha/devices/unbind\",\n    source_ieee: sourceIEEE,\n    target_ieee: targetIEEE,\n  });\n\nexport const bindDeviceToGroup = (\n  hass: HomeAssistant,\n  deviceIEEE: string,\n  groupId: number,\n  clusters: Cluster[]\n): Promise<void> =>\n  hass.callWS({\n    type: \"zha/groups/bind\",\n    source_ieee: deviceIEEE,\n    group_id: groupId,\n    bindings: clusters,\n  });\n\nexport const unbindDeviceFromGroup = (\n  hass: HomeAssistant,\n  deviceIEEE: string,\n  groupId: number,\n  clusters: Cluster[]\n): Promise<void> =>\n  hass.callWS({\n    type: \"zha/groups/unbind\",\n    source_ieee: deviceIEEE,\n    group_id: groupId,\n    bindings: clusters,\n  });\n\nexport const readAttributeValue = (\n  hass: HomeAssistant,\n  data: ReadAttributeServiceData\n): Promise<string> => {\n  return hass.callWS({\n    ...data,\n    type: \"zha/devices/clusters/attributes/value\",\n  });\n};\n\nexport const fetchCommandsForCluster = (\n  hass: HomeAssistant,\n  ieeeAddress: string,\n  endpointId: number,\n  clusterId: number,\n  clusterType: string\n): Promise<Command[]> =>\n  hass.callWS({\n    type: \"zha/devices/clusters/commands\",\n    ieee: ieeeAddress,\n    endpoint_id: endpointId,\n    cluster_id: clusterId,\n    cluster_type: clusterType,\n  });\n\nexport const fetchClustersForZhaNode = (\n  hass: HomeAssistant,\n  ieeeAddress: string\n): Promise<Cluster[]> =>\n  hass.callWS({\n    type: \"zha/devices/clusters\",\n    ieee: ieeeAddress,\n  });\n\nexport const fetchGroups = (hass: HomeAssistant): Promise<ZHAGroup[]> =>\n  hass.callWS({\n    type: \"zha/groups\",\n  });\n\nexport const removeGroups = (\n  hass: HomeAssistant,\n  groupIdsToRemove: number[]\n): Promise<ZHAGroup[]> =>\n  hass.callWS({\n    type: \"zha/group/remove\",\n    group_ids: groupIdsToRemove,\n  });\n\nexport const fetchGroup = (\n  hass: HomeAssistant,\n  groupId: number\n): Promise<ZHAGroup> =>\n  hass.callWS({\n    type: \"zha/group\",\n    group_id: groupId,\n  });\n\nexport const fetchGroupableDevices = (\n  hass: HomeAssistant\n): Promise<ZHADeviceEndpoint[]> =>\n  hass.callWS({\n    type: \"zha/devices/groupable\",\n  });\n\nexport const addMembersToGroup = (\n  hass: HomeAssistant,\n  groupId: number,\n  membersToAdd: ZHAGroupMember[]\n): Promise<ZHAGroup> =>\n  hass.callWS({\n    type: \"zha/group/members/add\",\n    group_id: groupId,\n    members: membersToAdd,\n  });\n\nexport const removeMembersFromGroup = (\n  hass: HomeAssistant,\n  groupId: number,\n  membersToRemove: ZHAGroupMember[]\n): Promise<ZHAGroup> =>\n  hass.callWS({\n    type: \"zha/group/members/remove\",\n    group_id: groupId,\n    members: membersToRemove,\n  });\n\nexport const addGroup = (\n  hass: HomeAssistant,\n  groupName: string,\n  membersToAdd?: ZHAGroupMember[]\n): Promise<ZHAGroup> =>\n  hass.callWS({\n    type: \"zha/group/add\",\n    group_name: groupName,\n    members: membersToAdd,\n  });\n","import {\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n  css,\n  PropertyValues,\n} from \"lit-element\";\nimport { DeviceRegistryEntry } from \"../../../../../data/device_registry\";\nimport { haStyle } from \"../../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../../types\";\nimport { ZHADevice, fetchZHADevice } from \"../../../../../data/zha\";\nimport { formatAsPaddedHex } from \"../../../integrations/integration-panels/zha/functions\";\n\n@customElement(\"ha-device-info-zha\")\nexport class HaDeviceActionsZha extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public device!: DeviceRegistryEntry;\n\n  @property() private _zhaDevice?: ZHADevice;\n\n  protected updated(changedProperties: PropertyValues) {\n    if (changedProperties.has(\"device\")) {\n      const zigbeeConnection = this.device.connections.find(\n        (conn) => conn[0] === \"zigbee\"\n      );\n      if (!zigbeeConnection) {\n        return;\n      }\n      fetchZHADevice(this.hass, zigbeeConnection[1]).then((device) => {\n        this._zhaDevice = device;\n      });\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this._zhaDevice) {\n      return html``;\n    }\n    return html`\n      <h4>Zigbee info</h4>\n      <div>IEEE: ${this._zhaDevice.ieee}</div>\n      <div>Nwk: ${formatAsPaddedHex(this._zhaDevice.nwk)}</div>\n      <div>Device Type: ${this._zhaDevice.device_type}</div>\n      <div>\n        LQI:\n        ${this._zhaDevice.lqi ||\n        this.hass!.localize(\"ui.dialogs.zha_device_info.unknown\")}\n      </div>\n      <div>\n        RSSI:\n        ${this._zhaDevice.rssi ||\n        this.hass!.localize(\"ui.dialogs.zha_device_info.unknown\")}\n      </div>\n      <div>\n        ${this.hass!.localize(\"ui.dialogs.zha_device_info.last_seen\")}:\n        ${this._zhaDevice.last_seen ||\n        this.hass!.localize(\"ui.dialogs.zha_device_info.unknown\")}\n      </div>\n      <div>\n        ${this.hass!.localize(\"ui.dialogs.zha_device_info.power_source\")}:\n        ${this._zhaDevice.power_source ||\n        this.hass!.localize(\"ui.dialogs.zha_device_info.unknown\")}\n      </div>\n      ${this._zhaDevice.quirk_applied\n        ? html`\n            <div>\n              ${this.hass!.localize(\"ui.dialogs.zha_device_info.quirk\")}:\n              ${this._zhaDevice.quirk_class}\n            </div>\n          `\n        : \"\"}\n    `;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        h4 {\n          margin-bottom: 4px;\n        }\n        div {\n          word-break: break-all;\n          margin-top: 2px;\n        }\n      `,\n    ];\n  }\n}\n"],"mappings":"AAyEA;;AC7BA;AACA;AACA;;;AAGA;;;;AAKA;;;AAIA;AACA;;;AAIA;AACA;;AAGA;;AAGA;AACA;;AAGA;AAlCA;;;;;;;;AAvBA","sourceRoot":""}