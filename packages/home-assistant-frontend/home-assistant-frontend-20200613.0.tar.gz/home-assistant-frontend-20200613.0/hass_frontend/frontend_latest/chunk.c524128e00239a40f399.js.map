{"version":3,"file":"chunk.c524128e00239a40f399.js","sources":["webpack:///./src/dialogs/generic/show-dialog-box.ts","webpack:///./src/panels/config/devices/device-detail/integration-elements/ha-device-actions-zha.ts"],"sourcesContent":["import { TemplateResult } from \"lit-html\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\ninterface BaseDialogParams {\n  confirmText?: string;\n  text?: string | TemplateResult;\n  title?: string;\n}\n\nexport interface AlertDialogParams extends BaseDialogParams {\n  confirm?: () => void;\n}\n\nexport interface ConfirmationDialogParams extends BaseDialogParams {\n  dismissText?: string;\n  confirm?: () => void;\n  cancel?: () => void;\n}\n\nexport interface PromptDialogParams extends BaseDialogParams {\n  inputLabel?: string;\n  inputType?: string;\n  defaultValue?: string;\n  confirm?: (out?: string) => void;\n}\n\nexport interface DialogParams\n  extends ConfirmationDialogParams,\n    PromptDialogParams {\n  confirm?: (out?: string) => void;\n  confirmation?: boolean;\n  prompt?: boolean;\n}\n\nexport const loadGenericDialog = () =>\n  import(/* webpackChunkName: \"confirmation\" */ \"./dialog-box\");\n\nconst showDialogHelper = (\n  element: HTMLElement,\n  dialogParams: DialogParams,\n  extra?: {\n    confirmation?: DialogParams[\"confirmation\"];\n    prompt?: DialogParams[\"prompt\"];\n  }\n) =>\n  new Promise((resolve) => {\n    const origCancel = dialogParams.cancel;\n    const origConfirm = dialogParams.confirm;\n\n    fireEvent(element, \"show-dialog\", {\n      dialogTag: \"dialog-box\",\n      dialogImport: loadGenericDialog,\n      dialogParams: {\n        ...dialogParams,\n        ...extra,\n        cancel: () => {\n          resolve(extra?.prompt ? null : false);\n          if (origCancel) {\n            origCancel();\n          }\n        },\n        confirm: (out) => {\n          resolve(extra?.prompt ? out : true);\n          if (origConfirm) {\n            origConfirm(out);\n          }\n        },\n      },\n    });\n  });\n\nexport const showAlertDialog = (\n  element: HTMLElement,\n  dialogParams: AlertDialogParams\n) => showDialogHelper(element, dialogParams);\n\nexport const showConfirmationDialog = (\n  element: HTMLElement,\n  dialogParams: ConfirmationDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { confirmation: true }) as Promise<\n    boolean\n  >;\n\nexport const showPromptDialog = (\n  element: HTMLElement,\n  dialogParams: PromptDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { prompt: true }) as Promise<\n    null | string\n  >;\n","import {\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n  css,\n  PropertyValues,\n} from \"lit-element\";\nimport { DeviceRegistryEntry } from \"../../../../../data/device_registry\";\nimport { haStyle } from \"../../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../../types\";\nimport {\n  ZHADevice,\n  fetchZHADevice,\n  reconfigureNode,\n} from \"../../../../../data/zha\";\nimport { navigate } from \"../../../../../common/navigate\";\nimport { showZHADeviceZigbeeInfoDialog } from \"../../../../../dialogs/zha-device-zigbee-signature-dialog/show-dialog-zha-device-zigbee-info\";\nimport { showConfirmationDialog } from \"../../../../../dialogs/generic/show-dialog-box\";\n\n@customElement(\"ha-device-actions-zha\")\nexport class HaDeviceActionsZha extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public device!: DeviceRegistryEntry;\n\n  @property() private _zhaDevice?: ZHADevice;\n\n  protected updated(changedProperties: PropertyValues) {\n    if (changedProperties.has(\"device\")) {\n      const zigbeeConnection = this.device.connections.find(\n        (conn) => conn[0] === \"zigbee\"\n      );\n      if (!zigbeeConnection) {\n        return;\n      }\n      fetchZHADevice(this.hass, zigbeeConnection[1]).then((device) => {\n        this._zhaDevice = device;\n      });\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this._zhaDevice) {\n      return html``;\n    }\n    return html`\n      ${this._zhaDevice.device_type !== \"Coordinator\"\n        ? html`\n            <mwc-button @click=${this._onReconfigureNodeClick}>\n              ${this.hass!.localize(\n                \"ui.dialogs.zha_device_info.buttons.reconfigure\"\n              )}\n            </mwc-button>\n          `\n        : \"\"}\n      ${this._zhaDevice.power_source === \"Mains\" &&\n      (this._zhaDevice.device_type === \"Router\" ||\n        this._zhaDevice.device_type === \"Coordinator\")\n        ? html`\n            <mwc-button @click=${this._onAddDevicesClick}>\n              ${this.hass!.localize(\"ui.dialogs.zha_device_info.buttons.add\")}\n            </mwc-button>\n          `\n        : \"\"}\n      ${this._zhaDevice.device_type !== \"Coordinator\"\n        ? html`\n            <mwc-button @click=${this._handleZigbeeInfoClicked}>\n              ${this.hass!.localize(\n                \"ui.dialogs.zha_device_info.buttons.zigbee_information\"\n              )}\n            </mwc-button>\n            <mwc-button class=\"warning\" @click=${this._removeDevice}>\n              ${this.hass!.localize(\n                \"ui.dialogs.zha_device_info.buttons.remove\"\n              )}\n            </mwc-button>\n          `\n        : \"\"}\n    `;\n  }\n\n  private async _onReconfigureNodeClick(): Promise<void> {\n    if (!this.hass) {\n      return;\n    }\n    reconfigureNode(this.hass, this._zhaDevice!.ieee);\n  }\n\n  private _onAddDevicesClick() {\n    navigate(this, \"/config/zha/add/\" + this._zhaDevice!.ieee);\n  }\n\n  private async _handleZigbeeInfoClicked() {\n    showZHADeviceZigbeeInfoDialog(this, { device: this._zhaDevice! });\n  }\n\n  private async _removeDevice() {\n    const confirmed = await showConfirmationDialog(this, {\n      text: this.hass.localize(\n        \"ui.dialogs.zha_device_info.confirmations.remove\"\n      ),\n    });\n\n    if (!confirmed) {\n      return;\n    }\n\n    this.hass.callService(\"zha\", \"remove\", {\n      ieee_address: this._zhaDevice!.ieee,\n    });\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        :host {\n          display: flex;\n          flex-direction: column;\n          align-items: flex-start;\n        }\n      `,\n    ];\n  }\n}\n"],"mappings":"AACA;ACgDA;AAEA;AACA;;AAKA;AACA;AAIA;AACA;;;AAIA;AAEA;AACA;;AAIA;AACA;;AAKA;AAlCA;;;;;;AAvBA","sourceRoot":""}