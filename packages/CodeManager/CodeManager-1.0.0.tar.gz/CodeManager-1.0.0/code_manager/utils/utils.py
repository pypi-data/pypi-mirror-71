#!/usr/bin/python
import os
import re
import sys


def sanitize_input_variable(var):
    var = os.path.expanduser(var)
    var = os.path.expandvars(var)
    return var


def recursive_items(dictionary, dicts=False):
    assert dictionary is not None

    if isinstance(dictionary, dict):
        for key, value in dictionary.items():
            if isinstance(value, dict):
                if dicts:
                    yield (key, value)
                    yield from recursive_items(value, dicts=dicts)
                else:
                    yield from recursive_items(value, dicts=dicts)
            elif isinstance(value, list):
                for val in value:
                    if isinstance(val, (dict, list)):
                        yield from recursive_items(val, dicts=dicts)
                yield (key, value)
            else:
                yield (key, value)
    elif isinstance(dictionary, list):
        for val in dictionary:
            if isinstance(val, (dict, list)):
                yield from recursive_items(val, dicts=dicts)
        yield (None, dictionary)


def merge_two_dicts(first, second):
    assert first is not None

    new = first.copy()
    new.update(second)
    return new


def flatten(iterable):
    res = []

    def loop(array):
        for val in array:
            if isinstance(val, list):
                loop(val)
            else:
                res.append(val)
    loop(iterable)
    return res


def get_emacs_load_file():

    load_file = os.path.expanduser('~/.emacs.d/code-manager-packages.el')
    if not os.path.isfile(load_file):
        with open(load_file, 'w+') as file:
            file.write(';; This file was generated by code-manager\n')
            file.write(';; All the packages of code-manager \
will be loaded here\n')
            file.write(';; Do not edit this file\n\n')

    emacs_init = os.path.expanduser('~/.emacs')
    if not os.path.isfile(emacs_init):
        emacs_init = '~/.emacs.el'
    if not os.path.isfile(emacs_init):
        emacs_init = '~/.emacs.d/init.el'
    emacs_init = os.path.expanduser(emacs_init)

    with open(emacs_init) as file:
        content = file.read()
        match = re.search('(load-file \"~/.emacs.d/code-manager-packages.el\")', content)

    if not match:
        with open(emacs_init, 'a') as file:
            file.write('\n\n;; This \'load-file\' is added by code-manager \n')
            file.write(';; It loads the packages installed by code-manager\n')
            file.write(';; Do not delete the line nor the file\n')
            file.write('(load-file \"~/.emacs.d/code-manager-packages.el\")')

    return load_file


def is_venv():
    return hasattr(sys, 'real_prefix') or (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix)


def venv():
    if is_venv():
        return sys.prefix
    else:
        return None
