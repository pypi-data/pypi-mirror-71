#!{{ ansible_python['executable'] }}

# {{ ansible_managed }}

from __future__ import print_function
from json import loads, dumps
from sys import exit
import subprocess
import os
import re

docker_pkg = loads('''{{ docker__packagename | to_nice_json }}''')


def cmd_exists(cmd):
    return any(
        os.access(os.path.join(path, cmd), os.X_OK)
        for path in os.environ["PATH"].split(os.pathsep)
    )


output = {'installed': cmd_exists('docker')}

try:
    version_stdout = subprocess.check_output(
        ["dpkg-query", "-W", "-f=${Version}\n'", docker_pkg]
    ).decode('utf-8').split('+')[0]

    match = re.search(r'^(?:[^:]:)?(?P<docker_version>[^~]+)', version_stdout)
    if match:
        output['version'] = match.group('docker_version')

except Exception:
    pass

print(dumps(output, sort_keys=True, indent=2))
