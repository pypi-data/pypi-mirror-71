# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _TotalVariationPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkProxTVImageFilterPython
else:
    import _itkProxTVImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkProxTVImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkProxTVImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython

def itkProxTVImageFilterID2ID2_New():
    return itkProxTVImageFilterID2ID2.New()

class itkProxTVImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkProxTVImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID2ID2_Clone)
    SetMaximumNumberOfIterations = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID2ID2_SetMaximumNumberOfIterations)
    GetMaximumNumberOfIterations = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID2ID2_GetMaximumNumberOfIterations)
    SetWeights = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID2ID2_SetWeights)
    GetWeights = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID2ID2_GetWeights)
    SetNorms = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID2ID2_SetNorms)
    GetNorms = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID2ID2_GetNorms)
    __swig_destroy__ = _itkProxTVImageFilterPython.delete_itkProxTVImageFilterID2ID2
    cast = _swig_new_static_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkProxTVImageFilterID2ID2

        Create a new object of the class itkProxTVImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProxTVImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProxTVImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProxTVImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProxTVImageFilterID2ID2 in _itkProxTVImageFilterPython:
_itkProxTVImageFilterPython.itkProxTVImageFilterID2ID2_swigregister(itkProxTVImageFilterID2ID2)
itkProxTVImageFilterID2ID2___New_orig__ = _itkProxTVImageFilterPython.itkProxTVImageFilterID2ID2___New_orig__
itkProxTVImageFilterID2ID2_cast = _itkProxTVImageFilterPython.itkProxTVImageFilterID2ID2_cast


def itkProxTVImageFilterID3ID3_New():
    return itkProxTVImageFilterID3ID3.New()

class itkProxTVImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkProxTVImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID3ID3_Clone)
    SetMaximumNumberOfIterations = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID3ID3_SetMaximumNumberOfIterations)
    GetMaximumNumberOfIterations = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID3ID3_GetMaximumNumberOfIterations)
    SetWeights = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID3ID3_SetWeights)
    GetWeights = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID3ID3_GetWeights)
    SetNorms = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID3ID3_SetNorms)
    GetNorms = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID3ID3_GetNorms)
    __swig_destroy__ = _itkProxTVImageFilterPython.delete_itkProxTVImageFilterID3ID3
    cast = _swig_new_static_method(_itkProxTVImageFilterPython.itkProxTVImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkProxTVImageFilterID3ID3

        Create a new object of the class itkProxTVImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProxTVImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProxTVImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProxTVImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProxTVImageFilterID3ID3 in _itkProxTVImageFilterPython:
_itkProxTVImageFilterPython.itkProxTVImageFilterID3ID3_swigregister(itkProxTVImageFilterID3ID3)
itkProxTVImageFilterID3ID3___New_orig__ = _itkProxTVImageFilterPython.itkProxTVImageFilterID3ID3___New_orig__
itkProxTVImageFilterID3ID3_cast = _itkProxTVImageFilterPython.itkProxTVImageFilterID3ID3_cast


def itkProxTVImageFilterIF2IF2_New():
    return itkProxTVImageFilterIF2IF2.New()

class itkProxTVImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkProxTVImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF2IF2_Clone)
    SetMaximumNumberOfIterations = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF2IF2_SetMaximumNumberOfIterations)
    GetMaximumNumberOfIterations = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF2IF2_GetMaximumNumberOfIterations)
    SetWeights = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF2IF2_SetWeights)
    GetWeights = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF2IF2_GetWeights)
    SetNorms = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF2IF2_SetNorms)
    GetNorms = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF2IF2_GetNorms)
    __swig_destroy__ = _itkProxTVImageFilterPython.delete_itkProxTVImageFilterIF2IF2
    cast = _swig_new_static_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkProxTVImageFilterIF2IF2

        Create a new object of the class itkProxTVImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProxTVImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProxTVImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProxTVImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProxTVImageFilterIF2IF2 in _itkProxTVImageFilterPython:
_itkProxTVImageFilterPython.itkProxTVImageFilterIF2IF2_swigregister(itkProxTVImageFilterIF2IF2)
itkProxTVImageFilterIF2IF2___New_orig__ = _itkProxTVImageFilterPython.itkProxTVImageFilterIF2IF2___New_orig__
itkProxTVImageFilterIF2IF2_cast = _itkProxTVImageFilterPython.itkProxTVImageFilterIF2IF2_cast


def itkProxTVImageFilterIF3IF3_New():
    return itkProxTVImageFilterIF3IF3.New()

class itkProxTVImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkProxTVImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF3IF3_Clone)
    SetMaximumNumberOfIterations = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF3IF3_SetMaximumNumberOfIterations)
    GetMaximumNumberOfIterations = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF3IF3_GetMaximumNumberOfIterations)
    SetWeights = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF3IF3_SetWeights)
    GetWeights = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF3IF3_GetWeights)
    SetNorms = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF3IF3_SetNorms)
    GetNorms = _swig_new_instance_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF3IF3_GetNorms)
    __swig_destroy__ = _itkProxTVImageFilterPython.delete_itkProxTVImageFilterIF3IF3
    cast = _swig_new_static_method(_itkProxTVImageFilterPython.itkProxTVImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkProxTVImageFilterIF3IF3

        Create a new object of the class itkProxTVImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProxTVImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProxTVImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProxTVImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProxTVImageFilterIF3IF3 in _itkProxTVImageFilterPython:
_itkProxTVImageFilterPython.itkProxTVImageFilterIF3IF3_swigregister(itkProxTVImageFilterIF3IF3)
itkProxTVImageFilterIF3IF3___New_orig__ = _itkProxTVImageFilterPython.itkProxTVImageFilterIF3IF3___New_orig__
itkProxTVImageFilterIF3IF3_cast = _itkProxTVImageFilterPython.itkProxTVImageFilterIF3IF3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def prox_tv_image_filter(*args, **kwargs):
    """Procedural interface for ProxTVImageFilter"""
    import itk
    instance = itk.ProxTVImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def prox_tv_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ProxTVImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ProxTVImageFilter.values()[0]
    else:
        filter_object = itk.ProxTVImageFilter

    prox_tv_image_filter.__doc__ = filter_object.__doc__
    prox_tv_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    prox_tv_image_filter.__doc__ += "Available Keyword Arguments:\n"
    prox_tv_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



