# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: aggregates/disk/disk.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='aggregates/disk/disk.proto',
  package='disk',
  syntax='proto3',
  serialized_pb=_b('\n\x1a\x61ggregates/disk/disk.proto\x12\x04\x64isk\"\x1a\n\x08\x44iskList\x12\x0e\n\x06srn_ip\x18\x01 \x01(\t\"\xe2\x01\n\x10\x44iskListResponse\x12\x30\n\x05\x64isks\x18\x01 \x03(\x0b\x32!.disk.DiskListResponse.DisksEntry\x12\x30\n\x05pools\x18\x02 \x03(\x0b\x32!.disk.DiskListResponse.PoolsEntry\x1a<\n\nDisksEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1d\n\x05value\x18\x02 \x01(\x0b\x32\x0e.disk.DiskInfo:\x02\x38\x01\x1a,\n\nPoolsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x04:\x02\x38\x01\"L\n\x08\x44iskInfo\x12\x0c\n\x04size\x18\x01 \x01(\x04\x12\x12\n\nis_claimed\x18\x02 \x01(\x08\x12\x0f\n\x07vg_name\x18\x03 \x01(\t\x12\r\n\x05owner\x18\x04 \x01(\tB\x1a\n\x10io.safehaven.apiP\x01Z\x04\x64iskb\x06proto3')
)




_DISKLIST = _descriptor.Descriptor(
  name='DiskList',
  full_name='disk.DiskList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='srn_ip', full_name='disk.DiskList.srn_ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=36,
  serialized_end=62,
)


_DISKLISTRESPONSE_DISKSENTRY = _descriptor.Descriptor(
  name='DisksEntry',
  full_name='disk.DiskListResponse.DisksEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='disk.DiskListResponse.DisksEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='disk.DiskListResponse.DisksEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=185,
  serialized_end=245,
)

_DISKLISTRESPONSE_POOLSENTRY = _descriptor.Descriptor(
  name='PoolsEntry',
  full_name='disk.DiskListResponse.PoolsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='disk.DiskListResponse.PoolsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='disk.DiskListResponse.PoolsEntry.value', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=247,
  serialized_end=291,
)

_DISKLISTRESPONSE = _descriptor.Descriptor(
  name='DiskListResponse',
  full_name='disk.DiskListResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='disks', full_name='disk.DiskListResponse.disks', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pools', full_name='disk.DiskListResponse.pools', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_DISKLISTRESPONSE_DISKSENTRY, _DISKLISTRESPONSE_POOLSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=65,
  serialized_end=291,
)


_DISKINFO = _descriptor.Descriptor(
  name='DiskInfo',
  full_name='disk.DiskInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='size', full_name='disk.DiskInfo.size', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_claimed', full_name='disk.DiskInfo.is_claimed', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vg_name', full_name='disk.DiskInfo.vg_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='owner', full_name='disk.DiskInfo.owner', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=293,
  serialized_end=369,
)

_DISKLISTRESPONSE_DISKSENTRY.fields_by_name['value'].message_type = _DISKINFO
_DISKLISTRESPONSE_DISKSENTRY.containing_type = _DISKLISTRESPONSE
_DISKLISTRESPONSE_POOLSENTRY.containing_type = _DISKLISTRESPONSE
_DISKLISTRESPONSE.fields_by_name['disks'].message_type = _DISKLISTRESPONSE_DISKSENTRY
_DISKLISTRESPONSE.fields_by_name['pools'].message_type = _DISKLISTRESPONSE_POOLSENTRY
DESCRIPTOR.message_types_by_name['DiskList'] = _DISKLIST
DESCRIPTOR.message_types_by_name['DiskListResponse'] = _DISKLISTRESPONSE
DESCRIPTOR.message_types_by_name['DiskInfo'] = _DISKINFO
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DiskList = _reflection.GeneratedProtocolMessageType('DiskList', (_message.Message,), dict(
  DESCRIPTOR = _DISKLIST,
  __module__ = 'aggregates.disk.disk_pb2'
  # @@protoc_insertion_point(class_scope:disk.DiskList)
  ))
_sym_db.RegisterMessage(DiskList)

DiskListResponse = _reflection.GeneratedProtocolMessageType('DiskListResponse', (_message.Message,), dict(

  DisksEntry = _reflection.GeneratedProtocolMessageType('DisksEntry', (_message.Message,), dict(
    DESCRIPTOR = _DISKLISTRESPONSE_DISKSENTRY,
    __module__ = 'aggregates.disk.disk_pb2'
    # @@protoc_insertion_point(class_scope:disk.DiskListResponse.DisksEntry)
    ))
  ,

  PoolsEntry = _reflection.GeneratedProtocolMessageType('PoolsEntry', (_message.Message,), dict(
    DESCRIPTOR = _DISKLISTRESPONSE_POOLSENTRY,
    __module__ = 'aggregates.disk.disk_pb2'
    # @@protoc_insertion_point(class_scope:disk.DiskListResponse.PoolsEntry)
    ))
  ,
  DESCRIPTOR = _DISKLISTRESPONSE,
  __module__ = 'aggregates.disk.disk_pb2'
  # @@protoc_insertion_point(class_scope:disk.DiskListResponse)
  ))
_sym_db.RegisterMessage(DiskListResponse)
_sym_db.RegisterMessage(DiskListResponse.DisksEntry)
_sym_db.RegisterMessage(DiskListResponse.PoolsEntry)

DiskInfo = _reflection.GeneratedProtocolMessageType('DiskInfo', (_message.Message,), dict(
  DESCRIPTOR = _DISKINFO,
  __module__ = 'aggregates.disk.disk_pb2'
  # @@protoc_insertion_point(class_scope:disk.DiskInfo)
  ))
_sym_db.RegisterMessage(DiskInfo)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\020io.safehaven.apiP\001Z\004disk'))
_DISKLISTRESPONSE_DISKSENTRY.has_options = True
_DISKLISTRESPONSE_DISKSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_DISKLISTRESPONSE_POOLSENTRY.has_options = True
_DISKLISTRESPONSE_POOLSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
# @@protoc_insertion_point(module_scope)
