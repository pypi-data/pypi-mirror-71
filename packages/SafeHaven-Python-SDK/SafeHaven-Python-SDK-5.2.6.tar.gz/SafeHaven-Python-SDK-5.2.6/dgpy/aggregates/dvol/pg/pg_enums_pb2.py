# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: aggregates/dvol/pg/pg_enums.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='aggregates/dvol/pg/pg_enums.proto',
  package='pg.enums',
  syntax='proto3',
  serialized_pb=_b('\n!aggregates/dvol/pg/pg_enums.proto\x12\x08pg.enums*6\n\x0eProtectionType\x12\x0c\n\x08LEGACYPG\x10\x00\x12\t\n\x05\x41WSPG\x10\x01\x12\x0b\n\x07\x41ZUREPG\x10\x02\x42\x37\n\x16io.safehaven.api.enumsB\x07PgEnumsP\x00Z\x12\x61ggregates/dvol/pgb\x06proto3')
)

_PROTECTIONTYPE = _descriptor.EnumDescriptor(
  name='ProtectionType',
  full_name='pg.enums.ProtectionType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LEGACYPG', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AWSPG', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AZUREPG', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=47,
  serialized_end=101,
)
_sym_db.RegisterEnumDescriptor(_PROTECTIONTYPE)

ProtectionType = enum_type_wrapper.EnumTypeWrapper(_PROTECTIONTYPE)
LEGACYPG = 0
AWSPG = 1
AZUREPG = 2


DESCRIPTOR.enum_types_by_name['ProtectionType'] = _PROTECTIONTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\026io.safehaven.api.enumsB\007PgEnumsP\000Z\022aggregates/dvol/pg'))
# @@protoc_insertion_point(module_scope)
