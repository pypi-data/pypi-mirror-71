// SAL_VERSION=4.2.0 XML_VERSION=6.0.0
module Hexapod {
struct actuators_790ace91 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	calibrated[6]; // @Metadata=(Units="um",Description="Linear encoder readings from each hexapod actuator (x1;x2;x3;x4;x5;x6) in microns")
	  double	raw[6]; // @Metadata=(Units="dimensionless",Description="Linear encoder readings from each hexapod actuator (x1;x2;x3;x4;x5;x6)in counts")
	};
#pragma keylist actuators_790ace91 HexapodID
struct application_440bca9e {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	demand[6]; // @Metadata=(Units="dimensionless",Description="Commanded hexapod position in order (X; Y; Z; RX; RY; RZ). Linear positions are in microns; angular positions are in degrees.")
	  double	position[6]; // @Metadata=(Units="dimensionless",Description="Actual hexapod position; in order (X; Y; Z; RX; RY; RZ). Linear positions are in microns; angular positions are in degrees.")
	  double	error[6]; // @Metadata=(Units="dimensionless",Description="Position error (position - demand); in order (x1;x2;x3;x4;x5;x6). Linear positions are in microns; angular positions are in degrees.")
	};
#pragma keylist application_440bca9e HexapodID
struct command_abort_9719a660 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_abort_9719a660 HexapodID
struct command_clearError_fa9416af {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	ignored; // @Metadata=(Units="dimensionless",Description="Ignored.")
	};
#pragma keylist command_clearError_fa9416af HexapodID
struct command_configureAcceleration_b9e46f4f {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	accmax; // @Metadata=(Units="um/s2",Description="Maximum acceleration.")
	};
#pragma keylist command_configureAcceleration_b9e46f4f HexapodID
struct command_configureLimits_7df42e79 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	xymax; // @Metadata=(Units="um",Description="xy max")
	  double	zmin; // @Metadata=(Units="um",Description="z min")
	  double	zmax; // @Metadata=(Units="um",Description="z max")
	  double	uvmax; // @Metadata=(Units="deg",Description="uv max")
	  double	wmin; // @Metadata=(Units="deg",Description="w min")
	  double	wmax; // @Metadata=(Units="deg",Description="w max")
	};
#pragma keylist command_configureLimits_7df42e79 HexapodID
struct command_configureVelocity_d5dc0e48 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	xymax; // @Metadata=(Units="um/s",Description="xymax")
	  double	rxrymax; // @Metadata=(Units="deg/s",Description="rxrymax")
	  double	zmax; // @Metadata=(Units="um/s",Description="zmax")
	  double	rzmax; // @Metadata=(Units="deg/s",Description="rzmax")
	};
#pragma keylist command_configureVelocity_d5dc0e48 HexapodID
struct command_disable_f251439e {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_disable_f251439e HexapodID
struct command_enable_b7a07b85 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_enable_b7a07b85 HexapodID
struct command_enterControl_2ce5596a {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_enterControl_2ce5596a HexapodID
struct command_exitControl_a7e191f7 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_exitControl_a7e191f7 HexapodID
struct command_move_86469b95 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	x; // @Metadata=(Units="um",Description="x position")
	  double	y; // @Metadata=(Units="um",Description="y position")
	  double	z; // @Metadata=(Units="um",Description="z position")
	  double	u; // @Metadata=(Units="deg",Description="Rotation about x")
	  double	v; // @Metadata=(Units="deg",Description="Rotation about y")
	  double	w; // @Metadata=(Units="deg",Description="Rotation about z")
	  boolean	sync; // @Metadata=(Units="dimensionless",Description="Synchronize motion so that all actuators start and stop moving at the same time?")
	};
#pragma keylist command_move_86469b95 HexapodID
struct command_moveLUT_687c3860 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	elevation; // @Metadata=(Units="deg",Description="Telescope elevation")
	  double	azimuth; // @Metadata=(Units="deg",Description="Telescope azimuth")
	  double	temperature; // @Metadata=(Units="Celsius",Description="Ambient temperature")
	  double	x; // @Metadata=(Units="um",Description="x position")
	  double	y; // @Metadata=(Units="um",Description="y position")
	  double	z; // @Metadata=(Units="um",Description="z position")
	  double	u; // @Metadata=(Units="deg",Description="Rotation about x")
	  double	v; // @Metadata=(Units="deg",Description="Rotation about y")
	  double	w; // @Metadata=(Units="deg",Description="Rotation about z")
	  boolean	sync; // @Metadata=(Units="dimensionless",Description="Synchronize motion so that all actuators start and stop moving at the same time?")
	};
#pragma keylist command_moveLUT_687c3860 HexapodID
struct command_offset_2ee8d3e6 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	x; // @Metadata=(Units="um",Description="Offset in x")
	  double	y; // @Metadata=(Units="um",Description="Offset in y")
	  double	z; // @Metadata=(Units="um",Description="Offset in z")
	  double	u; // @Metadata=(Units="deg",Description="Offset of rotation about x")
	  double	v; // @Metadata=(Units="deg",Description="Offset of rotation about y")
	  double	w; // @Metadata=(Units="deg",Description="Offset of rotation about z")
	  boolean	sync; // @Metadata=(Units="dimensionless",Description="Synchronize motion so that all actuators start and stop moving at the same time?")
	};
#pragma keylist command_offset_2ee8d3e6 HexapodID
struct command_offsetLUT_d95a4e76 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	elevation; // @Metadata=(Units="deg",Description="Telescope elevation")
	  double	azimuth; // @Metadata=(Units="deg",Description="Telescope azimuth")
	  double	temperature; // @Metadata=(Units="Celsius",Description="Ambient temperature")
	  double	x; // @Metadata=(Units="um",Description="Offset in x")
	  double	y; // @Metadata=(Units="um",Description="Offset in y")
	  double	z; // @Metadata=(Units="um",Description="Offset in z")
	  double	u; // @Metadata=(Units="deg",Description="Offset of rotation about x")
	  double	v; // @Metadata=(Units="deg",Description="Offset of rotation about y")
	  double	w; // @Metadata=(Units="deg",Description="Offset of rotation about z")
	  boolean	sync; // @Metadata=(Units="dimensionless",Description="Synchronize motion so that all actuators start and stop moving at the same time?")
	};
#pragma keylist command_offsetLUT_d95a4e76 HexapodID
struct command_pivot_fe537357 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	x; // @Metadata=(Units="um",Description="x")
	  double	y; // @Metadata=(Units="um",Description="y")
	  double	z; // @Metadata=(Units="um",Description="z")
	};
#pragma keylist command_pivot_fe537357 HexapodID
struct command_setAuthList_e3a7edee {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	authorizedUsers; // @Metadata=(Units="unitless",Description="Comma seperated list of authorized users currently allowed to command this CSC.")
	  string	nonAuthorizedCSCs; // @Metadata=(Units="unitless",Description="Comma seperated list of CSC's not currently allowed to command this CSC.")
	};
#pragma keylist command_setAuthList_e3a7edee HexapodID
struct command_setLogLevel_2628cbbe {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	level; // @Metadata=(Units="unitless",Description="Logging level; as a Python logging level: error=40; warning=30; info=20; debug=10.")
	};
#pragma keylist command_setLogLevel_2628cbbe HexapodID
struct command_setValue_7e8e773a {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<256>	parametersAndValues; // @Metadata=(Units="unitless",Description="List of parameters and their values as a Json string")
	};
#pragma keylist command_setValue_7e8e773a HexapodID
struct command_standby_8c652bea {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_standby_8c652bea HexapodID
struct command_start_58da8536 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<256>	settingsToApply; // @Metadata=(Units="unitless",Description="Name of the selected settings set")
	};
#pragma keylist command_start_58da8536 HexapodID
struct command_stop_8988c03e {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	ignored; // @Metadata=(Units="unitless",Description="Ignored.")
	};
#pragma keylist command_stop_8988c03e HexapodID
struct electrical_1978dbbe {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  unsigned short	copleyStatusWordDrive[6]; // @Metadata=(Units="dimensionless",Description="Bus undervoltage fault; bus overvoltage fault; and overcurrent fault are all being monitored for each drive channel")
	  unsigned short	copleyLatchingFaultStatus[6]; // @Metadata=(Units="dimensionless",Description="Copley latching fault status")
	};
#pragma keylist electrical_1978dbbe HexapodID
	 const long indexEnumeration_CameraHexapod=1;
	 const long indexEnumeration_m2msHexapod=2;
struct logevent_actuatorInPosition_dbb6e096 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	inPosition[6]; // @Metadata=(Units="unitless",Description="Actuator in position.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_actuatorInPosition_dbb6e096 HexapodID
struct logevent_appliedSettingsMatchStart_814a84ec {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	appliedSettingsMatchStartIsTrue; // @Metadata=(Units="unitless",Description="True when the configuration matches the start conditions")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_appliedSettingsMatchStart_814a84ec HexapodID
struct logevent_authList_a98d3e1a {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	authorizedUsers; // @Metadata=(Units="unitless",Description="Comma seperated list of authorized users currently allowed to command this CSC.")
	  string	nonAuthorizedCSCs; // @Metadata=(Units="unitless",Description="Comma seperated list of CSC's not currently allowed to command this CSC.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_authList_a98d3e1a HexapodID
struct logevent_commandableByDDS_2c78e4c9 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	state; // @Metadata=(Units="dimensionless",Description="If true the CSC can control the hexapod; else the Engineering User Interface has control.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_commandableByDDS_2c78e4c9 HexapodID
struct logevent_configuration_6e98346f {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  double	accelerationAccmax; // @Metadata=(Units="um/s2",Description="Maximum acceleration")
	  double	limitXYMax; // @Metadata=(Units="um",Description="Maximum XY (Combined linear motion limit)")
	  double	limitZMin; // @Metadata=(Units="um",Description="Minimum Z")
	  double	limitZMax; // @Metadata=(Units="um",Description="Maximum Z limit")
	  double	limitUVMax; // @Metadata=(Units="deg",Description="Maximum UV (Combined angular motion limit)")
	  double	limitWMin; // @Metadata=(Units="deg",Description="Minimum W limit")
	  double	limitWMax; // @Metadata=(Units="deg",Description="Maximum W limit")
	  double	velocityXYMax; // @Metadata=(Units="um/s",Description="Maximum XY velocity limit")
	  double	velocityRxRyMax; // @Metadata=(Units="deg/s",Description="Maximum RXRY velocity limit")
	  double	velocityZMax; // @Metadata=(Units="um/s",Description="Maximum Z velocity")
	  double	velocityRzMax; // @Metadata=(Units="deg/s",Description="Maximum Rz velocity")
	  double	positionX; // @Metadata=(Units="um",Description="x position")
	  double	positionY; // @Metadata=(Units="um",Description="y position")
	  double	positionZ; // @Metadata=(Units="um",Description="z position")
	  double	positionU; // @Metadata=(Units="deg",Description="U position")
	  double	positionV; // @Metadata=(Units="deg",Description="V position")
	  double	positionW; // @Metadata=(Units="deg",Description="W position")
	  double	pivotX; // @Metadata=(Units="um",Description="Pivot coordinate X")
	  double	pivotY; // @Metadata=(Units="um",Description="Pivot coordinate Y")
	  double	pivotZ; // @Metadata=(Units="um",Description="Pivot coordinate Z")
	  short	elevationRawLUTElevIndex[19]; // @Metadata=(Units="dimensionless",Description="elevationRawLUTElevIndex")
	  double	elevationRawLUTX[19]; // @Metadata=(Units="um",Description="elevationRawLUTX")
	  double	elevationRawLUTY[19]; // @Metadata=(Units="um",Description="elevationRawLUTY")
	  double	elevationRawLUTZ[19]; // @Metadata=(Units="um",Description="elevationRawLUTZ")
	  double	elevationRawLUTRx[19]; // @Metadata=(Units="deg",Description="elevationRawLUTRx")
	  double	elevationRawLUTRy[19]; // @Metadata=(Units="deg",Description="elevationRawLUTRy")
	  double	elevationRawLUTRz[19]; // @Metadata=(Units="deg",Description="elevationRawLUTRz")
	  short	azimuthRawLUTAzIndex[37]; // @Metadata=(Units="dimensionless",Description="azimuthRawLUTAzIndex")
	  double	azimuthRawLUTX[37]; // @Metadata=(Units="um",Description="azimuthRawLUTX")
	  double	azimuthRawLUTY[37]; // @Metadata=(Units="um",Description="azimuthRawLUTY")
	  double	azimuthRawLUTZ[37]; // @Metadata=(Units="um",Description="azimuthRawLUTZ")
	  double	azimuthRawLUTRx[37]; // @Metadata=(Units="deg",Description="azimuthRawLUTRx")
	  double	azimuthRawLUTRy[37]; // @Metadata=(Units="deg",Description="azimuthRawLUTRy")
	  double	azimuthRawLUTRz[37]; // @Metadata=(Units="deg",Description="azimuthRawLUTRz")
	  short	temperatureRawLUTTempIndex[9]; // @Metadata=(Units="dimensionless",Description="temperatureRawLUTTempIndex")
	  double	temperatureRawLUTX[9]; // @Metadata=(Units="um",Description="temperatureRawLUTX")
	  double	temperatureRawLUTY[9]; // @Metadata=(Units="um",Description="temperatureRawLUTY")
	  double	temperatureRawLUTZ[9]; // @Metadata=(Units="um",Description="temperatureRawLUTZ")
	  double	temperatureRawLUTRx[9]; // @Metadata=(Units="deg",Description="temperatureRawLUTRx")
	  double	temperatureRawLUTRy[9]; // @Metadata=(Units="deg",Description="temperatureRawLUTRy")
	  double	temperatureRawLUTRz[9]; // @Metadata=(Units="deg",Description="temperatureRawLUTRz")
	  double	strutDisplacementMax; // @Metadata=(Units="um",Description="strutDisplacementMax")
	  double	strutVelocityMax; // @Metadata=(Units="um/s",Description="strutVelocityMax")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_configuration_6e98346f HexapodID
struct logevent_connected_288a9897 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	command; // @Metadata=(Units="unitless",Description="Is the command socket connected (true=yes; false=no)?")
	  boolean	telemetry; // @Metadata=(Units="unitless",Description="Is the telemetry/config socket connected (true=yes; false=no)?")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_connected_288a9897 HexapodID
struct logevent_controllerState_4d03d1ba {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	controllerState; // @Metadata=(Units="unitless",Description="Basic state; a ControllerState enumeration value. The state names and meanings are the same as standard CSC summaryState; but the numeric values differ. We report the controller state in addition to summaryState because we need to report a summaryState even when the controller is not connected; and to aid diagnostics; e.g. in case the controller reports an unrecognized state.")
	  long	offlineSubstate; // @Metadata=(Units="unitless",Description="Substate in OFFLINE mode; an OfflineSubstate enumeration value.")
	  long	enabledSubstate; // @Metadata=(Units="unitless",Description="Substate in ENABLED mode; an EnabledSubstate enumeration value.")
	  long	applicationStatus[6]; // @Metadata=(Units="unitless",Description="Application status; one value for each linear actuator. A bitmask of ApplicationStatus enumeration values.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_controllerState_4d03d1ba HexapodID
	 const long Hexapod_shared_ControllerState_Standby=0;
	 const long Hexapod_shared_ControllerState_Disabled=1;
	 const long Hexapod_shared_ControllerState_Enabled=2;
	 const long Hexapod_shared_ControllerState_Offline=3;
	 const long Hexapod_shared_ControllerState_Fault=4;
	 const long Hexapod_shared_OfflineSubstate_PublishOnly=0;
	 const long Hexapod_shared_OfflineSubstate_Available=1;
	 const long Hexapod_shared_EnabledSubstate_Stationary=0;
	 const long Hexapod_shared_EnabledSubstate_MovingPointToPoint=1;
	 const long Hexapod_shared_EnabledSubstate_SlewingOrTracking=2;
	 const long Hexapod_shared_EnabledSubstate_ControlledStopping=3;
	 const long Hexapod_shared_EnabledSubstate_Initializing=4;
	 const long Hexapod_shared_EnabledSubstate_Relative=5;
	 const long Hexapod_shared_EnabledSubstate_ConstantVelocity=6;
	 const long Hexapod_shared_ApplicationStatus_HEX_FOLLOWING_ERROR_MASK=0x00000001;
	 const long Hexapod_shared_ApplicationStatus_HEX_MOVE_COMPLETE_MASK=0x00000002;
	 const long Hexapod_shared_ApplicationStatus_COMMAND_REJECT_MASK=0x00000020;
	 const long Hexapod_shared_ApplicationStatus_SAFTEY_INTERLOCK=0x00000040;
	 const long Hexapod_shared_ApplicationStatus_EXTEND_LIMIT_SWITCH=0x00000080;
	 const long Hexapod_shared_ApplicationStatus_RETRACT_LIMIT_SWITCH=0x00000100;
	 const long Hexapod_shared_ApplicationStatus_ETHERCAT_PROBLEM=0x00000200;
	 const long Hexapod_shared_ApplicationStatus_DDS_COMMAND_SOURCE=0x00000400;
	 const long Hexapod_shared_ApplicationStatus_MOTION_TIMEOUT=0x00000800;
	 const long Hexapod_shared_ApplicationStatus_DRIVE_FAULT=0x00002000;
	 const long Hexapod_shared_ApplicationStatus_SIMULINK_FAULT=0x00004000;
	 const long Hexapod_shared_ApplicationStatus_ENCODER_FAULT=0x00008000;
struct logevent_errorCode_b0118cfb {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	errorCode; // @Metadata=(Units="unitless",Description="A numeric error code")
	  string	errorReport; // @Metadata=(Units="unitless",Description="An string providing detailed information about the error")
	  string	traceback; // @Metadata=(Units="unitless",Description="An optional stack trace of the error condition")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_errorCode_b0118cfb HexapodID
struct logevent_heartbeat_3d231091 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	heartbeat; // @Metadata=(Units="unitless",Description="Beats the drum.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_heartbeat_3d231091 HexapodID
struct logevent_inPosition_4f89e926 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	inPosition; // @Metadata=(Units="unitless",Description="All actuators are in position.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_inPosition_4f89e926 HexapodID
struct logevent_interlock_bc2870f5 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<256>	detail; // @Metadata=(Units="dimensionless",Description="One of two values: Engaged or Disengaged")
	  double	timestamp; // @Metadata=(Units="dimensionless",Description="timestamp")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_interlock_bc2870f5 HexapodID
struct logevent_logLevel_8f14b44e {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	level; // @Metadata=(Units="unitless",Description="Current logging level; a Python logging level: error=40; warning=30; info=20; debug=10.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_logLevel_8f14b44e HexapodID
struct logevent_logMessage_d34afd95 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	name; // @Metadata=(Units="unitless",Description="Log name.")
	  long	level; // @Metadata=(Units="unitless",Description="Message level; a Python logging level: error=40; warning=30; info=20; debug=10.")
	  string	message; // @Metadata=(Units="unitless",Description="Log message.")
	  string	traceback; // @Metadata=(Units="unitless",Description="Exception traceback; "" if not an exception.")
	  string	filePath; // @Metadata=(Units="unitless",Description="Path to source file.")
	  string	functionName; // @Metadata=(Units="unitless",Description="Function or method name.")
	  long	lineNumber; // @Metadata=(Units="unitless",Description="Line number in the file specified by filePath.")
	  long	process; // @Metadata=(Units="unitless",Description="Process ID.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_logMessage_d34afd95 HexapodID
struct logevent_settingVersions_6d8dcd49 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	recommendedSettingsVersion; // @Metadata=(Units="unitless",Description="List of comma seperated recomended versions of settings sets")
	  string	recommendedSettingsLabels; // @Metadata=(Units="unitless",Description="List of comma seperated names of settings sets")
	  string	settingsUrl; // @Metadata=(Units="unitless",Description="The URL where the settings sets definitions can be found")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_settingVersions_6d8dcd49 HexapodID
struct logevent_settingsApplied_370f0634 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<256>	settingsVersion; // @Metadata=(Units="unitless",Description="The SHA or name corresponding to the published configuration")
	  string	otherSettingsEvents; // @Metadata=(Units="unitless",Description="A comma delimited list of other specific CSC configuration events. This may be blank if no other CSC specific events are necessary")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_settingsApplied_370f0634 HexapodID
struct logevent_simulationMode_2404dbf1 {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	mode; // @Metadata=(Units="unitless",Description="Current simulation mode; 0 for normal operation (no simulation); other supported values are specific to each CSC.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_simulationMode_2404dbf1 HexapodID
struct logevent_softwareVersions_6e865fbe {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<16>	salVersion; // @Metadata=(Units="unitless",Description="This is the current version of SAL generation")
	  string<16>	xmlVersion; // @Metadata=(Units="unitless",Description="This is the current version of CSC XML")
	  string<16>	openSpliceVersion; // @Metadata=(Units="unitless",Description="This is the current version of OpenSplice")
	  string<16>	cscVersion; // @Metadata=(Units="unitless",Description="This is the top-level version of the CSC")
	  string	subsystemVersions; // @Metadata=(Units="unitless",Description="A comma delimited list of key=value pairs relating subsystem name (key) to its version number (value). This may be left blank if there are no subsystems within a CSC")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_softwareVersions_6e865fbe HexapodID
struct logevent_summaryState_02b400ef {  // @Metadata=(Description="")
	  long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  string        private_identity; //private // @Metadata=(Units="unitless",Description="Identity of originator")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	summaryState; // @Metadata=(Units="unitless",Description="High level state machine state identifier")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_summaryState_02b400ef HexapodID
struct ackcmd_0858d0f3 {  // @Metadata=(Description="")
      string<8>	private_revCode;
      double		private_sndStamp;
      double		private_rcvStamp;
      string            private_identity;
      long		private_origin;
      long 		private_host;
      long		private_seqNum;
      long	HexapodID; // @Metadata=(Description="Index number for CSC with multiple instances")
      long 		ack;
      long 		error;
      string<256>	result;
      string            identity;
      long		host;
      long		origin;
      long		cmdtype;
      double		timeout;
	};
#pragma keylist ackcmd_0858d0f3 HexapodID
};

