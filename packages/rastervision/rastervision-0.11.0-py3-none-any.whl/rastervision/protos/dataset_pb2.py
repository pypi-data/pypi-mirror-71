# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rastervision/protos/dataset.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rastervision.protos import scene_pb2 as rastervision_dot_protos_dot_scene__pb2
from rastervision.protos import augmentor_pb2 as rastervision_dot_protos_dot_augmentor__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rastervision/protos/dataset.proto',
  package='rv.protos',
  syntax='proto2',
  serialized_pb=_b('\n!rastervision/protos/dataset.proto\x12\trv.protos\x1a\x1frastervision/protos/scene.proto\x1a#rastervision/protos/augmentor.proto\"\xcd\x01\n\rDatasetConfig\x12,\n\x0ctrain_scenes\x18\x03 \x03(\x0b\x32\x16.rv.protos.SceneConfig\x12\x31\n\x11validation_scenes\x18\x04 \x03(\x0b\x32\x16.rv.protos.SceneConfig\x12+\n\x0btest_scenes\x18\x05 \x03(\x0b\x32\x16.rv.protos.SceneConfig\x12.\n\naugmentors\x18\x06 \x03(\x0b\x32\x1a.rv.protos.AugmentorConfig')
  ,
  dependencies=[rastervision_dot_protos_dot_scene__pb2.DESCRIPTOR,rastervision_dot_protos_dot_augmentor__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_DATASETCONFIG = _descriptor.Descriptor(
  name='DatasetConfig',
  full_name='rv.protos.DatasetConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='train_scenes', full_name='rv.protos.DatasetConfig.train_scenes', index=0,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='validation_scenes', full_name='rv.protos.DatasetConfig.validation_scenes', index=1,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='test_scenes', full_name='rv.protos.DatasetConfig.test_scenes', index=2,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='augmentors', full_name='rv.protos.DatasetConfig.augmentors', index=3,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=119,
  serialized_end=324,
)

_DATASETCONFIG.fields_by_name['train_scenes'].message_type = rastervision_dot_protos_dot_scene__pb2._SCENECONFIG
_DATASETCONFIG.fields_by_name['validation_scenes'].message_type = rastervision_dot_protos_dot_scene__pb2._SCENECONFIG
_DATASETCONFIG.fields_by_name['test_scenes'].message_type = rastervision_dot_protos_dot_scene__pb2._SCENECONFIG
_DATASETCONFIG.fields_by_name['augmentors'].message_type = rastervision_dot_protos_dot_augmentor__pb2._AUGMENTORCONFIG
DESCRIPTOR.message_types_by_name['DatasetConfig'] = _DATASETCONFIG

DatasetConfig = _reflection.GeneratedProtocolMessageType('DatasetConfig', (_message.Message,), dict(
  DESCRIPTOR = _DATASETCONFIG,
  __module__ = 'rastervision.protos.dataset_pb2'
  # @@protoc_insertion_point(class_scope:rv.protos.DatasetConfig)
  ))
_sym_db.RegisterMessage(DatasetConfig)


# @@protoc_insertion_point(module_scope)
