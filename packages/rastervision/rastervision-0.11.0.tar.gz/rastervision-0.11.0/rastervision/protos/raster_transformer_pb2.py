# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rastervision/protos/raster_transformer.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rastervision/protos/raster_transformer.proto',
  package='rv.protos',
  syntax='proto2',
  serialized_pb=_b('\n,rastervision/protos/raster_transformer.proto\x12\trv.protos\x1a\x1cgoogle/protobuf/struct.proto\"\x97\x01\n\x17RasterTransformerConfig\x12\x18\n\x10transformer_type\x18\x01 \x02(\t\x12\x13\n\tstats_uri\x18\x04 \x01(\tH\x00\x12\x30\n\rcustom_config\x18\x05 \x01(\x0b\x32\x17.google.protobuf.StructH\x00\x42\x1b\n\x19raster_transformer_config')
  ,
  dependencies=[google_dot_protobuf_dot_struct__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_RASTERTRANSFORMERCONFIG = _descriptor.Descriptor(
  name='RasterTransformerConfig',
  full_name='rv.protos.RasterTransformerConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='transformer_type', full_name='rv.protos.RasterTransformerConfig.transformer_type', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stats_uri', full_name='rv.protos.RasterTransformerConfig.stats_uri', index=1,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='custom_config', full_name='rv.protos.RasterTransformerConfig.custom_config', index=2,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='raster_transformer_config', full_name='rv.protos.RasterTransformerConfig.raster_transformer_config',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=90,
  serialized_end=241,
)

_RASTERTRANSFORMERCONFIG.fields_by_name['custom_config'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_RASTERTRANSFORMERCONFIG.oneofs_by_name['raster_transformer_config'].fields.append(
  _RASTERTRANSFORMERCONFIG.fields_by_name['stats_uri'])
_RASTERTRANSFORMERCONFIG.fields_by_name['stats_uri'].containing_oneof = _RASTERTRANSFORMERCONFIG.oneofs_by_name['raster_transformer_config']
_RASTERTRANSFORMERCONFIG.oneofs_by_name['raster_transformer_config'].fields.append(
  _RASTERTRANSFORMERCONFIG.fields_by_name['custom_config'])
_RASTERTRANSFORMERCONFIG.fields_by_name['custom_config'].containing_oneof = _RASTERTRANSFORMERCONFIG.oneofs_by_name['raster_transformer_config']
DESCRIPTOR.message_types_by_name['RasterTransformerConfig'] = _RASTERTRANSFORMERCONFIG

RasterTransformerConfig = _reflection.GeneratedProtocolMessageType('RasterTransformerConfig', (_message.Message,), dict(
  DESCRIPTOR = _RASTERTRANSFORMERCONFIG,
  __module__ = 'rastervision.protos.raster_transformer_pb2'
  # @@protoc_insertion_point(class_scope:rv.protos.RasterTransformerConfig)
  ))
_sym_db.RegisterMessage(RasterTransformerConfig)


# @@protoc_insertion_point(module_scope)
