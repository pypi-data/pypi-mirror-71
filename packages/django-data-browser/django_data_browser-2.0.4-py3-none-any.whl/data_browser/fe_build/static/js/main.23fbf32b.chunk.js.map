{"version":3,"sources":["Util.js","Results.js","Components.js","Query.js","App.js","serviceWorker.js","index.js"],"names":["Link","props","className","onClick","children","type","SLink","Spacer","spaces","Array","map","_","key","HeadCell","query","field","modelField","getField","path","getType","removeField","canPivot","togglePivot","pivoted","concrete","defaultLookup","addFilter","prettyPath","toggleSort","join","dsc","priority","asc","null","sort","DataCell","formattedValue","span","value","undefined","dangerouslySetInnerHTML","__html","String","colSpan","VTableHeadRow","fields","classNameFirst","i","pathStr","VTableBodyRow","row","HTableRow","data","col","Results","cols","rows","body","colFields","rowFields","length","resFields","rowIndex","table","FilterValue","lookup","onChange","weekday","month","step","Filter","this","index","errorMessage","removeFilter","addField","e","setFilterLookup","target","sortedLookups","lookupName","replace","setFilterValue","lookups","React","Component","Filters","filterErrors","filters","filter","Field","state","toggled","setState","model","toggle","bind","prettyName","AllFields","modelFields","getModelFields","sortedFields","fieldName","concat","ModelSelector","setModel","sortedModels","Logo","version","QueryPage","saveUrl","getUrlForSave","id","href","getUrlForMedia","HomePage","savedViews","view","setQuery","name","description","empty","getPartsForQuery","f","getUrlForQuery","baseUrl","media","parts","basePath","window","location","origin","controller","Query","config","slice","allModelFields","types","defaultValue","newFields","push","findIndex","newSort","newFilters","getDefaultLookupValue","splice","adminUrl","model_name","queryString","URLSearchParams","toString","assert","require","handleError","console","log","Sentry","App","initialState","url","abort","AbortController","fetch","signal","then","res","json","response","reload","Promise","resolve","reqState","history","replaceState","fetchResults","catch","onpopstate","queryChange","newState","request","pushState","deepEqual","handleQueryChange","Boolean","hostname","match","djangoData","JSON","parse","document","getElementById","textContent","sentryDsn","dsn","release","attachStacktrace","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.23fbf32b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nfunction Link(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={\"Link \" + (className || \"\")}\n        >\n            {children}\n        </button>\n    );\n}\n\nfunction SLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={\"sLink material-icons \" + (className || \"\")}\n        >\n            {children}\n        </button>\n    );\n}\n\nexport { Link, SLink };\n","import React from \"react\";\nimport \"./App.css\";\nimport { Link, SLink } from \"./Util.js\";\n\nfunction Spacer(props) {\n  const { spaces } = props;\n  if (spaces > 0) {\n    return [...Array(spaces)].map((_, key) => (\n      <td className=\"Empty\" key={key} />\n    ));\n  }\n  return null;\n}\n\nfunction HeadCell(props) {\n  const { query, field, className } = props;\n  const modelField = query.getField(field.path);\n  const type = query.getType(modelField);\n  return (\n    <th {...{ className }}>\n      <SLink onClick={() => query.removeField(field)}>close</SLink>\n      {modelField.canPivot && (\n        <>\n          <SLink onClick={() => query.togglePivot(field)}>\n            {field.pivoted ? \"call_received\" : \"call_made\"}\n          </SLink>\n        </>\n      )}\n      {modelField.concrete && type.defaultLookup ? (\n        <>\n          <SLink onClick={() => query.addFilter(field.path, field.prettyPath)}>\n            filter_alt\n          </SLink>{\" \"}\n          <Link onClick={() => query.toggleSort(field)}>\n            {field.prettyPath.join(\" \")}\n            {\n              {\n                dsc: `↑${field.priority}`,\n                asc: `↓${field.priority}`,\n                null: \"\",\n              }[field.sort]\n            }\n          </Link>\n        </>\n      ) : (\n        \" \" + field.prettyPath.join(\" \")\n      )}\n    </th>\n  );\n}\n\nfunction DataCell(props) {\n  const { query, field, className, span, value } = props;\n  let modelField = query.getField(field.path);\n  let formattedValue;\n  if (value === undefined) {\n    formattedValue = \"\";\n  } else if (modelField.type === \"html\" && value) {\n    formattedValue = <div dangerouslySetInnerHTML={{ __html: value }} />;\n  } else {\n    formattedValue = String(value);\n  }\n  return (\n    <td className={modelField.type + \" \" + className || \"\"} colSpan={span || 1}>\n      {formattedValue}\n    </td>\n  );\n}\n\nfunction VTableHeadRow(props) {\n  const { fields, query, classNameFirst } = props;\n  return fields.map((field, i) => (\n    <HeadCell\n      {...{ query, field }}\n      key={field.pathStr}\n      className={\"HoriBorder \" + (i ? \"\" : classNameFirst)}\n    />\n  ));\n}\n\nfunction VTableBodyRow(props) {\n  const { fields, query, classNameFirst, row } = props;\n  return fields.map((field, i) => (\n    <DataCell\n      {...{ query, field }}\n      key={field.pathStr}\n      value={row[field.pathStr]}\n      className={i ? \"\" : classNameFirst}\n    />\n  ));\n}\n\nfunction HTableRow(props) {\n  const { query, field, data, span } = props;\n  return (\n    <>\n      <HeadCell {...{ query, field }} />\n      {data.map((col, key) => (\n        <DataCell {...{ key, query, field, span }} value={col[field.pathStr]} />\n      ))}\n    </>\n  );\n}\n\nfunction Results(props) {\n  const { query, cols, rows, body } = props;\n  return (\n    <table className=\"Results\">\n      <thead>\n        {/* pivoted data */}\n        {query.colFields().map((field) => {\n          return (\n            <tr key={field.pathStr}>\n              <Spacer spaces={query.rowFields().length - 1} />\n              <HTableRow\n                {...{ query, field }}\n                span={query.resFields().length}\n                data={cols}\n              />\n            </tr>\n          );\n        })}\n\n        {/* column headers */}\n        <tr>\n          <Spacer spaces={1 - query.rowFields().length} />\n          <VTableHeadRow {...{ query }} fields={query.rowFields()} />\n          {cols.map((_, key) => (\n            <VTableHeadRow\n              {...{ key, query }}\n              fields={query.resFields()}\n              classNameFirst=\"LeftBorder\"\n            />\n          ))}\n        </tr>\n      </thead>\n\n      {/* row headers and body */}\n      <tbody>\n        {rows.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            <Spacer spaces={1 - query.rowFields().length} />\n            <VTableBodyRow {...{ query, row }} fields={query.rowFields()} />\n            {body.map((table, key) => (\n              <VTableBodyRow\n                {...{ key, query }}\n                fields={query.resFields()}\n                row={table[rowIndex]}\n                classNameFirst=\"LeftBorder\"\n              />\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport { Results };\n","import React from \"react\";\nimport \"./App.css\";\nimport { Link, SLink } from \"./Util.js\";\nimport { Results } from \"./Results.js\";\n\nfunction FilterValue(props) {\n  const { lookup, onChange, value } = props;\n  if (props.lookup.type === \"boolean\")\n    return (\n      <select {...{ onChange, value }} className=\"FilterValue\">\n        <option value={true}>true</option>\n        <option value={false}>false</option>\n      </select>\n    );\n  else if (lookup.type === \"weekday\")\n    return (\n      <select {...{ onChange, value }} className=\"FilterValue\">\n        {[\n          \"Sunday\",\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n        ].map((weekday) => (\n          <option value={weekday}>{weekday}</option>\n        ))}\n      </select>\n    );\n  else if (lookup.type === \"month\")\n    return (\n      <select {...{ onChange, value }} className=\"FilterValue\">\n        {[\n          \"January\",\n          \"Febuary\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ].map((month) => (\n          <option value={month}>{month}</option>\n        ))}\n      </select>\n    );\n  else if (lookup.type === \"number\" || lookup.type === \"year\")\n    return (\n      <input\n        {...{ onChange, value }}\n        className=\"FilterValue\"\n        type=\"number\"\n        step=\"0\"\n      />\n    );\n  else\n    return (\n      <input {...{ onChange, value }} className=\"FilterValue\" type=\"text\" />\n    );\n}\n\nclass Filter extends React.Component {\n  render() {\n    const {\n      path,\n      prettyPath,\n      index,\n      lookup,\n      query,\n      value,\n      errorMessage,\n    } = this.props;\n    const type = query.getType(query.getField(path));\n    return (\n      <tr>\n        <td>\n          <SLink onClick={() => query.removeFilter(index)}>close</SLink>{\" \"}\n          <Link onClick={() => query.addField(path, prettyPath)}>\n            {prettyPath.join(\" \")}\n          </Link>{\" \"}\n        </td>\n        <td>\n          <select\n            className=\"Lookup\"\n            value={lookup}\n            onChange={(e) => query.setFilterLookup(index, e.target.value)}\n          >\n            {type.sortedLookups.map((lookupName) => (\n              <option key={lookupName} value={lookupName}>\n                {lookupName.replace(/_/g, \" \")}\n              </option>\n            ))}\n          </select>\n        </td>\n        <td>=</td>\n        <td>\n          <FilterValue\n            {...{ value }}\n            onChange={(e) => query.setFilterValue(index, e.target.value)}\n            lookup={type.lookups[lookup]}\n          />\n          {errorMessage && <p>{errorMessage}</p>}\n        </td>\n      </tr>\n    );\n  }\n}\n\nfunction Filters(props) {\n  const { query, filterErrors } = props;\n  return (\n    <form className=\"Filters\">\n      <table className=\"Flat\">\n        <tbody>\n          {props.filters.map((filter, index) => (\n            <Filter\n              {...{ query, index }}\n              {...filter}\n              key={index}\n              errorMessage={filterErrors[index]}\n            />\n          ))}\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nclass Field extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { toggled: false };\n  }\n\n  toggle() {\n    this.setState((state) => ({\n      toggled: !state.toggled,\n    }));\n  }\n\n  render() {\n    const { query, path, prettyPath, modelField } = this.props;\n    const type = query.getType(modelField);\n    return (\n      <>\n        <tr>\n          <td>\n            {modelField.concrete && type.defaultLookup && (\n              <SLink onClick={() => query.addFilter(path, prettyPath)}>\n                filter_alt\n              </SLink>\n            )}\n          </td>\n          <td>\n            {modelField.model && (\n              <SLink className=\"ToggleLink\" onClick={this.toggle.bind(this)}>\n                {this.state.toggled ? \"remove\" : \"add\"}\n              </SLink>\n            )}\n          </td>\n          <td>\n            {modelField.type ? (\n              <Link onClick={() => query.addField(path, prettyPath)}>\n                {modelField.prettyName}\n              </Link>\n            ) : (\n              modelField.prettyName\n            )}\n          </td>\n        </tr>\n        {this.state.toggled && (\n          <tr>\n            <td></td>\n            <td colSpan=\"2\">\n              <AllFields\n                {...{ query, path, prettyPath }}\n                model={modelField.model}\n              />\n            </td>\n          </tr>\n        )}\n      </>\n    );\n  }\n}\n\nfunction AllFields(props) {\n  const { query, model, path, prettyPath } = props;\n  const modelFields = query.getModelFields(model);\n  return (\n    <table>\n      <tbody>\n        {modelFields.sortedFields.map((fieldName) => {\n          const modelField = modelFields.fields[fieldName];\n          return (\n            <Field\n              key={fieldName}\n              {...{ query, modelField }}\n              path={path.concat([fieldName])}\n              prettyPath={prettyPath.concat([modelField.prettyName])}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction ModelSelector(props) {\n  return (\n    <select\n      className=\"ModelSelector\"\n      onChange={(e) => props.query.setModel(e.target.value)}\n      value={props.model}\n    >\n      {props.sortedModels.map((model) => (\n        <option key={model}>{model}</option>\n      ))}\n    </select>\n  );\n}\n\nfunction Logo(props) {\n  return (\n    <div className=\"Logo\" onClick={() => props.query.setModel(\"\")}>\n      <span>DDB</span>\n      <span className=\"Version\">v{props.version}</span>\n    </div>\n  );\n}\n\nfunction QueryPage(props) {\n  const {\n    query,\n    rows,\n    cols,\n    body,\n    version,\n    sortedModels,\n    model,\n    filters,\n    filterErrors,\n  } = props;\n  const saveUrl = query.getUrlForSave();\n  return (\n    <div id=\"body\">\n      <Logo {...{ query, version }} />\n      <ModelSelector {...{ query, sortedModels, model }} />\n      <Filters {...{ query, filters, filterErrors }} />\n      <p>\n        Showing {rows.length * cols.length} results -{\" \"}\n        <a href={query.getUrlForMedia(\"csv\")}>Download as CSV</a> -{\" \"}\n        <a href={query.getUrlForMedia(\"json\")}>View as JSON</a>\n        {saveUrl && (\n          <>\n            {\" \"}\n            - <a href={saveUrl}>Save View</a>{\" \"}\n          </>\n        )}\n      </p>\n      <div className=\"MainSpace\">\n        <div className=\"FieldsList\">\n          <AllFields {...{ query, model }} path={[]} prettyPath={[]} />\n        </div>\n        {query.rowFields().length || query.colFields().length ? (\n          <Results {...{ query, rows, cols, body }} />\n        ) : (\n          <h2>No fields selected</h2>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction HomePage(props) {\n  const { query, version, sortedModels, savedViews } = props;\n  return (\n    <div id=\"body\">\n      <Logo {...{ query, version }} />\n      <div className=\"Index\">\n        <div>\n          <h1>Models</h1>\n          <div>\n            {sortedModels.map((model) => (\n              <div key={model}>\n                <button className=\"Link\" onClick={() => query.setModel(model)}>\n                  {model}\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div>\n          <h1>Saved Views</h1>\n          <div>\n            {savedViews.map((view, index) => (\n              <div key={index}>\n                <button\n                  className=\"Link\"\n                  onClick={() => query.setQuery(view.query)}\n                >\n                  {view.model} - {view.name}\n                </button>\n                <p>{view.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { HomePage, QueryPage };\n","const empty = {\n  rows: [{}],\n  cols: [{}],\n  body: [[{}]],\n  filterErrors: [],\n};\n\nfunction getPartsForQuery(query) {\n  return {\n    model: query.model,\n    fields: query.fields\n      .map(\n        (f) =>\n          (f.pivoted ? \"&\" : \"\") +\n          f.path.join(\"__\") +\n          { asc: `+${f.priority}`, dsc: `-${f.priority}`, null: \"\" }[f.sort]\n      )\n      .join(\",\"),\n    query: query.filters\n      .map((f) => `${f.path.join(\"__\")}__${f.lookup}=${f.value}`)\n      .join(\"&\"),\n  };\n}\n\nfunction getUrlForQuery(baseUrl, query, media) {\n  const parts = getPartsForQuery(query);\n  const basePath = `${baseUrl}query/${parts.model}`;\n  return `${window.location.origin}${basePath}/${parts.fields}.${media}?${parts.query}`;\n}\n\nclass Query {\n  constructor(config, query, setQuery) {\n    this.config = config;\n    this.query = query;\n    this.setQuery = setQuery;\n  }\n\n  getField(path) {\n    const field = path.slice(-1);\n    let model = this.query.model;\n    for (const field of path.slice(0, -1)) {\n      model = this.config.allModelFields[model].fields[field].model;\n    }\n    return this.config.allModelFields[model].fields[field];\n  }\n\n  getType(field) {\n    return this.config.types[field.type];\n  }\n\n  getModelFields(model) {\n    return this.config.allModelFields[model];\n  }\n\n  getDefaultLookupValue(type, lookup) {\n    return this.config.types[type.lookups[lookup].type].defaultValue;\n  }\n\n  addField(path, prettyPath) {\n    const newFields = this.query.fields.slice();\n    newFields.push({\n      path: path,\n      pathStr: path.join(\"__\"),\n      prettyPath: prettyPath,\n      sort: null,\n      priority: null,\n      pivoted: false,\n    });\n    this.setQuery({ fields: newFields });\n  }\n\n  removeField(field) {\n    this.setQuery({\n      fields: this.query.fields.filter((f) => f.pathStr !== field.pathStr),\n    });\n  }\n\n  toggleSort(field) {\n    const index = this.query.fields.findIndex(\n      (f) => f.pathStr === field.pathStr\n    );\n    const newSort = { asc: \"dsc\", dsc: null, null: \"asc\" }[field.sort];\n    let newFields = this.query.fields.slice();\n\n    if (field.sort) {\n      // move any later sort fields forward\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority:\n          f.priority != null && f.priority > field.priority\n            ? f.priority - 1\n            : f.priority,\n      }));\n    }\n\n    if (newSort) {\n      // move all other fiels back and insert the updated one\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority: f.priority != null ? f.priority + 1 : f.priority,\n      }));\n      newFields[index] = { ...field, sort: newSort, priority: 0 };\n    } else {\n      // blank the sort on the updated field\n      newFields[index] = { ...field, sort: null, priority: null };\n    }\n\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  togglePivot(field) {\n    const index = this.query.fields.findIndex(\n      (f) => f.pathStr === field.pathStr\n    );\n    let newFields = this.query.fields.slice();\n    newFields[index].pivoted = !newFields[index].pivoted;\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  addFilter(path, prettyPath) {\n    const type = this.getType(this.getField(path));\n    const newFilters = this.query.filters.slice();\n    newFilters.push({\n      path: path,\n      pathStr: path.join(\"__\"),\n      prettyPath: prettyPath,\n      lookup: type.defaultLookup,\n      value: this.getDefaultLookupValue(type, type.defaultLookup),\n    });\n    this.setQuery({ filters: newFilters });\n  }\n\n  removeFilter(index) {\n    const newFilters = this.query.filters.slice();\n    newFilters.splice(index, 1);\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterValue(index, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters[index] = { ...newFilters[index], value: value };\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterLookup(index, lookup) {\n    const newFilters = this.query.filters.slice();\n    const filter = newFilters[index];\n    const type = this.getType(this.getField(newFilters[index].path));\n    if (type.lookups[filter.lookup].type !== type.lookups[lookup].type) {\n      filter.value = this.getDefaultLookupValue(type, lookup);\n    }\n    filter.lookup = lookup;\n    this.setQuery({ filters: newFilters });\n  }\n\n  setModel(model) {\n    this.setQuery({\n      model: model,\n      fields: [],\n      filters: [],\n      ...empty,\n    });\n  }\n\n  getUrlForSave() {\n    if (this.config.adminUrl === null) return null;\n    const parts = getPartsForQuery(this.query);\n    parts.model_name = parts.model;\n    const queryString = new URLSearchParams(parts).toString();\n    return `${window.location.origin}${this.config.adminUrl}?${queryString}`;\n  }\n\n  getUrlForMedia(media) {\n    return getUrlForQuery(this.config.baseUrl, this.query, media);\n  }\n\n  colFields() {\n    return this.query.fields.filter((f) => f.pivoted);\n  }\n\n  rowFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter(\n        (f) => !f.pivoted && this.getField(f.path).canPivot\n      );\n    } else {\n      return this.query.fields;\n    }\n  }\n\n  resFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter((f) => !this.getField(f.path).canPivot);\n    } else {\n      return [];\n    }\n  }\n}\n\nexport { Query, getPartsForQuery, getUrlForQuery, empty };\n","import * as Sentry from \"@sentry/browser\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { HomePage, QueryPage } from \"./Components\";\nimport { Query, getUrlForQuery, empty } from \"./Query\";\nconst assert = require(\"assert\");\nlet controller;\n\nfunction handleError(e) {\n  if (e.name === \"AbortError\") {\n    console.log(\"request aborted\");\n  } else {\n    console.log(e);\n    Sentry.captureException(e);\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = props.initialState;\n  }\n\n  fetchResults(state) {\n    const url = getUrlForQuery(this.props.config.baseUrl, state, \"json\");\n\n    if (controller) controller.abort();\n    controller = new AbortController();\n\n    if (!state.model)\n      return Promise.resolve({\n        model: \"\",\n        fields: [],\n        filters: [],\n        ...empty,\n      });\n\n    return fetch(url, { signal: controller.signal })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.version !== this.state.version)\n          window.location.reload(true);\n        delete response.version;\n        return response;\n      })\n      .then((response) => {\n        this.setState({\n          body: response.body,\n          cols: response.cols,\n          rows: response.rows,\n          filterErrors: response.filterErrors,\n        });\n        return response;\n      });\n  }\n\n  componentDidMount() {\n    const reqState = {\n      model: this.state.model,\n      fields: this.state.fields,\n      filters: this.state.filters,\n      ...empty,\n    };\n    window.history.replaceState(\n      reqState,\n      null,\n      getUrlForQuery(this.props.config.baseUrl, this.state, \"html\")\n    );\n    this.fetchResults(this.state).catch(handleError);\n    window.onpopstate = (e) => {\n      this.fetchResults(e.state).catch(handleError);\n      this.setState(e.state);\n    };\n  }\n\n  handleQueryChange(queryChange) {\n    this.setState(queryChange);\n    const newState = { ...this.state, ...queryChange };\n    const request = {\n      model: newState.model,\n      fields: newState.fields,\n      filters: newState.filters,\n      ...empty,\n    };\n    window.history.pushState(\n      request,\n      null,\n      getUrlForQuery(this.props.config.baseUrl, newState, \"html\")\n    );\n    this.fetchResults(newState)\n      .then((response) => {\n        response = { ...response, ...empty };\n        assert.deepEqual(response, request);\n      })\n      .catch(handleError);\n  }\n\n  render() {\n    const query = new Query(\n      this.props.config,\n      this.state,\n      this.handleQueryChange.bind(this)\n    );\n    if (this.state.model)\n      return (\n        <QueryPage\n          query={query}\n          sortedModels={this.props.config.sortedModels}\n          version={this.props.config.version}\n          {...this.state}\n        />\n      );\n    else\n      return (\n        <HomePage\n          query={query}\n          sortedModels={this.props.config.sortedModels}\n          savedViews={this.props.config.savedViews}\n          version={this.props.config.version}\n        />\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst djangoData = JSON.parse(\n    document.getElementById(\"django-data\").textContent\n);\n\nif (djangoData.sentryDsn) {\n    Sentry.init({\n        dsn: djangoData.sentryDsn,\n        release: djangoData.config.version,\n        attachStacktrace: true,\n    });\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App {...djangoData} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}