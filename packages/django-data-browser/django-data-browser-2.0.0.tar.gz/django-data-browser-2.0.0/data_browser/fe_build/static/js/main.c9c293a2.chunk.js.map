{"version":3,"sources":["Util.js","Results.js","Components.js","Query.js","App.js","serviceWorker.js","index.js"],"names":["Link","props","type","className","onClick","children","Spacer","spaces","Array","map","_","key","HeadCell","modelField","query","getField","field","path","getType","removeField","canPivot","togglePivot","pivoted","concrete","defaultLookup","addFilter","prettyPath","toggleSort","join","dsc","priority","asc","null","sort","DataCell","value","undefined","dangerouslySetInnerHTML","__html","String","colSpan","span","VTableHeadRow","fields","i","index","pathStr","classNameFirst","VTableBodyRow","row","HTableRow","data","col","Results","colFields","rowFields","length","resFields","cols","rows","rowIndex","body","table","FilterValue","lookup","onChange","weekday","month","step","Filter","this","removeFilter","addField","e","setFilterLookup","target","sortedLookups","lookupName","replace","setFilterValue","lookups","errorMessage","React","Component","Filters","filters","filter","filterErrors","Toggle","state","isToggleOn","setState","handleClick","bind","title","Field","prettyName","model","AllFields","modelFields","getModelFields","sortedFields","fieldName","concat","ModelSelector","setModel","sortedModels","Logo","version","QueryPage","saveUrl","getUrlForSave","id","href","getUrlForMedia","HomePage","savedViews","view","setQuery","name","description","empty","getPartsForQuery","f","getUrlForQuery","baseUrl","media","parts","basePath","window","location","origin","controller","Query","config","slice","allModelFields","types","defaultValue","newFields","push","findIndex","newSort","newFilters","getDefaultLookupValue","splice","adminUrl","model_name","queryString","URLSearchParams","toString","assert","require","handleError","console","log","Sentry","App","initialState","url","abort","AbortController","fetch","signal","then","res","json","response","reload","Promise","resolve","reqState","history","replaceState","fetchResults","catch","onpopstate","queryChange","newState","request","pushState","deepEqual","handleQueryChange","Boolean","hostname","match","djangoData","JSON","parse","document","getElementById","textContent","sentryDsn","dsn","release","attachStacktrace","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c9c293a2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nfunction Link(props) {\n    return (\n        <button\n            type=\"button\"\n            className={\"Link \" + (props.className || \"\")}\n            onClick={props.onClick}\n        >\n            {props.children}\n        </button>\n    );\n}\n\nexport { Link };\n","import React from \"react\";\nimport \"./App.css\";\nimport { Link } from \"./Util.js\";\n\nfunction Spacer(props) {\n  if (props.spaces > 0) {\n    return [...Array(props.spaces)].map((_, key) => (\n      <td className=\"Empty\" key={key} />\n    ));\n  }\n  return null;\n}\n\nfunction HeadCell(props) {\n  const modelField = props.query.getField(props.field.path);\n  const type = props.query.getType(modelField);\n  return (\n    <th className={props.className}>\n      <Link onClick={() => props.query.removeField(props.field)}>✘</Link>{\" \"}\n      {modelField.canPivot ? (\n        <>\n          <Link onClick={() => props.query.togglePivot(props.field)}>\n            {props.field.pivoted ? \"⮦\" : \"⮥\"}\n          </Link>{\" \"}\n        </>\n      ) : (\n        \"\"\n      )}\n      {modelField.concrete && type.defaultLookup ? (\n        <>\n          <Link\n            onClick={() =>\n              props.query.addFilter(props.field.path, props.field.prettyPath)\n            }\n          >\n            Y\n          </Link>{\" \"}\n          <Link onClick={() => props.query.toggleSort(props.field)}>\n            {props.field.prettyPath.join(\" \")}\n          </Link>{\" \"}\n          {\n            {\n              dsc: `↑${props.field.priority}`,\n              asc: `↓${props.field.priority}`,\n              null: \"\",\n            }[props.field.sort]\n          }\n        </>\n      ) : (\n        props.field.prettyPath.join(\" \")\n      )}\n    </th>\n  );\n}\n\nfunction DataCell(props) {\n  let modelField = props.query.getField(props.field.path);\n  let value;\n  if (props.value === undefined) {\n    value = \"\";\n  } else if (modelField.type === \"html\" && props.value) {\n    value = <div dangerouslySetInnerHTML={{ __html: props.value }} />;\n  } else {\n    value = String(props.value);\n  }\n  return (\n    <td\n      className={modelField.type + \" \" + props.className || \"\"}\n      colSpan={props.span || 1}\n    >\n      {value}\n    </td>\n  );\n}\n\nfunction VTableHeadRow(props) {\n  return props.fields.map((field, i) => (\n    <HeadCell\n      query={props.query}\n      field={field}\n      index={i} // TODO remove\n      key={field.pathStr}\n      className={\"HoriBorder \" + (i ? \"\" : props.classNameFirst)}\n    />\n  ));\n}\n\nfunction VTableBodyRow(props) {\n  return props.fields.map((field, i) => (\n    <DataCell\n      key={field.pathStr}\n      query={props.query}\n      value={props.row[field.pathStr]}\n      field={field}\n      className={i ? \"\" : props.classNameFirst}\n    />\n  ));\n}\n\nfunction HTableRow(props) {\n  return (\n    <>\n      <HeadCell\n        query={props.query}\n        field={props.field}\n        index={0} /* TODO remove */\n      />\n      {props.data.map((col, key) => (\n        <DataCell\n          key={key}\n          query={props.query}\n          value={col[props.field.pathStr]}\n          field={props.field}\n          span={props.span}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction Results(props) {\n  return (\n    <table className=\"Results\">\n      <thead>\n        {/* pivoted data */}\n        {props.query.colFields().map((field) => {\n          return (\n            <tr key={field.pathStr}>\n              <Spacer spaces={props.query.rowFields().length - 1} />\n              <HTableRow\n                query={props.query}\n                field={field}\n                span={props.query.resFields().length}\n                data={props.cols}\n              />\n            </tr>\n          );\n        })}\n\n        {/* column headers */}\n        <tr>\n          <Spacer spaces={1 - props.query.rowFields().length} />\n          <VTableHeadRow query={props.query} fields={props.query.rowFields()} />\n          {props.cols.map((_, key) => (\n            <VTableHeadRow\n              key={key}\n              query={props.query}\n              fields={props.query.resFields()}\n              classNameFirst=\"LeftBorder\"\n            />\n          ))}\n        </tr>\n      </thead>\n\n      {/* row headers and body */}\n      <tbody>\n        {props.rows.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            <Spacer spaces={1 - props.query.rowFields().length} />\n            <VTableBodyRow\n              query={props.query}\n              fields={props.query.rowFields()}\n              row={row}\n            />\n            {props.body.map((table, key) => (\n              <VTableBodyRow\n                key={key}\n                query={props.query}\n                fields={props.query.resFields()}\n                row={table[rowIndex]}\n                classNameFirst=\"LeftBorder\"\n              />\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport { Results };\n","import React from \"react\";\nimport \"./App.css\";\nimport { Link } from \"./Util.js\";\nimport { Results } from \"./Results.js\";\n\nfunction FilterValue(props) {\n  if (props.lookup.type === \"boolean\")\n    return (\n      <select\n        className=\"FilterValue\"\n        onChange={props.onChange}\n        value={props.value}\n      >\n        <option value={true}>true</option>\n        <option value={false}>false</option>\n      </select>\n    );\n  else if (props.lookup.type === \"weekday\")\n    return (\n      <select\n        className=\"FilterValue\"\n        onChange={props.onChange}\n        value={props.value}\n      >\n        {[\n          \"Sunday\",\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n        ].map((weekday) => (\n          <option value={weekday}>{weekday}</option>\n        ))}\n      </select>\n    );\n  else if (props.lookup.type === \"month\")\n    return (\n      <select\n        className=\"FilterValue\"\n        onChange={props.onChange}\n        value={props.value}\n      >\n        {[\n          \"January\",\n          \"Febuary\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ].map((month) => (\n          <option value={month}>{month}</option>\n        ))}\n      </select>\n    );\n  else if (props.lookup.type === \"number\")\n    return (\n      <input\n        className=\"FilterValue\"\n        type=\"number\"\n        step=\"0\"\n        value={props.value}\n        onChange={props.onChange}\n      />\n    );\n  else\n    return (\n      <input\n        className=\"FilterValue\"\n        type=\"text\"\n        value={props.value}\n        onChange={props.onChange}\n      />\n    );\n}\n\nclass Filter extends React.Component {\n  render() {\n    const path = this.props.path;\n    const prettyPath = this.props.prettyPath;\n    const index = this.props.index;\n    const lookup = this.props.lookup;\n    const query = this.props.query;\n    const type = query.getType(query.getField(path));\n    return (\n      <tr>\n        <td>\n          <Link onClick={() => query.removeFilter(index)}>✘</Link>{\" \"}\n          <Link onClick={() => query.addField(path, prettyPath)}>\n            {prettyPath.join(\" \")}\n          </Link>{\" \"}\n        </td>\n        <td>\n          <select\n            className=\"Lookup\"\n            value={lookup}\n            onChange={(e) => query.setFilterLookup(index, e.target.value)}\n          >\n            {type.sortedLookups.map((lookupName) => (\n              <option key={lookupName} value={lookupName}>\n                {lookupName.replace(/_/g, \" \")}\n              </option>\n            ))}\n          </select>\n        </td>\n        <td>=</td>\n        <td>\n          <FilterValue\n            value={this.props.value}\n            onChange={(e) => query.setFilterValue(index, e.target.value)}\n            lookup={type.lookups[lookup]}\n          />\n          {this.props.errorMessage ? <p>{this.props.errorMessage}</p> : \"\"}\n        </td>\n      </tr>\n    );\n  }\n}\n\nfunction Filters(props) {\n  return (\n    <form className=\"Filters\">\n      <table className=\"Flat\">\n        <tbody>\n          {props.filters.map((filter, index) => (\n            <Filter\n              query={props.query}\n              key={index}\n              index={index}\n              {...filter}\n              errorMessage={props.filterErrors[index]}\n            />\n          ))}\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isToggleOn: false };\n  }\n\n  handleClick() {\n    this.setState((state) => ({\n      isToggleOn: !state.isToggleOn,\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <td>\n          <Link className=\"ToggleLink\" onClick={this.handleClick.bind(this)}>\n            {this.state.isToggleOn ? \">\" : \"+\"}\n          </Link>\n        </td>\n        <td>\n          {this.props.title}\n          {this.state.isToggleOn && this.props.children}\n        </td>\n      </>\n    );\n  }\n}\n\nfunction Field(props) {\n  const modelField = props.modelField;\n  const title = modelField.type ? (\n    <Link onClick={() => props.query.addField(props.path, props.prettyPath)}>\n      {modelField.prettyName}\n    </Link>\n  ) : (\n    modelField.prettyName\n  );\n  const type = props.query.getType(modelField);\n  return (\n    <tr>\n      <td>\n        {modelField.concrete && type.defaultLookup && (\n          <Link\n            onClick={() => props.query.addFilter(props.path, props.prettyPath)}\n          >\n            Y\n          </Link>\n        )}\n      </td>\n\n      {modelField.model ? (\n        <Toggle title={title}>\n          <AllFields\n            query={props.query}\n            model={modelField.model}\n            path={props.path}\n            prettyPath={props.prettyPath}\n          />\n        </Toggle>\n      ) : (\n        <>\n          <td></td>\n          <td>{title}</td>\n        </>\n      )}\n    </tr>\n  );\n}\n\nfunction AllFields(props) {\n  const modelFields = props.query.getModelFields(props.model);\n  return (\n    <table>\n      <tbody>\n        {modelFields.sortedFields.map((fieldName) => {\n          const modelField = modelFields.fields[fieldName];\n          return (\n            <Field\n              key={fieldName}\n              query={props.query}\n              path={props.path.concat([fieldName])}\n              prettyPath={props.prettyPath.concat([modelField.prettyName])}\n              modelField={modelField}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction ModelSelector(props) {\n  return (\n    <select\n      className=\"ModelSelector\"\n      onChange={(e) => props.query.setModel(e.target.value)}\n      value={props.model}\n    >\n      {props.sortedModels.map((model) => (\n        <option key={model}>{model}</option>\n      ))}\n    </select>\n  );\n}\n\nfunction Logo(props) {\n  return (\n    <div className=\"Logo\" onClick={() => props.query.setModel(\"\")}>\n      <span>DDB</span>\n      <span className=\"Version\">v{props.version}</span>\n    </div>\n  );\n}\n\nfunction QueryPage(props) {\n  const saveUrl = props.query.getUrlForSave();\n  return (\n    <div id=\"body\">\n      <Logo query={props.query} version={props.version} />\n      <ModelSelector\n        query={props.query}\n        sortedModels={props.sortedModels}\n        model={props.model}\n      />\n      <Filters\n        query={props.query}\n        filters={props.filters}\n        filterErrors={props.filterErrors}\n      />\n      <p>\n        Showing {props.rows.length * props.cols.length} results -{\" \"}\n        <a href={props.query.getUrlForMedia(\"csv\")}>Download as CSV</a> -{\" \"}\n        <a href={props.query.getUrlForMedia(\"json\")}>View as JSON</a>\n        {saveUrl && (\n          <>\n            {\" \"}\n            - <a href={saveUrl}>Save View</a>{\" \"}\n          </>\n        )}\n      </p>\n      <div className=\"MainSpace\">\n        <div className=\"FieldsList\">\n          <AllFields\n            query={props.query}\n            model={props.model}\n            path={[]}\n            prettyPath={[]}\n          />\n        </div>\n        {props.query.rowFields().length || props.query.colFields().length ? (\n          <Results\n            query={props.query}\n            rows={props.rows}\n            cols={props.cols}\n            body={props.body}\n          />\n        ) : (\n          <h2>No fields selected</h2>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction HomePage(props) {\n  return (\n    <div id=\"body\">\n      <Logo query={props.query} version={props.version} />\n      <div className=\"Index\">\n        <div>\n          <h1>Models</h1>\n          <div>\n            {props.sortedModels.map((model) => (\n              <div key={model}>\n                <button\n                  className=\"Link\"\n                  onClick={() => props.query.setModel(model)}\n                >\n                  {model}\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div>\n          <h1>Saved Views</h1>\n          <div>\n            {props.savedViews.map((view, index) => (\n              <div key={index}>\n                <button\n                  className=\"Link\"\n                  onClick={() => props.query.setQuery(view.query)}\n                >\n                  {view.model} - {view.name}\n                </button>\n                <p>{view.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { HomePage, QueryPage };\n","const empty = {\n  rows: [{}],\n  cols: [{}],\n  body: [[{}]],\n  filterErrors: [],\n};\n\nfunction getPartsForQuery(query) {\n  return {\n    model: query.model,\n    fields: query.fields\n      .map(\n        (f) =>\n          (f.pivoted ? \"&\" : \"\") +\n          f.path.join(\"__\") +\n          { asc: `+${f.priority}`, dsc: `-${f.priority}`, null: \"\" }[f.sort]\n      )\n      .join(\",\"),\n    query: query.filters\n      .map((f) => `${f.path.join(\"__\")}__${f.lookup}=${f.value}`)\n      .join(\"&\"),\n  };\n}\n\nfunction getUrlForQuery(baseUrl, query, media) {\n  const parts = getPartsForQuery(query);\n  const basePath = `${baseUrl}query/${parts.model}`;\n  return `${window.location.origin}${basePath}/${parts.fields}.${media}?${parts.query}`;\n}\n\nclass Query {\n  constructor(config, query, setQuery) {\n    this.config = config;\n    this.query = query;\n    this.setQuery = setQuery;\n  }\n\n  getField(path) {\n    const field = path.slice(-1);\n    let model = this.query.model;\n    for (const field of path.slice(0, -1)) {\n      model = this.config.allModelFields[model].fields[field].model;\n    }\n    return this.config.allModelFields[model].fields[field];\n  }\n\n  getType(field) {\n    return this.config.types[field.type];\n  }\n\n  getModelFields(model) {\n    return this.config.allModelFields[model];\n  }\n\n  getDefaultLookupValue(type, lookup) {\n    return this.config.types[type.lookups[lookup].type].defaultValue;\n  }\n\n  addField(path, prettyPath) {\n    const newFields = this.query.fields.slice();\n    newFields.push({\n      path: path,\n      pathStr: path.join(\"__\"),\n      prettyPath: prettyPath,\n      sort: null,\n      priority: null,\n      pivoted: false,\n    });\n    this.setQuery({ fields: newFields });\n  }\n\n  removeField(field) {\n    this.setQuery({\n      fields: this.query.fields.filter((f) => f.pathStr !== field.pathStr),\n    });\n  }\n\n  toggleSort(field) {\n    const index = this.query.fields.findIndex(\n      (f) => f.pathStr === field.pathStr\n    );\n    const newSort = { asc: \"dsc\", dsc: null, null: \"asc\" }[field.sort];\n    let newFields = this.query.fields.slice();\n\n    if (field.sort) {\n      // move any later sort fields forward\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority:\n          f.priority != null && f.priority > field.priority\n            ? f.priority - 1\n            : f.priority,\n      }));\n    }\n\n    if (newSort) {\n      // move all other fiels back and insert the updated one\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority: f.priority != null ? f.priority + 1 : f.priority,\n      }));\n      newFields[index] = { ...field, sort: newSort, priority: 0 };\n    } else {\n      // blank the sort on the updated field\n      newFields[index] = { ...field, sort: null, priority: null };\n    }\n\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  togglePivot(field) {\n    const index = this.query.fields.findIndex(\n      (f) => f.pathStr === field.pathStr\n    );\n    let newFields = this.query.fields.slice();\n    newFields[index].pivoted = !newFields[index].pivoted;\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  addFilter(path, prettyPath) {\n    const type = this.getType(this.getField(path));\n    const newFilters = this.query.filters.slice();\n    newFilters.push({\n      path: path,\n      pathStr: path.join(\"__\"),\n      prettyPath: prettyPath,\n      lookup: type.defaultLookup,\n      value: this.getDefaultLookupValue(type, type.defaultLookup),\n    });\n    this.setQuery({ filters: newFilters });\n  }\n\n  removeFilter(index) {\n    const newFilters = this.query.filters.slice();\n    newFilters.splice(index, 1);\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterValue(index, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters[index] = { ...newFilters[index], value: value };\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterLookup(index, lookup) {\n    const newFilters = this.query.filters.slice();\n    const filter = newFilters[index];\n    const type = this.getType(this.getField(newFilters[index].path));\n    if (type.lookups[filter.lookup].type !== type.lookups[lookup].type) {\n      filter.value = this.getDefaultLookupValue(type, lookup);\n    }\n    filter.lookup = lookup;\n    this.setQuery({ filters: newFilters });\n  }\n\n  setModel(model) {\n    this.setQuery({\n      model: model,\n      fields: [],\n      filters: [],\n      ...empty,\n    });\n  }\n\n  getUrlForSave() {\n    if (this.config.adminUrl === null) return null;\n    const parts = getPartsForQuery(this.query);\n    parts.model_name = parts.model;\n    const queryString = new URLSearchParams(parts).toString();\n    return `${window.location.origin}${this.config.adminUrl}?${queryString}`;\n  }\n\n  getUrlForMedia(media) {\n    return getUrlForQuery(this.config.baseUrl, this.query, media);\n  }\n\n  colFields() {\n    return this.query.fields.filter((f) => f.pivoted);\n  }\n\n  rowFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter(\n        (f) => !f.pivoted && this.getField(f.path).canPivot\n      );\n    } else {\n      return this.query.fields;\n    }\n  }\n\n  resFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter((f) => !this.getField(f.path).canPivot);\n    } else {\n      return [];\n    }\n  }\n}\n\nexport { Query, getPartsForQuery, getUrlForQuery, empty };\n","import * as Sentry from \"@sentry/browser\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { HomePage, QueryPage } from \"./Components\";\nimport { Query, getUrlForQuery, empty } from \"./Query\";\nconst assert = require(\"assert\");\nlet controller;\n\nfunction handleError(e) {\n  if (e.name === \"AbortError\") {\n    console.log(\"request aborted\");\n  } else {\n    console.log(e);\n    Sentry.captureException(e);\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = props.initialState;\n  }\n\n  fetchResults(state) {\n    const url = getUrlForQuery(this.props.config.baseUrl, state, \"json\");\n\n    if (controller) controller.abort();\n    controller = new AbortController();\n\n    if (!state.model)\n      return Promise.resolve({\n        model: \"\",\n        fields: [],\n        filters: [],\n        ...empty,\n      });\n\n    return fetch(url, { signal: controller.signal })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.version !== this.state.version)\n          window.location.reload(true);\n        delete response.version;\n        return response;\n      })\n      .then((response) => {\n        this.setState({\n          body: response.body,\n          cols: response.cols,\n          rows: response.rows,\n          filterErrors: response.filterErrors,\n        });\n        return response;\n      });\n  }\n\n  componentDidMount() {\n    const reqState = {\n      model: this.state.model,\n      fields: this.state.fields,\n      filters: this.state.filters,\n      ...empty,\n    };\n    window.history.replaceState(\n      reqState,\n      null,\n      getUrlForQuery(this.props.config.baseUrl, this.state, \"html\")\n    );\n    this.fetchResults(this.state).catch(handleError);\n    window.onpopstate = (e) => {\n      this.fetchResults(e.state).catch(handleError);\n      this.setState(e.state);\n    };\n  }\n\n  handleQueryChange(queryChange) {\n    this.setState(queryChange);\n    const newState = { ...this.state, ...queryChange };\n    const request = {\n      model: newState.model,\n      fields: newState.fields,\n      filters: newState.filters,\n      ...empty,\n    };\n    window.history.pushState(\n      request,\n      null,\n      getUrlForQuery(this.props.config.baseUrl, newState, \"html\")\n    );\n    this.fetchResults(newState)\n      .then((response) => {\n        response = { ...response, ...empty };\n        assert.deepEqual(response, request);\n      })\n      .catch(handleError);\n  }\n\n  render() {\n    const query = new Query(\n      this.props.config,\n      this.state,\n      this.handleQueryChange.bind(this)\n    );\n    if (this.state.model)\n      return (\n        <QueryPage\n          query={query}\n          sortedModels={this.props.config.sortedModels}\n          version={this.props.config.version}\n          {...this.state}\n        />\n      );\n    else\n      return (\n        <HomePage\n          query={query}\n          sortedModels={this.props.config.sortedModels}\n          savedViews={this.props.config.savedViews}\n          version={this.props.config.version}\n        />\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst djangoData = JSON.parse(\n    document.getElementById(\"django-data\").textContent\n);\n\nif (djangoData.sentryDsn) {\n    Sentry.init({\n        dsn: djangoData.sentryDsn,\n        release: djangoData.config.version,\n        attachStacktrace: true,\n    });\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App {...djangoData} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}