# Generated by Django 3.0.7 on 2020-06-12 11:17

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.images.blocks
import wagtail.search.index
import wagtail.snippets.blocks
import webspace.cms.amp.mixins
import webspace.cms.blocks.static.calendly
import webspace.cms.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
        ('wagtailimages', '0022_uploadedimage'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wagtaildocs', '0010_document_file_hash'),
    ]

    operations = [
        migrations.CreateModel(
            name='GenericPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('theme', models.CharField(choices=[('space', 'Space'), ('space-inverse', 'Space Inverse'), ('light', 'Light')], default='space', max_length=100)),
                ('breadcrumb', models.BooleanField(default=True, help_text='Ajoute la page dans le sitemap et génère un schéma Breadcrumb', verbose_name='Public pour Google')),
                ('header_menus', wagtail.core.fields.StreamField([('menu', wagtail.snippets.blocks.SnippetChooserBlock(webspace.cms.models.Menu, required=False))], blank=True)),
                ('header_buttons', wagtail.core.fields.StreamField([('button', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('open_new_tab', wagtail.core.blocks.BooleanBlock(default=False, required=False)), ('type', wagtail.core.blocks.ChoiceBlock(choices=[('green-light', 'Green Light'), ('green-full', 'Green Full'), ('white-light', 'White Light'), ('white-full', 'White Full'), ('blue-light', 'Blue Light'), ('blue-full', 'Blue Full')]))]))], blank=True)),
                ('schemas', wagtail.core.fields.StreamField([('how_to', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock(required=True)), ('description', wagtail.core.blocks.CharBlock(required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Image 500x500', required=True)), ('step', wagtail.core.blocks.StreamBlock([('step', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock(required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Image 500x500', required=False)), ('name', wagtail.core.blocks.CharBlock(required=True)), ('url', wagtail.core.blocks.URLBlock(required=False))]))]))])), ('faq_page', wagtail.core.blocks.StructBlock([('questions', wagtail.core.blocks.StreamBlock([('questions', wagtail.core.blocks.StructBlock([('question', wagtail.core.blocks.CharBlock(required=True)), ('answer', wagtail.core.blocks.CharBlock(required=True))]))]))]))], blank=True)),
                ('body', wagtail.core.fields.StreamField([('first_content', wagtail.core.blocks.StructBlock([('svg_bg', wagtail.core.blocks.StructBlock([('desktop', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))])), ('mobile', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))]))], required=False)), ('svg_bg_position', wagtail.core.blocks.ChoiceBlock(choices=[('top', 'Top'), ('center', 'Center'), ('bottom', 'Bottom'), ('left', 'Left'), ('right', 'Right')], required=False)), ('theme', wagtail.core.blocks.ChoiceBlock(choices=[('space', 'Space'), ('space-inverse', 'Space Inverse'), ('light', 'Light')], required=False)), ('container', wagtail.core.blocks.ChoiceBlock(choices=[('regular', 'Regular'), ('content', 'Content (blog)'), ('full', 'Full (width 100%)')], required=False)), ('padding_top', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('padding_bottom', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('h1', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'code-block', 'blockquote', 'strikethrough', 'mark'], required=False))])), ('buttons', wagtail.core.blocks.StreamBlock([('button', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('open_new_tab', wagtail.core.blocks.BooleanBlock(default=False, required=False)), ('type', wagtail.core.blocks.ChoiceBlock(choices=[('green-light', 'Green Light'), ('green-full', 'Green Full'), ('white-light', 'White Light'), ('white-full', 'White Full'), ('blue-light', 'Blue Light'), ('blue-full', 'Blue Full')]))]))], max_num=2, required=False)), ('align', wagtail.core.blocks.ChoiceBlock(choices=[(None, 'Unset'), ('left', 'Left'), ('center', 'Center'), ('right', 'Right'), ('justify', 'Justify')], required=False))])), ('svg', wagtail.core.blocks.StructBlock([('svg_bg', wagtail.core.blocks.StructBlock([('desktop', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))])), ('mobile', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))]))], required=False)), ('svg_bg_position', wagtail.core.blocks.ChoiceBlock(choices=[('top', 'Top'), ('center', 'Center'), ('bottom', 'Bottom'), ('left', 'Left'), ('right', 'Right')], required=False)), ('theme', wagtail.core.blocks.ChoiceBlock(choices=[('space', 'Space'), ('space-inverse', 'Space Inverse'), ('light', 'Light')], required=False)), ('container', wagtail.core.blocks.ChoiceBlock(choices=[('regular', 'Regular'), ('content', 'Content (blog)'), ('full', 'Full (width 100%)')], required=False)), ('padding_top', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('padding_bottom', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('svg', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('xs', 'XS'), ('s', 'S'), ('m', 'M'), ('l', 'L'), ('x', 'X'), ('xl', 'XL')]))]))])), ('image', wagtail.core.blocks.StructBlock([('svg_bg', wagtail.core.blocks.StructBlock([('desktop', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))])), ('mobile', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))]))], required=False)), ('svg_bg_position', wagtail.core.blocks.ChoiceBlock(choices=[('top', 'Top'), ('center', 'Center'), ('bottom', 'Bottom'), ('left', 'Left'), ('right', 'Right')], required=False)), ('theme', wagtail.core.blocks.ChoiceBlock(choices=[('space', 'Space'), ('space-inverse', 'Space Inverse'), ('light', 'Light')], required=False)), ('container', wagtail.core.blocks.ChoiceBlock(choices=[('regular', 'Regular'), ('content', 'Content (blog)'), ('full', 'Full (width 100%)')], required=False)), ('padding_top', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('padding_bottom', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('image', wagtail.core.blocks.StructBlock([('file', wagtail.images.blocks.ImageChooserBlock(label='Image 500x500', required=False)), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('xs', 'XS'), ('s', 'S'), ('m', 'M'), ('l', 'L'), ('x', 'X'), ('xl', 'XL')]))])), ('size_auto', wagtail.core.blocks.BooleanBlock(default=False, required=False))])), ('text', wagtail.core.blocks.StructBlock([('svg_bg', wagtail.core.blocks.StructBlock([('desktop', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))])), ('mobile', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))]))], required=False)), ('svg_bg_position', wagtail.core.blocks.ChoiceBlock(choices=[('top', 'Top'), ('center', 'Center'), ('bottom', 'Bottom'), ('left', 'Left'), ('right', 'Right')], required=False)), ('theme', wagtail.core.blocks.ChoiceBlock(choices=[('space', 'Space'), ('space-inverse', 'Space Inverse'), ('light', 'Light')], required=False)), ('container', wagtail.core.blocks.ChoiceBlock(choices=[('regular', 'Regular'), ('content', 'Content (blog)'), ('full', 'Full (width 100%)')], required=False)), ('padding_top', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('padding_bottom', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('text', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'code-block', 'blockquote', 'strikethrough', 'mark'], required=False))])), ('align', wagtail.core.blocks.ChoiceBlock(choices=[(None, 'Unset'), ('left', 'Left'), ('center', 'Center'), ('right', 'Right'), ('justify', 'Justify')], required=False))])), ('cards', wagtail.core.blocks.StructBlock([('svg_bg', wagtail.core.blocks.StructBlock([('desktop', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))])), ('mobile', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))]))], required=False)), ('svg_bg_position', wagtail.core.blocks.ChoiceBlock(choices=[('top', 'Top'), ('center', 'Center'), ('bottom', 'Bottom'), ('left', 'Left'), ('right', 'Right')], required=False)), ('theme', wagtail.core.blocks.ChoiceBlock(choices=[('space', 'Space'), ('space-inverse', 'Space Inverse'), ('light', 'Light')], required=False)), ('container', wagtail.core.blocks.ChoiceBlock(choices=[('regular', 'Regular'), ('content', 'Content (blog)'), ('full', 'Full (width 100%)')], required=False)), ('padding_top', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('padding_bottom', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('cards', wagtail.core.blocks.StreamBlock([('custom', wagtail.core.blocks.StructBlock([('svg', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('xs', 'XS'), ('s', 'S'), ('m', 'M'), ('l', 'L'), ('x', 'X'), ('xl', 'XL')]))])), ('text', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'code-block', 'blockquote', 'strikethrough', 'mark'], required=False))])), ('button', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('open_new_tab', wagtail.core.blocks.BooleanBlock(default=False, required=False)), ('type', wagtail.core.blocks.ChoiceBlock(choices=[('green-light', 'Green Light'), ('green-full', 'Green Full'), ('white-light', 'White Light'), ('white-full', 'White Full'), ('blue-light', 'Blue Light'), ('blue-full', 'Blue Full')]))]))]))], min_num=1)), ('carousel', wagtail.core.blocks.BooleanBlock(required=False)), ('carousel_cta', wagtail.core.blocks.BooleanBlock(default=True, required=False))])), ('media_text', wagtail.core.blocks.StructBlock([('svg_bg', wagtail.core.blocks.StructBlock([('desktop', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))])), ('mobile', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))]))], required=False)), ('svg_bg_position', wagtail.core.blocks.ChoiceBlock(choices=[('top', 'Top'), ('center', 'Center'), ('bottom', 'Bottom'), ('left', 'Left'), ('right', 'Right')], required=False)), ('theme', wagtail.core.blocks.ChoiceBlock(choices=[('space', 'Space'), ('space-inverse', 'Space Inverse'), ('light', 'Light')], required=False)), ('container', wagtail.core.blocks.ChoiceBlock(choices=[('regular', 'Regular'), ('content', 'Content (blog)'), ('full', 'Full (width 100%)')], required=False)), ('padding_top', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('padding_bottom', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('h2', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'code-block', 'blockquote', 'strikethrough', 'mark'], required=False))])), ('media', wagtail.core.blocks.StreamBlock([('svg', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('xs', 'XS'), ('s', 'S'), ('m', 'M'), ('l', 'L'), ('x', 'X'), ('xl', 'XL')]))])), ('image', wagtail.core.blocks.StructBlock([('file', wagtail.images.blocks.ImageChooserBlock(label='Image 500x500', required=False)), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('xs', 'XS'), ('s', 'S'), ('m', 'M'), ('l', 'L'), ('x', 'X'), ('xl', 'XL')]))]))], max_num=1)), ('buttons', wagtail.core.blocks.StreamBlock([('button', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('open_new_tab', wagtail.core.blocks.BooleanBlock(default=False, required=False)), ('type', wagtail.core.blocks.ChoiceBlock(choices=[('green-light', 'Green Light'), ('green-full', 'Green Full'), ('white-light', 'White Light'), ('white-full', 'White Full'), ('blue-light', 'Blue Light'), ('blue-full', 'Blue Full')]))]))], max_num=2)), ('reverse', wagtail.core.blocks.BooleanBlock(required=False)), ('section', wagtail.core.blocks.BooleanBlock(required=False)), ('align', wagtail.core.blocks.ChoiceBlock(choices=[(None, 'Unset'), ('left', 'Left'), ('center', 'Center'), ('right', 'Right'), ('justify', 'Justify')], required=False))])), ('grid_info', wagtail.core.blocks.StructBlock([('svg_bg', wagtail.core.blocks.StructBlock([('desktop', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))])), ('mobile', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))]))], required=False)), ('svg_bg_position', wagtail.core.blocks.ChoiceBlock(choices=[('top', 'Top'), ('center', 'Center'), ('bottom', 'Bottom'), ('left', 'Left'), ('right', 'Right')], required=False)), ('theme', wagtail.core.blocks.ChoiceBlock(choices=[('space', 'Space'), ('space-inverse', 'Space Inverse'), ('light', 'Light')], required=False)), ('container', wagtail.core.blocks.ChoiceBlock(choices=[('regular', 'Regular'), ('content', 'Content (blog)'), ('full', 'Full (width 100%)')], required=False)), ('padding_top', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('padding_bottom', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('infos', wagtail.core.blocks.StreamBlock([('svg_info', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock()), ('text_hover', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'code-block', 'blockquote', 'strikethrough', 'mark'], required=False))]))])), ('image_info', wagtail.core.blocks.StructBlock([('file', wagtail.images.blocks.ImageChooserBlock(label='Image 500x500', required=False)), ('title', wagtail.core.blocks.CharBlock()), ('text_hover', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'code-block', 'blockquote', 'strikethrough', 'mark'], required=False))]))]))], min_num=1))])), ('medias_line', wagtail.core.blocks.StructBlock([('svg_bg', wagtail.core.blocks.StructBlock([('desktop', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))])), ('mobile', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))]))], required=False)), ('svg_bg_position', wagtail.core.blocks.ChoiceBlock(choices=[('top', 'Top'), ('center', 'Center'), ('bottom', 'Bottom'), ('left', 'Left'), ('right', 'Right')], required=False)), ('theme', wagtail.core.blocks.ChoiceBlock(choices=[('space', 'Space'), ('space-inverse', 'Space Inverse'), ('light', 'Light')], required=False)), ('container', wagtail.core.blocks.ChoiceBlock(choices=[('regular', 'Regular'), ('content', 'Content (blog)'), ('full', 'Full (width 100%)')], required=False)), ('padding_top', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('padding_bottom', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('medias', wagtail.core.blocks.StreamBlock([('svg_label', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('label', wagtail.core.blocks.CharBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))])), ('image_label', wagtail.core.blocks.StructBlock([('file', wagtail.images.blocks.ImageChooserBlock(label='Image 500x500', required=False)), ('label', wagtail.core.blocks.CharBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))]))], min_num=1))])), ('timeline', wagtail.core.blocks.StructBlock([('svg_bg', wagtail.core.blocks.StructBlock([('desktop', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))])), ('mobile', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))]))], required=False)), ('svg_bg_position', wagtail.core.blocks.ChoiceBlock(choices=[('top', 'Top'), ('center', 'Center'), ('bottom', 'Bottom'), ('left', 'Left'), ('right', 'Right')], required=False)), ('theme', wagtail.core.blocks.ChoiceBlock(choices=[('space', 'Space'), ('space-inverse', 'Space Inverse'), ('light', 'Light')], required=False)), ('container', wagtail.core.blocks.ChoiceBlock(choices=[('regular', 'Regular'), ('content', 'Content (blog)'), ('full', 'Full (width 100%)')], required=False)), ('padding_top', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('padding_bottom', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('items', wagtail.core.blocks.StreamBlock([('text', wagtail.core.blocks.StructBlock([('value', wagtail.core.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'code-block', 'blockquote', 'strikethrough', 'mark'], required=False))]))], min_num=1))])), ('buttons', wagtail.core.blocks.StructBlock([('svg_bg', wagtail.core.blocks.StructBlock([('desktop', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))])), ('mobile', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))]))], required=False)), ('svg_bg_position', wagtail.core.blocks.ChoiceBlock(choices=[('top', 'Top'), ('center', 'Center'), ('bottom', 'Bottom'), ('left', 'Left'), ('right', 'Right')], required=False)), ('theme', wagtail.core.blocks.ChoiceBlock(choices=[('space', 'Space'), ('space-inverse', 'Space Inverse'), ('light', 'Light')], required=False)), ('container', wagtail.core.blocks.ChoiceBlock(choices=[('regular', 'Regular'), ('content', 'Content (blog)'), ('full', 'Full (width 100%)')], required=False)), ('padding_top', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('padding_bottom', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('buttons', wagtail.core.blocks.StreamBlock([('button', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock(required=False)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('open_new_tab', wagtail.core.blocks.BooleanBlock(default=False, required=False)), ('type', wagtail.core.blocks.ChoiceBlock(choices=[('green-light', 'Green Light'), ('green-full', 'Green Full'), ('white-light', 'White Light'), ('white-full', 'White Full'), ('blue-light', 'Blue Light'), ('blue-full', 'Blue Full')]))]))], max_num=3)), ('align', wagtail.core.blocks.ChoiceBlock(choices=[(None, 'Unset'), ('left', 'Left'), ('center', 'Center'), ('right', 'Right'), ('justify', 'Justify')], required=False))])), ('calendly', webspace.cms.blocks.static.calendly.Calendly()), ('articles', wagtail.core.blocks.StructBlock([('svg_bg', wagtail.core.blocks.StructBlock([('desktop', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))])), ('mobile', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))]))], required=False)), ('svg_bg_position', wagtail.core.blocks.ChoiceBlock(choices=[('top', 'Top'), ('center', 'Center'), ('bottom', 'Bottom'), ('left', 'Left'), ('right', 'Right')], required=False)), ('theme', wagtail.core.blocks.ChoiceBlock(choices=[('space', 'Space'), ('space-inverse', 'Space Inverse'), ('light', 'Light')], required=False)), ('container', wagtail.core.blocks.ChoiceBlock(choices=[('regular', 'Regular'), ('content', 'Content (blog)'), ('full', 'Full (width 100%)')], required=False)), ('padding_top', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('padding_bottom', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('articles', wagtail.core.blocks.StreamBlock([('article', wagtail.core.blocks.PageChooserBlock(page_type=['cms.BlogPage'], required=False))], min_num=1))])), ('embed', wagtail.core.blocks.StructBlock([('svg_bg', wagtail.core.blocks.StructBlock([('desktop', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))])), ('mobile', wagtail.core.blocks.StructBlock([('file', wagtail.documents.blocks.DocumentChooserBlock(required=False))]))], required=False)), ('svg_bg_position', wagtail.core.blocks.ChoiceBlock(choices=[('top', 'Top'), ('center', 'Center'), ('bottom', 'Bottom'), ('left', 'Left'), ('right', 'Right')], required=False)), ('theme', wagtail.core.blocks.ChoiceBlock(choices=[('space', 'Space'), ('space-inverse', 'Space Inverse'), ('light', 'Light')], required=False)), ('container', wagtail.core.blocks.ChoiceBlock(choices=[('regular', 'Regular'), ('content', 'Content (blog)'), ('full', 'Full (width 100%)')], required=False)), ('padding_top', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('padding_bottom', wagtail.core.blocks.BooleanBlock(default=True, required=False)), ('link', wagtail.core.blocks.URLBlock(required=False))]))], blank=True)),
                ('footer', wagtail.core.fields.StreamField([('menu', wagtail.snippets.blocks.SnippetChooserBlock(webspace.cms.models.Menu, required=False))], blank=True)),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='SEO - Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('help_text', models.CharField(blank=True, default='', max_length=100)),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlogPage',
            fields=[
                ('genericpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cms.GenericPage')),
                ('date', models.DateTimeField(default=datetime.date.today, verbose_name='Date publication + tri')),
                ('date_updated', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Date mise à jour')),
                ('intro', models.CharField(blank=True, default='', max_length=500)),
                ('intro_page', wagtail.core.fields.RichTextField(blank=True, default='')),
                ('h1', models.CharField(blank=True, default='', max_length=200)),
                ('related_blogs', wagtail.core.fields.StreamField([('article', wagtail.core.blocks.PageChooserBlock(page_type=['cms.BlogPage'], required=False))], blank=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('svg_bg_desktop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('svg_bg_mobile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('svg_cover', models.ForeignKey(blank=True, help_text='Dimension : 1920x1080', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
            ],
            options={
                'abstract': False,
            },
            bases=(webspace.cms.amp.mixins.AmpMixin, 'cms.genericpage', models.Model),
        ),
        migrations.CreateModel(
            name='ContentPage',
            fields=[
                ('genericpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cms.GenericPage')),
            ],
            options={
                'abstract': False,
            },
            bases=(webspace.cms.amp.mixins.AmpMixin, 'cms.genericpage', models.Model),
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link_title', models.CharField(blank=True, max_length=50, null=True)),
                ('link_url', models.CharField(blank=True, max_length=500)),
                ('open_in_new_tab', models.BooleanField(blank=True, default=False)),
                ('link_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Page')),
                ('menu', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_items', to='cms.Menu')),
            ],
            options={
                'verbose_name': 'Icon',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IconSnippet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('light', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('space', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
            ],
            options={
                'verbose_name': 'Icon',
                'abstract': False,
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='DocumentPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('genericpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cms.GenericPage')),
                ('h1', models.CharField(blank=True, default='', max_length=200, verbose_name='Search Block - H1')),
                ('search_text', wagtail.core.fields.RichTextField(blank=True, default='', verbose_name='Search Block - Text')),
                ('search_placeholder', models.CharField(blank=True, default='', max_length=200, verbose_name='Search Block - Placeholder')),
                ('svg_bg_desktop', models.ForeignKey(blank=True, help_text='SVG', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document', verbose_name='Search Block - Background Desktop Search Block')),
                ('svg_bg_mobile', models.ForeignKey(blank=True, help_text='SVG', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document', verbose_name='Search Block - Background Mobile')),
            ],
            options={
                'abstract': False,
            },
            bases=(webspace.cms.amp.mixins.AmpMixin, 'cms.genericpage', models.Model),
        ),
        migrations.CreateModel(
            name='BlogPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cms_blogpagetag_items', to='taggit.Tag')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='cms.BlogPage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='blogpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='cms.BlogPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='BlogIndexPage',
            fields=[
                ('genericpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cms.GenericPage')),
                ('h1', models.CharField(blank=True, default='', max_length=200)),
                ('first_text', wagtail.core.fields.RichTextField(blank=True, default='')),
                ('svg_bg_desktop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('svg_bg_mobile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
            ],
            options={
                'abstract': False,
            },
            bases=(webspace.cms.amp.mixins.AmpMixin, 'cms.genericpage', models.Model),
        ),
    ]
