{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/components/links/linkWithConfirmation.tsx","webpack:///./app/components/fileSize.tsx","webpack:///./app/views/settings/projectSourceMaps/detail/sourceMapsArtifactRow.tsx","webpack:///./app/views/settings/projectSourceMaps/detail/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","SearchBar","state","query","defaultQuery","dropdownVisible","searchInputRef","createRef","blur","current","onSubmit","evt","preventDefault","onSearch","clearSearch","setState","callIfFunction","onChange","onQueryFocus","onQueryBlur","onQueryChange","value","target","nextProps","className","width","classNames","Input","type","placeholder","name","ref","autoComplete","onBlur","onClick","PureComponent","undefined","LinkWithConfirmation","disabled","children","otherProps","href","FileSize","bytes","getDynamicText","formatBytes","fixed","SourceMapsArtifactRow","artifact","onDelete","downloadUrl","size","dateCreated","dist","id","Fragment","Column","Name","t","TimeAndDistWrapper","TimeWrapper","date","inline","RightColumn","gap","access","hasAccess","message","onConfirm","priority","theme","fontSizeMedium","fontSizeSmall","gray600","ProjectSourceMaps","handleSearch","location","router","push","cursor","handleDelete","a","addLoadingMessage","api","requestPromise","getArtifactsUrl","method","fetchData","addSuccessMessage","addErrorMessage","params","projectId","version","formatVersion","artifacts","getQuery","orgId","encodeURIComponent","decodeScalar","renderBody","artifactApiUrl","baseUrl","length","map","key","loading","artifactsPageLinks","project","to","direction","Wrapper","noMargin","StyledPanelTable","headers","Actions","emptyMessage","getEmptyMessage","isEmpty","isLoading","renderArtifacts","pageLinks","PanelTable","breakpoints"],"mappings":"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","file":"ProjectSourceMapsDetail.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p => (p.tabs ? `${space(4)} 0 ${space(2)}` : `${space(4)} 0`)};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport {callIfFunction} from 'app/utils/callIfFunction';\n\ntype DefaultProps = {\n  query: string;\n  defaultQuery: string;\n  onSearch: (query: string) => void;\n};\n\ntype Props = DefaultProps & {\n  placeholder?: string;\n  className?: string;\n  onChange?: (query: string) => void;\n  width?: string;\n};\n\ntype State = {\n  query: string;\n  dropdownVisible: boolean;\n};\n\nclass SearchBar extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    query: '',\n    defaultQuery: '',\n    onSearch: function() {},\n  };\n\n  state = {\n    query: this.props.query || this.props.defaultQuery,\n    dropdownVisible: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.setState({\n        query: nextProps.query,\n      });\n    }\n  }\n\n  searchInputRef = React.createRef<HTMLInputElement>();\n\n  blur = () => {\n    if (this.searchInputRef.current) {\n      this.searchInputRef.current.blur();\n    }\n  };\n\n  onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    this.blur();\n    this.props.onSearch(this.state.query);\n  };\n\n  clearSearch = () => {\n    this.setState({query: this.props.defaultQuery}, () => {\n      this.props.onSearch(this.state.query);\n      callIfFunction(this.props.onChange, this.state.query);\n    });\n  };\n\n  onQueryFocus = () => {\n    this.setState({\n      dropdownVisible: true,\n    });\n  };\n\n  onQueryBlur = () => {\n    this.setState({dropdownVisible: false});\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = evt.target;\n\n    this.setState({query: value});\n    callIfFunction(this.props.onChange, value);\n  };\n\n  render() {\n    const {className, width} = this.props;\n\n    return (\n      <div className={classNames('search', className)}>\n        <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n          <div>\n            <Input\n              type=\"text\"\n              className=\"search-input form-control\"\n              placeholder={this.props.placeholder}\n              name=\"query\"\n              ref={this.searchInputRef}\n              autoComplete=\"off\"\n              value={this.state.query}\n              onBlur={this.onQueryBlur}\n              onChange={this.onQueryChange}\n              width={width}\n            />\n            <span className=\"icon-search\" />\n            {this.state.query !== this.props.defaultQuery && (\n              <div>\n                <a className=\"search-clear-form\" onClick={this.clearSearch}>\n                  <span className=\"icon-circle-cross\" />\n                </a>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst Input = styled('input')`\n  width: ${p => (p.width ? p.width : undefined)};\n`;\n\nexport default SearchBar;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\n\ntype Props = {\n  message: React.ReactNode;\n  title: string;\n  onConfirm: () => void;\n  disabled?: boolean;\n  className?: string;\n  priority?: React.ComponentProps<typeof Button>['priority'];\n};\n\n/**\n * <Confirm> is a more generic version of this component\n */\nclass LinkWithConfirmation extends React.PureComponent<Props> {\n  render() {\n    const {className, disabled, title, children, ...otherProps} = this.props;\n    return (\n      <Confirm {...otherProps} disabled={disabled}>\n        <a href=\"#\" className={classNames(className || '', {disabled})} title={title}>\n          {children}\n        </a>\n      </Confirm>\n    );\n  }\n}\n\nexport default LinkWithConfirmation;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {formatBytes} from 'app/utils';\nimport getDynamicText from 'app/utils/getDynamicText';\n\ntype Props = {\n  className?: string;\n  bytes: number;\n};\n\nfunction FileSize(props: Props) {\n  const {className, bytes} = props;\n\n  return (\n    <span className={className}>\n      {getDynamicText({value: formatBytes(bytes), fixed: 'xx KB'})}\n    </span>\n  );\n}\n\nFileSize.propTypes = {\n  className: PropTypes.string,\n  bytes: PropTypes.number.isRequired,\n};\n\nexport default FileSize;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport TimeSince from 'app/components/timeSince';\nimport Button from 'app/components/button';\nimport {IconClock, IconDelete, IconDownload} from 'app/icons';\nimport ButtonBar from 'app/components/buttonBar';\nimport FileSize from 'app/components/fileSize';\nimport {Artifact} from 'app/types';\nimport LinkWithConfirmation from 'app/components/links/linkWithConfirmation';\nimport Access from 'app/components/acl/access';\nimport Tooltip from 'app/components/tooltip';\n\nimport Tag from '../../components/tag';\n\ntype Props = {\n  artifact: Artifact;\n  onDelete: (id: string) => void;\n  downloadUrl: string;\n};\n\nconst SourceMapsArtifactRow = ({artifact, onDelete, downloadUrl}: Props) => {\n  const {name, size, dateCreated, dist, id} = artifact;\n\n  const handleDeleteClick = () => {\n    onDelete(id);\n  };\n\n  return (\n    <React.Fragment>\n      <Column>\n        <Name>{name || `(${t('empty')})`}</Name>\n        <TimeAndDistWrapper>\n          <TimeWrapper>\n            <IconClock size=\"xs\" />\n            <TimeSince date={dateCreated} />\n          </TimeWrapper>\n          {dist && <Tag inline>{dist}</Tag>}\n        </TimeAndDistWrapper>\n      </Column>\n      <Column>\n        <FileSize bytes={size} />\n      </Column>\n      <RightColumn>\n        <ButtonBar gap={0.5}>\n          <Access access={['project:write']}>\n            {({hasAccess}) => (\n              <Tooltip\n                title={t(\n                  'You do not have the required permission to download this artifact.'\n                )}\n                disabled={hasAccess}\n              >\n                <Button\n                  size=\"xsmall\"\n                  icon={<IconDownload size=\"xs\" />}\n                  disabled={!hasAccess}\n                  href={downloadUrl}\n                >\n                  {t('Download')}\n                </Button>\n              </Tooltip>\n            )}\n          </Access>\n          <LinkWithConfirmation\n            title={t('Delete artifact')}\n            message={t('Are you sure you want to remove this artifact?')}\n            onConfirm={handleDeleteClick}\n          >\n            <Button size=\"xsmall\" icon={<IconDelete size=\"xs\" />} priority=\"danger\" />\n          </LinkWithConfirmation>\n        </ButtonBar>\n      </RightColumn>\n    </React.Fragment>\n  );\n};\n\nconst Column = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst RightColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst Name = styled('div')`\n  padding-right: ${space(4)};\n  overflow-wrap: break-word;\n  word-break: break-all;\n`;\n\nconst TimeAndDistWrapper = styled('div')`\n  width: 100%;\n  display: flex;\n  margin-top: ${space(1)};\n  align-items: center;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  grid-gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray600};\n`;\n\nexport default SourceMapsArtifactRow;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport {Organization, Project, Artifact} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport SearchBar from 'app/components/searchBar';\nimport Pagination from 'app/components/pagination';\nimport {PanelTable} from 'app/components/panels';\nimport space from 'app/styles/space';\nimport {formatVersion} from 'app/utils/formatters';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport {IconReleases, IconChevron} from 'app/icons';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {decodeScalar} from 'app/utils/queryString';\n\nimport SourceMapsArtifactRow from './sourceMapsArtifactRow';\n\ntype RouteParams = {orgId: string; projectId: string; version: string};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  artifacts: Artifact[];\n};\n\nclass ProjectSourceMaps extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId, version} = this.props.params;\n\n    return routeTitleGen(t('Source Maps %s', formatVersion(version)), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      artifacts: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['artifacts', this.getArtifactsUrl(), {query: {query: this.getQuery()}}]];\n  }\n\n  getArtifactsUrl() {\n    const {orgId, projectId, version} = this.props.params;\n\n    return `/projects/${orgId}/${projectId}/releases/${encodeURIComponent(\n      version\n    )}/files/`;\n  }\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  handleDelete = async (id: string) => {\n    addLoadingMessage(t('Removing artifact\\u2026'));\n\n    try {\n      await this.api.requestPromise(`${this.getArtifactsUrl()}${id}/`, {\n        method: 'DELETE',\n      });\n      this.fetchData();\n      addSuccessMessage(t('Artifact removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifact. Please try again.'));\n    }\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return decodeScalar(query);\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no artifacts that match your search.');\n    }\n\n    return t('There are no artifacts for this release.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderArtifacts() {\n    const {artifacts} = this.state;\n    const artifactApiUrl = this.api.baseUrl + this.getArtifactsUrl();\n\n    if (!artifacts.length) {\n      return null;\n    }\n\n    return artifacts.map(artifact => {\n      return (\n        <SourceMapsArtifactRow\n          key={artifact.id}\n          artifact={artifact}\n          onDelete={this.handleDelete}\n          downloadUrl={`${artifactApiUrl}${artifact.id}/?download=1`}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, artifacts, artifactsPageLinks} = this.state;\n    const {version, orgId, projectId} = this.props.params;\n    const {project} = this.props;\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader\n          title={t('Source Maps Archive %s', formatVersion(version))}\n          action={\n            <ButtonBar gap={1}>\n              <Button\n                size=\"small\"\n                to={`/settings/${orgId}/projects/${projectId}/source-maps/`}\n                icon={<IconChevron size=\"xs\" direction=\"left\" />}\n              >\n                {t('All Archives')}\n              </Button>\n              <Button\n                size=\"small\"\n                to={`/organizations/${orgId}/releases/${encodeURIComponent(\n                  version\n                )}/?project=${project.id}`}\n                icon={<IconReleases size=\"xs\" />}\n              >\n                {t('View Release')}\n              </Button>\n            </ButtonBar>\n          }\n        />\n\n        <Wrapper>\n          <TextBlock noMargin>{t('Uploaded artifacts')}:</TextBlock>\n          <SearchBar\n            placeholder={t('Filter artifacts')}\n            onSearch={this.handleSearch}\n            query={this.getQuery()}\n          />\n        </Wrapper>\n\n        <StyledPanelTable\n          headers={[\n            t('Artifact'),\n            t('Size'),\n            <Actions key=\"actions\">{t('Actions')}</Actions>,\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={artifacts.length === 0}\n          isLoading={loading}\n        >\n          {this.renderArtifacts()}\n        </StyledPanelTable>\n        <Pagination pageLinks={artifactsPageLinks} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: 1fr 100px 150px;\n`;\n\nconst Actions = styled('div')`\n  text-align: right;\n`;\n\nconst Wrapper = styled('div')`\n  display: grid;\n  grid-template-columns: auto minmax(200px, 400px);\n  grid-gap: ${space(4)};\n  align-items: center;\n  margin-bottom: ${space(1)};\n  margin-top: ${space(1)};\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    display: block;\n  }\n`;\n\nexport default ProjectSourceMaps;\n"],"sourceRoot":""}