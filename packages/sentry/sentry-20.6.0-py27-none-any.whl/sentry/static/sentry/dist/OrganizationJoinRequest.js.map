{"version":3,"sources":["webpack:///./app/views/settings/components/forms/emailField.jsx","webpack:///./app/views/organizationJoinRequest.tsx"],"names":["EmailField","this","props","type","React","Component","OrganizationJoinRequest","state","submitSuccess","handleSubmitSuccess","setState","handleCancel","e","preventDefault","orgId","params","window","location","assign","trackAdhocEvent","eventKey","org_slug","addErrorMessage","t","maxWidth","SuccessModal","MegaphoneIcon","src","size","StyledHeader","StyledText","ReceiveEmailMessage","tct","requireChanges","apiEndpoint","apiMethod","submitLabel","onSubmitSuccess","onSubmitError","handleSubmitError","onCancel","StyledEmailField","name","inline","label","placeholder","space","InlineSvg"],"mappings":"mgBAIqBA,E,4RAEjB,OAAO,YAAC,IAAD,OAAgBC,KAAKC,MAArB,CAA4BC,KAAK,e,GAFJC,IAAMC,WAAzBL,E,yfCiBfM,E,yUACJC,MAAe,CACbC,cAAe,M,EAYjBC,oBAAsB,WACpB,EAAKC,SAAS,CAACF,eAAe,K,EAOhCG,aAAe,SAAAC,GACbA,EAAEC,iBADgB,IAGXC,EAAS,EAAKZ,MAAMa,OAApBD,MACPE,OAAOC,SAASC,OAAhB,sBAAsCJ,EAAtC,O,0DArBkB,IACXA,EAASb,KAAKC,MAAMa,OAApBD,MAEPK,YAAgB,CACdC,SAAU,sBACVC,SAAUP,M,0CASZQ,YAAgBC,YAAE,6B,+BAUX,IACAT,EAASb,KAAKC,MAAMa,OAApBD,MAGP,OAFwBb,KAAKM,MAAtBC,cAIH,YAAC,IAAD,CAAcgB,SAAS,SACrB,YAACC,EAAD,KACE,YAACC,EAAD,CAAeC,IAAI,iBAAiBC,KAAK,QACzC,YAACC,EAAD,KAAeN,YAAE,iBACjB,YAACO,EAAD,KAAaP,YAAE,wCACf,YAACQ,EAAD,KACGC,YAAI,2DAA4D,CAAClB,aAQ1E,YAAC,IAAD,CAAcU,SAAS,SACrB,YAACE,EAAD,CAAeC,IAAI,iBAAiBC,KAAK,QACzC,YAACC,EAAD,KAAeN,YAAE,oBACjB,YAACO,EAAD,KACGE,YAAI,2DAA4D,CAC/DlB,WAGJ,YAAC,IAAD,CACEmB,gBAAc,EACdC,YAAW,yBAAoBpB,EAApB,kBACXqB,UAAU,OACVC,YAAab,YAAE,mBACfc,gBAAiBpC,KAAKQ,oBACtB6B,cAAerC,KAAKsC,kBACpBC,SAAUvC,KAAKU,cAEf,YAAC8B,EAAD,CACEC,KAAK,QACLC,QAAQ,EACRC,MAAOrB,YAAE,iBACTsB,YAAY,2B,GAtEczC,IAAMC,WAAtCC,E,sCA8EN,IAAMmB,EAAe,YAAO,MAAP,2CAAH,uFAKEqB,YAAM,GALR,KAQZpB,EAAgB,YAAOqB,IAAP,4CAAH,kBACCD,YAAM,GADP,KAIbjB,EAAe,YAAO,KAAP,2CAAH,iBACCiB,YAAM,GADP,KAIZhB,EAAa,YAAO,IAAP,yCAAH,2CAIVC,EAAsB,YAAOD,EAAP,kDAAH,4CAInBW,EAAmB,YAAOzC,IAAP,+CAAH,eACL8C,YAAM,GADD,oBAKPxC","file":"OrganizationJoinRequest.js","sourcesContent":["import React from 'react';\n\nimport InputField from './inputField';\n\nexport default class EmailField extends React.Component {\n  render() {\n    return <InputField {...this.props} type=\"email\" />;\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {Params} from 'react-router/lib/Router';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {t, tct} from 'app/locale';\nimport {trackAdhocEvent} from 'app/utils/analytics';\nimport EmailField from 'app/views/settings/components/forms/emailField';\nimport Form from 'app/views/settings/components/forms/form';\nimport InlineSvg from 'app/components/inlineSvg';\nimport NarrowLayout from 'app/components/narrowLayout';\nimport space from 'app/styles/space';\n\ntype Props = {\n  params: Params;\n};\n\ntype State = {\n  submitSuccess: boolean | null;\n};\n\nclass OrganizationJoinRequest extends React.Component<Props, State> {\n  state: State = {\n    submitSuccess: null,\n  };\n\n  componentDidMount() {\n    const {orgId} = this.props.params;\n\n    trackAdhocEvent({\n      eventKey: 'join_request.viewed',\n      org_slug: orgId,\n    });\n  }\n\n  handleSubmitSuccess = () => {\n    this.setState({submitSuccess: true});\n  };\n\n  handleSubmitError() {\n    addErrorMessage(t('Request to join failed'));\n  }\n\n  handleCancel = e => {\n    e.preventDefault();\n\n    const {orgId} = this.props.params;\n    window.location.assign(`/auth/login/${orgId}/`);\n  };\n\n  render() {\n    const {orgId} = this.props.params;\n    const {submitSuccess} = this.state;\n\n    if (submitSuccess) {\n      return (\n        <NarrowLayout maxWidth=\"550px\">\n          <SuccessModal>\n            <MegaphoneIcon src=\"icon-megaphone\" size=\"5em\" />\n            <StyledHeader>{t('Request Sent')}</StyledHeader>\n            <StyledText>{t('Your request to join has been sent.')}</StyledText>\n            <ReceiveEmailMessage>\n              {tct('You will receive an email when your request is approved.', {orgId})}\n            </ReceiveEmailMessage>\n          </SuccessModal>\n        </NarrowLayout>\n      );\n    }\n\n    return (\n      <NarrowLayout maxWidth=\"650px\">\n        <MegaphoneIcon src=\"icon-megaphone\" size=\"5em\" />\n        <StyledHeader>{t('Request to Join')}</StyledHeader>\n        <StyledText>\n          {tct('Ask the admins if you can join the [orgId] organization.', {\n            orgId,\n          })}\n        </StyledText>\n        <Form\n          requireChanges\n          apiEndpoint={`/organizations/${orgId}/join-request/`}\n          apiMethod=\"POST\"\n          submitLabel={t('Request to Join')}\n          onSubmitSuccess={this.handleSubmitSuccess}\n          onSubmitError={this.handleSubmitError}\n          onCancel={this.handleCancel}\n        >\n          <StyledEmailField\n            name=\"email\"\n            inline={false}\n            label={t('Email Address')}\n            placeholder=\"name@example.com\"\n          />\n        </Form>\n      </NarrowLayout>\n    );\n  }\n}\n\nconst SuccessModal = styled('div')`\n  display: grid;\n  justify-items: center;\n  text-align: center;\n  padding-top: 10px;\n  padding-bottom: ${space(4)};\n`;\n\nconst MegaphoneIcon = styled(InlineSvg)`\n  padding-bottom: ${space(3)};\n`;\n\nconst StyledHeader = styled('h3')`\n  margin-bottom: ${space(1)};\n`;\n\nconst StyledText = styled('p')`\n  margin-bottom: 0;\n`;\n\nconst ReceiveEmailMessage = styled(StyledText)`\n  max-width: 250px;\n`;\n\nconst StyledEmailField = styled(EmailField)`\n  padding-top: ${space(2)};\n  padding-left: 0;\n`;\n\nexport default OrganizationJoinRequest;\n"],"sourceRoot":""}