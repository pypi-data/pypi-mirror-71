{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/plugins/components/pluginIcon.tsx","webpack:///./images/logos/logo-default.svg","webpack:///./images/logos/logo-sentry.svg","webpack:///./images/logos/logo-amixr.svg","webpack:///./images/logos/logo-asana.svg","webpack:///./images/logos/logo-asayer.svg","webpack:///./images/logos/logo-bitbucket.svg","webpack:///./images/logos/logo-bitbucket-server.svg","webpack:///./images/logos/logo-campfire.svg","webpack:///./images/logos/logo-clickup.svg","webpack:///./images/logos/logo-clubhouse.svg","webpack:///./images/logos/logo-datadog.svg","webpack:///./images/logos/logo-flowdock.svg","webpack:///./images/logos/logo-fullstory.svg","webpack:///./images/logos/logo-github.svg","webpack:///./images/logos/logo-github-enterprise.svg","webpack:///./images/logos/logo-gitlab.svg","webpack:///./images/logos/logo-heroku.svg","webpack:///./images/logos/logo-jira.svg","webpack:///./images/logos/logo-jira-server.svg","webpack:///./images/logos/logo-lighthouse.svg","webpack:///./images/logos/logo-msteams.svg","webpack:///./images/logos/logo-netlify.svg","webpack:///./images/logos/logo-opsgenie.svg","webpack:///./images/logos/logo-pagerduty.svg","webpack:///./images/logos/logo-phabricator.svg","webpack:///./images/logos/logo-pivotaltracker.svg","webpack:///./images/logos/logo-pushover.svg","webpack:///./images/logos/logo-redmine.svg","webpack:///./images/logos/logo-rocketchat.svg","webpack:///./images/logos/logo-rookout.svg","webpack:///./images/logos/logo-segment.svg","webpack:///./images/logos/logo-slack.svg","webpack:///./images/logos/logo-split.svg","webpack:///./images/logos/logo-taiga.svg","webpack:///./images/logos/logo-teamwork.svg","webpack:///./images/logos/logo-trello.svg","webpack:///./images/logos/logo-twilio.svg","webpack:///./images/logos/logo-visualstudio.svg","webpack:///./images/logos/logo-azure.svg","webpack:///./images/logos/logo-youtrack.svg","webpack:///./images/logos/logo-victorops.svg","webpack:///./images/logos/logo-zulip.svg","webpack:///./app/actionCreators/plugins.jsx","webpack:///./app/actions/pluginActions.tsx","webpack:///./app/components/pluginConfig.jsx","webpack:///./app/stores/pluginsStore.jsx","webpack:///./app/utils/withPlugins.tsx","webpack:///./app/views/settings/projectPlugins/constants.tsx","webpack:///./app/views/settings/projectPlugins/details.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","DEFAULT_ICON","placeholder","ICON_PATHS","_default","sentry","browsers","device","interface_types","os","urls","webhooks","amixr","asana","asayer","bitbucket","bitbucket_release_pipe","bitbucket_server","bitbucketserver","campfire","clickup","clubhouse","datadog","flowdock","fullstory","github","github_enterprise","githubEnterprise","gitlab","heroku","jira","jira_server","jiraserver","lighthouse","msteams","netlify","opsgenie","pagerduty","phabricator","pivotal","pushover","redmine","rocketchat","rookout","segment","slack","split","taiga","teamwork","trello","twilio","visualstudio","vsts","youtrack","victorops","zulip","PluginIcon","size","pluginId","undefined","propTypes","PropTypes","string","number","module","exports","activeFetch","api","Client","doUpdate","orgId","projectId","update","params","PluginActions","request","requestPromise","then","updateSuccess","resp","err","responseJSON","detail","Error","updateError","fetchPlugins","options","path","fetchAll","method","data","_","jqXHR","fetchAllSuccess","pageLinks","getResponseHeader","fetchAllError","enablePlugin","addLoadingMessage","t","enabled","addSuccessMessage","addErrorMessage","disablePlugin","Reflux","createActions","PluginConfig","state","loading","plugins","isLoaded","testResults","handleDisablePlugin","onDisablePlugin","handleTestPlugin","a","setState","getPluginEndpoint","test","JSON","stringify","loadPlugin","nextProps","nextState","isEqual","load","organization","project","slug","id","__html","doc","className","hasButtons","PluginName","StyledPluginIcon","name","canDisable","Actions","isTestable","TestPluginButton","onClick","status","type","StyledPanelBody","dangerouslySetInnerHTML","createMarkup","get","renderSettings","withApi","Button","PanelBody","PluginsStore","createStore","getInitialState","getState","Array","from","values","init","reset","listenTo","onFetchAll","onFetchAllSuccess","onFetchAllError","onUpdate","onUpdateSuccess","onUpdateError","error","updating","Map","triggerState","trigger","resetLoading","map","plugin","updateObj","newPlugin","set","_updateObj","origPlugin","withPlugins","WrappedComponent","withOrganization","withProject","createReactClass","displayName","getDisplayName","mixins","connect","componentDidMount","componentDidUpdate","prevProps","_prevState","prevContext","prevOrg","prevProject","defined","isOrgSame","isProjectSame","render","store","DEPRECATED_PLUGINS","ProjectPluginDetails","handleReset","trackIntegrationEvent","eventKey","eventName","integration","integration_type","view","project_id","success","pluginDetails","handleEnable","analyticsChangeEnableStatus","handleDisable","arguments","recordDetailsViewed","value","find","getEnabled","disabled","includes","enable","style","marginRight","disable","priority","toggleEnable","renderActions","author","url","href","trimSchema","version","description","resourceLinks","key"],"mappings":"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","file":"ProjectPluginDetails.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p => (p.tabs ? `${space(4)} 0 ${space(2)}` : `${space(4)} 0`)};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nimport placeholder from 'app/../images/logos/logo-default.svg';\nimport sentry from 'app/../images/logos/logo-sentry.svg';\nimport amixr from 'app/../images/logos/logo-amixr.svg';\nimport asana from 'app/../images/logos/logo-asana.svg';\nimport asayer from 'app/../images/logos/logo-asayer.svg';\nimport bitbucket from 'app/../images/logos/logo-bitbucket.svg';\nimport bitbucketserver from 'app/../images/logos/logo-bitbucket-server.svg';\nimport campfire from 'app/../images/logos/logo-campfire.svg';\nimport clickup from 'app/../images/logos/logo-clickup.svg';\nimport clubhouse from 'app/../images/logos/logo-clubhouse.svg';\nimport datadog from 'app/../images/logos/logo-datadog.svg';\nimport flowdock from 'app/../images/logos/logo-flowdock.svg';\nimport fullstory from 'app/../images/logos/logo-fullstory.svg';\nimport github from 'app/../images/logos/logo-github.svg';\nimport githubEnterprise from 'app/../images/logos/logo-github-enterprise.svg';\nimport gitlab from 'app/../images/logos/logo-gitlab.svg';\nimport heroku from 'app/../images/logos/logo-heroku.svg';\nimport jira from 'app/../images/logos/logo-jira.svg';\nimport jiraserver from 'app/../images/logos/logo-jira-server.svg';\nimport lighthouse from 'app/../images/logos/logo-lighthouse.svg';\nimport msteams from 'app/../images/logos/logo-msteams.svg';\nimport netlify from 'app/../images/logos/logo-netlify.svg';\nimport opsgenie from 'app/../images/logos/logo-opsgenie.svg';\nimport pagerduty from 'app/../images/logos/logo-pagerduty.svg';\nimport phabricator from 'app/../images/logos/logo-phabricator.svg';\nimport pivotal from 'app/../images/logos/logo-pivotaltracker.svg';\nimport pushover from 'app/../images/logos/logo-pushover.svg';\nimport redmine from 'app/../images/logos/logo-redmine.svg';\nimport rocketchat from 'app/../images/logos/logo-rocketchat.svg';\nimport rookout from 'app/../images/logos/logo-rookout.svg';\nimport segment from 'app/../images/logos/logo-segment.svg';\nimport slack from 'app/../images/logos/logo-slack.svg';\nimport split from 'app/../images/logos/logo-split.svg';\nimport taiga from 'app/../images/logos/logo-taiga.svg';\nimport teamwork from 'app/../images/logos/logo-teamwork.svg';\nimport trello from 'app/../images/logos/logo-trello.svg';\nimport twilio from 'app/../images/logos/logo-twilio.svg';\nimport visualstudio from 'app/../images/logos/logo-visualstudio.svg';\nimport vsts from 'app/../images/logos/logo-azure.svg';\nimport youtrack from 'app/../images/logos/logo-youtrack.svg';\nimport victorops from 'app/../images/logos/logo-victorops.svg';\nimport zulip from 'app/../images/logos/logo-zulip.svg';\n\n// Map of plugin id -> logo filename\nexport const DEFAULT_ICON = placeholder;\nexport const ICON_PATHS = {\n  _default: DEFAULT_ICON,\n  sentry,\n  browsers: sentry,\n  device: sentry,\n  interface_types: sentry,\n  os: sentry,\n  urls: sentry,\n  webhooks: sentry,\n\n  amixr,\n  asana,\n  asayer,\n  bitbucket,\n  bitbucket_release_pipe: bitbucket,\n  bitbucket_server: bitbucketserver,\n  campfire,\n  clickup,\n  clubhouse,\n  datadog,\n  flowdock,\n  fullstory,\n  github,\n  github_enterprise: githubEnterprise,\n  gitlab,\n  heroku,\n  jira,\n  'jira-atlassian-connect': jira,\n  'jira-ac': jira,\n  jira_server: jiraserver,\n  lighthouse,\n  msteams,\n  netlify,\n  opsgenie,\n  pagerduty,\n  phabricator,\n  pivotal,\n  pushover,\n  redmine,\n  rocketchat,\n  rookout,\n  segment,\n  slack,\n  split,\n  taiga,\n  teamwork,\n  trello,\n  twilio,\n  visualstudio,\n  vsts,\n  youtrack,\n  victorops,\n  zulip,\n};\n\ntype Props = {\n  pluginId?: string;\n  size?: number;\n};\n\nconst PluginIcon = styled('div')<Props>`\n  position: relative;\n  height: ${p => p.size}px;\n  width: ${p => p.size}px;\n  border-radius: 2px;\n  border: 0;\n  /* this is so that there aren't gray boxes before load */\n  background-color: #fff;\n  display: inline-block;\n  background-size: contain;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-image: url(${({pluginId}) =>\n    (pluginId !== undefined && ICON_PATHS[pluginId]) || DEFAULT_ICON});\n`;\n\nPluginIcon.defaultProps = {\n  pluginId: '_default',\n  size: 20,\n};\n\nPluginIcon.propTypes = {\n  pluginId: PropTypes.string,\n  size: PropTypes.number,\n};\n\nexport default PluginIcon;\n","module.exports = __webpack_public_path__ + \"logo-default.499c38.svg\";","module.exports = __webpack_public_path__ + \"logo-sentry.6c468e.svg\";","module.exports = __webpack_public_path__ + \"logo-amixr.a26380.svg\";","module.exports = __webpack_public_path__ + \"logo-asana.1759e5.svg\";","module.exports = __webpack_public_path__ + \"logo-asayer.390468.svg\";","module.exports = __webpack_public_path__ + \"logo-bitbucket.c642e0.svg\";","module.exports = __webpack_public_path__ + \"logo-bitbucket-server.657cd4.svg\";","module.exports = __webpack_public_path__ + \"logo-campfire.c18103.svg\";","module.exports = __webpack_public_path__ + \"logo-clickup.7e7e7d.svg\";","module.exports = __webpack_public_path__ + \"logo-clubhouse.c3cb3d.svg\";","module.exports = __webpack_public_path__ + \"logo-datadog.c499f9.svg\";","module.exports = __webpack_public_path__ + \"logo-flowdock.42314d.svg\";","module.exports = __webpack_public_path__ + \"logo-fullstory.13dac3.svg\";","module.exports = __webpack_public_path__ + \"logo-github.8dce41.svg\";","module.exports = __webpack_public_path__ + \"logo-github-enterprise.bf349a.svg\";","module.exports = __webpack_public_path__ + \"logo-gitlab.8e2741.svg\";","module.exports = __webpack_public_path__ + \"logo-heroku.386a21.svg\";","module.exports = __webpack_public_path__ + \"logo-jira.62bfac.svg\";","module.exports = __webpack_public_path__ + \"logo-jira-server.9c39ab.svg\";","module.exports = __webpack_public_path__ + \"logo-lighthouse.94c36a.svg\";","module.exports = __webpack_public_path__ + \"logo-msteams.b1ee53.svg\";","module.exports = __webpack_public_path__ + \"logo-netlify.278a61.svg\";","module.exports = __webpack_public_path__ + \"logo-opsgenie.53f5ea.svg\";","module.exports = __webpack_public_path__ + \"logo-pagerduty.c31e46.svg\";","module.exports = __webpack_public_path__ + \"logo-phabricator.7aa86b.svg\";","module.exports = __webpack_public_path__ + \"logo-pivotaltracker.11d099.svg\";","module.exports = __webpack_public_path__ + \"logo-pushover.43bcbe.svg\";","module.exports = __webpack_public_path__ + \"logo-redmine.a7867b.svg\";","module.exports = __webpack_public_path__ + \"logo-rocketchat.ccc260.svg\";","module.exports = __webpack_public_path__ + \"logo-rookout.24a437.svg\";","module.exports = __webpack_public_path__ + \"logo-segment.94d7e0.svg\";","module.exports = __webpack_public_path__ + \"logo-slack.4c66fc.svg\";","module.exports = __webpack_public_path__ + \"logo-split.682c0f.svg\";","module.exports = __webpack_public_path__ + \"logo-taiga.ba2c58.svg\";","module.exports = __webpack_public_path__ + \"logo-teamwork.bfbe7f.svg\";","module.exports = __webpack_public_path__ + \"logo-trello.3b3f31.svg\";","module.exports = __webpack_public_path__ + \"logo-twilio.97d825.svg\";","module.exports = __webpack_public_path__ + \"logo-visualstudio.108ba2.svg\";","module.exports = __webpack_public_path__ + \"logo-azure.b0857d.svg\";","module.exports = __webpack_public_path__ + \"logo-youtrack.ec0ddd.svg\";","module.exports = __webpack_public_path__ + \"logo-victorops.8dd77a.svg\";","module.exports = __webpack_public_path__ + \"logo-zulip.0d323e.svg\";","import {Client} from 'app/api';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport PluginActions from 'app/actions/pluginActions';\n\nconst activeFetch = {};\n// PluginsStore always exists, so api client should be independent of component lifecycle\nconst api = new Client();\n\nfunction doUpdate({orgId, projectId, pluginId, update, ...params}) {\n  PluginActions.update(pluginId, update);\n  const request = api.requestPromise(\n    `/projects/${orgId}/${projectId}/plugins/${pluginId}/`,\n    {\n      ...params,\n    }\n  );\n\n  // This is intentionally not chained because we want the unhandled promise to be returned\n  request\n    .then(() => {\n      PluginActions.updateSuccess(pluginId, update);\n    })\n    .catch(resp => {\n      const err =\n        resp && resp.responseJSON && typeof resp.responseJSON.detail === 'string'\n          ? new Error(resp.responseJSON.detail)\n          : new Error('Unable to update plugin');\n      PluginActions.updateError(pluginId, update, err);\n    });\n\n  return request;\n}\n\n/**\n * Fetches list of available plugins for a project\n *\n * @param {object} params\n * @param {string} params.orgId Organization ID\n * @param {string} params.projectId Project ID\n * @param {object} options\n * @param {boolean} options.resetLoading Reset will set loading state = true\n * @return Promise\n */\nexport function fetchPlugins({orgId, projectId}, options) {\n  const path = `/projects/${orgId}/${projectId}/plugins/`;\n\n  // Make sure we throttle fetches\n  if (activeFetch[path]) {\n    return activeFetch[path];\n  }\n\n  PluginActions.fetchAll(options);\n  const request = api.requestPromise(path, {\n    method: 'GET',\n  });\n\n  activeFetch[path] = request;\n\n  // This is intentionally not chained because we want the unhandled promise to be returned\n  request\n    .then((data, _, jqXHR) => {\n      PluginActions.fetchAllSuccess(data, {\n        pageLinks: jqXHR && jqXHR.getResponseHeader('Link'),\n      });\n\n      return data;\n    })\n    .catch(err => {\n      PluginActions.fetchAllError(err);\n      throw new Error('Unable to fetch plugins');\n    })\n    .then(() => (activeFetch[path] = null));\n\n  return request;\n}\n\n/**\n * Enables a plugin\n *\n * @param {object} params\n * @param {string} params.orgId Organization ID\n * @param {string} params.projectId Project ID\n * @param {string} params.pluginId Plugin ID\n * @return Promise\n */\nexport function enablePlugin(params) {\n  addLoadingMessage(t('Enabling...'));\n  return doUpdate({...params, update: {enabled: true}, method: 'POST'})\n    .then(() => addSuccessMessage(t('Plugin was enabled')))\n    .catch(() => addErrorMessage(t('Unable to enable plugin')));\n}\n\n/**\n * Disables a plugin\n *\n * @param {object} params\n * @param {string} params.orgId Organization ID\n * @param {string} params.projectId Project ID\n * @param {string} params.pluginId Plugin ID\n */\nexport function disablePlugin(params) {\n  addLoadingMessage(t('Disabling...'));\n  return doUpdate({...params, update: {enabled: false}, method: 'DELETE'})\n    .then(() => addSuccessMessage(t('Plugin was disabled')))\n    .catch(() => addErrorMessage(t('Unable to disable plugin')));\n}\n","import Reflux from 'reflux';\n\nconst PluginActions = Reflux.createActions([\n  'update',\n  'updateError',\n  'updateSuccess',\n  'fetchAll',\n  'fetchAllSuccess',\n  'fetchAllError',\n]);\n\nexport default PluginActions;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport styled from '@emotion/styled';\n\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport PluginIcon from 'app/plugins/components/pluginIcon';\nimport plugins from 'app/plugins';\nimport space from 'app/styles/space';\nimport withApi from 'app/utils/withApi';\n\nclass PluginConfig extends React.Component {\n  static propTypes = {\n    api: PropTypes.object,\n    organization: PropTypes.object.isRequired,\n    project: PropTypes.object.isRequired,\n    data: PropTypes.object.isRequired,\n    onDisablePlugin: PropTypes.func,\n    enabled: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    onDisablePlugin: () => {},\n  };\n\n  state = {\n    loading: !plugins.isLoaded(this.props.data),\n    testResults: '',\n  };\n\n  componentDidMount() {\n    this.loadPlugin(this.props.data);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.loadPlugin(nextProps.data);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !isEqual(nextState, this.state) || !isEqual(nextProps.data, this.props.data);\n  }\n\n  loadPlugin(data) {\n    this.setState(\n      {\n        loading: true,\n      },\n      () => {\n        plugins.load(data, () => {\n          this.setState({loading: false});\n        });\n      }\n    );\n  }\n\n  getPluginEndpoint() {\n    const {organization, project, data} = this.props;\n    return `/projects/${organization.slug}/${project.slug}/plugins/${data.id}/`;\n  }\n\n  handleDisablePlugin = () => {\n    this.props.onDisablePlugin(this.props.data);\n  };\n\n  handleTestPlugin = async () => {\n    this.setState({testResults: ''});\n    addLoadingMessage(t('Sending test...'));\n\n    try {\n      const data = await this.props.api.requestPromise(this.getPluginEndpoint(), {\n        method: 'POST',\n        data: {\n          test: true,\n        },\n      });\n\n      this.setState({testResults: JSON.stringify(data.detail)});\n      addSuccessMessage(t('Test Complete!'));\n    } catch (_err) {\n      addErrorMessage(\n        t('An unexpected error occurred while testing your plugin. Please try again.')\n      );\n    }\n  };\n\n  createMarkup() {\n    return {__html: this.props.data.doc};\n  }\n\n  render() {\n    const {data} = this.props;\n    // If passed via props, use that value instead of from `data`\n    const enabled =\n      typeof this.props.enabled !== 'undefined' ? this.props.enabled : data.enabled;\n\n    return (\n      <Panel className={`plugin-config ref-plugin-config-${data.id}`}>\n        <PanelHeader hasButtons>\n          <PluginName>\n            <StyledPluginIcon pluginId={data.id} />\n            <span>{data.name}</span>\n          </PluginName>\n\n          {data.canDisable && enabled && (\n            <Actions>\n              {data.isTestable && (\n                <TestPluginButton onClick={this.handleTestPlugin} size=\"small\">\n                  {t('Test Plugin')}\n                </TestPluginButton>\n              )}\n              <Button size=\"small\" onClick={this.handleDisablePlugin}>\n                {t('Disable')}\n              </Button>\n            </Actions>\n          )}\n        </PanelHeader>\n\n        {data.status === 'beta' && (\n          <PanelAlert type=\"warning\">\n            {t('This plugin is considered beta and may change in the future.')}\n          </PanelAlert>\n        )}\n\n        {this.state.testResults !== '' && (\n          <PanelAlert type=\"info\">\n            <strong>Test Results</strong>\n            <div>{this.state.testResults}</div>\n          </PanelAlert>\n        )}\n\n        <StyledPanelBody>\n          <div dangerouslySetInnerHTML={this.createMarkup()} />\n          {this.state.loading ? (\n            <LoadingIndicator />\n          ) : (\n            plugins.get(data).renderSettings({\n              organization: this.props.organization,\n              project: this.props.project,\n            })\n          )}\n        </StyledPanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport {PluginConfig};\nexport default withApi(PluginConfig);\n\nconst PluginName = styled('div')`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nconst StyledPluginIcon = styled(PluginIcon)`\n  margin-right: ${space(1)};\n`;\n\nconst Actions = styled('div')`\n  display: flex;\n`;\nconst TestPluginButton = styled(Button)`\n  margin-right: ${space(1)};\n`;\n\nconst StyledPanelBody = styled(PanelBody)`\n  padding: ${space(2)};\n  padding-bottom: 0;\n`;\n","import Reflux from 'reflux';\n\nimport PluginActions from 'app/actions/pluginActions';\n\nconst PluginsStore = Reflux.createStore({\n  getInitialState() {\n    return this.getState();\n  },\n\n  getState() {\n    const {plugins: _plugins, ...state} = this.state;\n\n    return {\n      ...state,\n      plugins: this.plugins ? Array.from(this.plugins.values()) : [],\n    };\n  },\n\n  init() {\n    this.reset();\n    this.listenTo(PluginActions.fetchAll, this.onFetchAll);\n    this.listenTo(PluginActions.fetchAllSuccess, this.onFetchAllSuccess);\n    this.listenTo(PluginActions.fetchAllError, this.onFetchAllError);\n    this.listenTo(PluginActions.update, this.onUpdate);\n    this.listenTo(PluginActions.updateSuccess, this.onUpdateSuccess);\n    this.listenTo(PluginActions.updateError, this.onUpdateError);\n  },\n\n  reset() {\n    this.plugins = null;\n    this.state = {\n      loading: true,\n      plugins: [],\n      error: null,\n      pageLinks: null,\n    };\n    this.updating = new Map();\n    return this.state;\n  },\n\n  triggerState() {\n    this.trigger(this.getState());\n  },\n\n  onFetchAll({resetLoading} = {}) {\n    if (resetLoading) {\n      this.state.loading = true;\n      this.state.error = null;\n      this.plugins = null;\n    }\n\n    this.triggerState();\n  },\n\n  onFetchAllSuccess(data, {pageLinks}) {\n    this.plugins = new Map(data.map(plugin => [plugin.id, plugin]));\n    this.state.pageLinks = pageLinks;\n    this.state.loading = false;\n    this.triggerState();\n  },\n\n  onFetchAllError(err) {\n    this.plugins = null;\n    this.state.loading = false;\n    this.state.error = err;\n    this.triggerState();\n  },\n\n  onUpdate(id, updateObj) {\n    if (!this.plugins) {\n      return;\n    }\n\n    const plugin = this.plugins.get(id);\n    const newPlugin = {\n      ...plugin,\n      ...updateObj,\n    };\n\n    this.plugins.set(id, newPlugin);\n    this.updating.set(id, plugin);\n    this.triggerState();\n  },\n\n  onUpdateSuccess(id, _updateObj) {\n    this.updating.delete(id);\n  },\n\n  onUpdateError(id, _updateObj, err) {\n    const origPlugin = this.updating.get(id);\n    if (!origPlugin) {\n      return;\n    }\n\n    this.plugins.set(id, origPlugin);\n    this.updating.delete(id);\n    this.state.error = err;\n    this.triggerState();\n  },\n});\n\nexport default PluginsStore;\n","import React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\n\nimport {defined} from 'app/utils';\nimport {Organization, Project, Plugin} from 'app/types';\nimport {fetchPlugins} from 'app/actionCreators/plugins';\nimport getDisplayName from 'app/utils/getDisplayName';\nimport PluginsStore from 'app/stores/pluginsStore';\nimport SentryTypes from 'app/sentryTypes';\nimport withOrganization from 'app/utils/withOrganization';\nimport withProject from 'app/utils/withProject';\n\ntype WithPluginProps = {\n  organization: Organization;\n  project: Project;\n};\n\ntype InjectedPluginProps = {\n  plugins: Plugin[];\n};\n\n/**\n * Higher order component that fetches list of plugins and\n * passes PluginsStore to component as `plugins`\n */\nconst withPlugins = <P extends InjectedPluginProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  withOrganization(\n    withProject(\n      createReactClass<Omit<P, keyof InjectedPluginProps> & WithPluginProps, {}>({\n        displayName: `withPlugins(${getDisplayName(WrappedComponent)})`,\n        propTypes: {\n          organization: SentryTypes.Organization.isRequired,\n          project: SentryTypes.Project.isRequired,\n        },\n        mixins: [Reflux.connect(PluginsStore, 'store') as any],\n\n        componentDidMount() {\n          this.fetchPlugins();\n        },\n\n        componentDidUpdate(prevProps, _prevState, prevContext) {\n          const {organization, project} = this.props;\n\n          // Only fetch plugins when a org slug or project slug has changed\n          const prevOrg =\n            prevProps.organization || (prevContext && prevContext.organization);\n          const prevProject = prevProps.project || (prevContext && prevContext.project);\n\n          // If previous org/project is undefined then it means:\n          // the HoC has mounted, `fetchPlugins` has been called (via cDM), and\n          // store was updated. We don't need to fetchPlugins again (or it will cause an infinite loop)\n          //\n          // This is for the unusual case where component is mounted and receives a new org/project prop\n          // e.g. when switching projects via breadcrumbs in settings.\n          if (!defined(prevProject) || !defined(prevOrg)) {\n            return;\n          }\n\n          const isOrgSame = prevOrg.slug === organization.slug;\n          const isProjectSame = prevProject.slug === project.slug;\n\n          // Don't do anything if org and project are the same\n          if (isOrgSame && isProjectSame) {\n            return;\n          }\n\n          this.fetchPlugins();\n        },\n\n        fetchPlugins() {\n          const {organization, project} = this.props;\n\n          if (!project || !organization) {\n            return;\n          }\n\n          fetchPlugins({projectId: project.slug, orgId: organization.slug});\n        },\n\n        render() {\n          return (\n            <WrappedComponent\n              {...(this.props as P)}\n              plugins={this.state.store as Plugin[]}\n            />\n          );\n        },\n      })\n    )\n  );\n\nexport default withPlugins;\n","export const DEPRECATED_PLUGINS = ['taiga', 'lighthouse', 'grove-io'] as const;\n","import React from 'react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {disablePlugin, enablePlugin} from 'app/actionCreators/plugins';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport PluginConfig from 'app/components/pluginConfig';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport withPlugins from 'app/utils/withPlugins';\nimport withOrganization from 'app/utils/withOrganization';\nimport withProject from 'app/utils/withProject';\nimport {trackIntegrationEvent} from 'app/utils/integrationUtil';\n\nimport {DEPRECATED_PLUGINS} from './constants';\n\n/**\n * There are currently two sources of truths for plugin details:\n *\n * 1) PluginsStore has a list of plugins, and this is where ENABLED state lives\n * 2) We fetch \"plugin details\" via API and save it to local state as `pluginDetails`.\n *    This is because \"details\" call contains form `config` and the \"list\" endpoint does not.\n *    The more correct way would be to pass `config` to PluginConfig and use plugin from\n *    PluginsStore\n */\nclass ProjectPluginDetails extends AsyncView {\n  componentDidUpdate(prevProps) {\n    super.componentDidUpdate(...arguments);\n    if (prevProps.params.pluginId !== this.props.params.pluginId) {\n      this.recordDetailsViewed();\n    }\n  }\n  componentDidMount() {\n    this.recordDetailsViewed();\n  }\n\n  recordDetailsViewed() {\n    const {pluginId} = this.props.params;\n\n    trackIntegrationEvent(\n      {\n        eventKey: 'integrations.details_viewed',\n        eventName: 'Integrations: Details Viewed',\n        integration: pluginId,\n        integration_type: 'plugin',\n        view: 'plugin_details',\n        project_id: this.props.project.id,\n      },\n      this.props.organization\n    );\n  }\n\n  getTitle() {\n    const {plugin} = this.state;\n    if (plugin && plugin.name) {\n      return plugin.name;\n    } else {\n      return 'Sentry';\n    }\n  }\n\n  getEndpoints() {\n    const {projectId, orgId, pluginId} = this.props.params;\n    return [['pluginDetails', `/projects/${orgId}/${projectId}/plugins/${pluginId}/`]];\n  }\n\n  trimSchema(value) {\n    return value.split('//')[1];\n  }\n\n  handleReset = () => {\n    const {projectId, orgId, pluginId} = this.props.params;\n\n    addLoadingMessage(t('Saving changes..'));\n    trackIntegrationEvent(\n      {\n        eventKey: 'integrations.uninstall_clicked',\n        eventName: 'Integrations: Uninstall Clicked',\n        integration: pluginId,\n        integration_type: 'plugin',\n        view: 'plugin_details',\n        project_id: this.props.project.id,\n      },\n      this.props.organization\n    );\n\n    this.api.request(`/projects/${orgId}/${projectId}/plugins/${pluginId}/`, {\n      method: 'POST',\n      data: {reset: true},\n      success: pluginDetails => {\n        this.setState({pluginDetails});\n        addSuccessMessage(t('Plugin was reset'));\n        trackIntegrationEvent(\n          {\n            eventKey: 'integrations.uninstall_completed',\n            eventName: 'Integrations: Uninstall Completed',\n            integration: pluginId,\n            integration_type: 'plugin',\n            view: 'plugin_details',\n            project_id: this.props.project.id,\n          },\n          this.props.organization\n        );\n      },\n      error: () => {\n        addErrorMessage(t('An error occurred'));\n      },\n    });\n  };\n\n  handleEnable = () => {\n    enablePlugin(this.props.params);\n    this.analyticsChangeEnableStatus(true);\n  };\n\n  handleDisable = () => {\n    disablePlugin(this.props.params);\n    this.analyticsChangeEnableStatus(false);\n  };\n\n  analyticsChangeEnableStatus = enabled => {\n    const {pluginId} = this.props.params;\n    trackIntegrationEvent(\n      {\n        eventKey: `integrations.${enabled ? 'enabled' : 'disabled'}`,\n        eventName: `Integrations: ${enabled ? 'Enabled' : 'Disabled'}`,\n        integration: pluginId,\n        integration_type: 'plugin',\n        view: 'plugin_details',\n        project_id: this.props.project.id,\n      },\n      this.props.organization\n    );\n  };\n\n  // Enabled state is handled via PluginsStore and not via plugins detail\n  getEnabled() {\n    const {pluginDetails} = this.state;\n    const {plugins} = this.props;\n\n    const plugin =\n      plugins &&\n      plugins.plugins &&\n      plugins.plugins.find(({slug}) => slug === this.props.params.pluginId);\n\n    return plugin ? plugin.enabled : pluginDetails && pluginDetails.enabled;\n  }\n\n  renderActions() {\n    const {pluginDetails} = this.state;\n    const enabled = this.getEnabled();\n    const {pluginId} = this.props.params;\n\n    const disabled = DEPRECATED_PLUGINS.includes(pluginId);\n\n    const enable = (\n      <Button\n        disabled={disabled}\n        size=\"small\"\n        onClick={this.handleEnable}\n        style={{marginRight: '6px'}}\n      >\n        {t('Enable Plugin')}\n      </Button>\n    );\n\n    const disable = (\n      <Button\n        size=\"small\"\n        priority=\"danger\"\n        onClick={this.handleDisable}\n        style={{marginRight: '6px'}}\n      >\n        {t('Disable Plugin')}\n      </Button>\n    );\n\n    const toggleEnable = enabled ? disable : enable;\n\n    return (\n      <div className=\"pull-right\">\n        {pluginDetails.canDisable && toggleEnable}\n        <Button size=\"small\" onClick={this.handleReset}>\n          {t('Reset Configuration')}\n        </Button>\n      </div>\n    );\n  }\n\n  renderBody() {\n    const {organization, project} = this.props;\n    const {pluginDetails} = this.state;\n\n    return (\n      <div>\n        <SettingsPageHeader title={pluginDetails.name} action={this.renderActions()} />\n        <div className=\"row\">\n          <div className=\"col-md-7\">\n            <PluginConfig\n              organization={organization}\n              project={project}\n              data={pluginDetails}\n              enabled={this.getEnabled()}\n              onDisablePlugin={this.handleDisable}\n            />\n          </div>\n          <div className=\"col-md-4 col-md-offset-1\">\n            <div className=\"pluginDetails-meta\">\n              <h4>{t('Plugin Information')}</h4>\n\n              <dl className=\"flat\">\n                <dt>{t('Name')}</dt>\n                <dd>{pluginDetails.name}</dd>\n                <dt>{t('Author')}</dt>\n                <dd>{pluginDetails.author.name}</dd>\n                {pluginDetails.author.url && (\n                  <div>\n                    <dt>{t('URL')}</dt>\n                    <dd>\n                      <ExternalLink href={pluginDetails.author.url}>\n                        {this.trimSchema(pluginDetails.author.url)}\n                      </ExternalLink>\n                    </dd>\n                  </div>\n                )}\n                <dt>{t('Version')}</dt>\n                <dd>{pluginDetails.version}</dd>\n              </dl>\n\n              {pluginDetails.description && (\n                <div>\n                  <h4>{t('Description')}</h4>\n                  <p className=\"description\">{pluginDetails.description}</p>\n                </div>\n              )}\n\n              {pluginDetails.resourceLinks && (\n                <div>\n                  <h4>{t('Resources')}</h4>\n                  <dl className=\"flat\">\n                    {pluginDetails.resourceLinks.map(({title, url}) => (\n                      <dd key={url}>\n                        <ExternalLink href={url}>{title}</ExternalLink>\n                      </dd>\n                    ))}\n                  </dl>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport {ProjectPluginDetails};\n\nexport default withProject(withPlugins(withOrganization(ProjectPluginDetails)));\n"],"sourceRoot":""}