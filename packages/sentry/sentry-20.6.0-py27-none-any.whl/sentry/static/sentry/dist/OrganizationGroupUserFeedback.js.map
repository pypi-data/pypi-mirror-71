{"version":3,"sources":["webpack:///./app/components/dateTime.tsx","webpack:///./app/components/placeholder.tsx","webpack:///./app/components/activity/item/bubble.tsx","webpack:///./app/components/activity/item/index.tsx","webpack:///./app/components/activity/item/avatar.tsx","webpack:///./app/components/activity/author.tsx","webpack:///./app/components/events/userFeedback.tsx","webpack:///./app/views/userFeedback/userFeedbackEmpty.tsx","webpack:////workspace/node_modules/sentry-dreamy-components/dist/user-feedback.svg","webpack:///./app/views/organizationGroupDetails/utils.jsx","webpack:///./app/views/organizationGroupDetails/groupUserFeedback.jsx"],"names":["DateTime","getFormat","clock24Hours","props","dateOnly","timeOnly","seconds","shortDate","this","date","utc","carriedProps","user","ConfigStore","get","options","format","moment","tz","timezone","React","Component","defaultProps","Placeholder","className","children","error","data-test-id","p","theme","red100","placeholderBackground","red300","width","height","shape","bottomGutter","space","ActivityBubble","backgroundColor","borderColor","borderLight","borderRadius","propTypes","PropTypes","string","ActivityItem","author","avatarSize","bubbleProps","footer","id","header","hideDate","showTime","showDate","ActivityItemWrapper","StyledActivityAvatar","type","size","isRenderFunc","ActivityHeader","ActivityHeaderContent","StyledTimeSince","StyledDateTime","ActivityBody","ActivityFooter","HeaderAndFooter","fontSizeMedium","textStyles","ActivityAvatar","TimeSince","gray500","SystemAvatar","StyledIconSentry","gray800","white","IconSentry","ActivityAuthor","EventUserFeedback","report","orgId","issueId","eventID","name","email","username","ip_address","dateCreated","value","Email","StyledIconCopy","ViewEventLink","to","getUrl","t","dangerouslySetInnerHTML","__html","nl2br","escape","comments","fontSizeSmall","Link","IconCopy","UserFeedbackEmpty","organization","projectIds","window","sentryEmbedCallback","embed","submit","_body","_submitInProgress","setTimeout","onSuccess","hasAnyFeedback","trackAdhocEvent","eventKey","org_id","parseInt","projects","eventName","trackAnalyticsEvent","organization_id","loadingProjects","UserFeedbackLanding","IllustrationContainer","CardComponentContainer","Illustration","data","userFeedback","StyledBox","ButtonList","external","onClick","trackAnalytics","href","priority","Sentry","eventId","length","filter","includes","some","hasUserReports","src","withOrganization","withProjects","module","exports","fetchGroupEventAndMarkSeen","api","projectId","groupId","envNames","a","url","query","environment","requestPromise","bulkUpdate","itemIds","failSilently","hasSeen","fetchGroupUserReports","Client","includeAllArgs","getEventEnvironment","event","tag","tags","find","key","GroupUserFeedback","fetchData","setState","loading","group","params","then","jqXHR","reportList","pageLinks","getResponseHeader","state","prevProps","isEqual","onRetry","map","item","idx","slug","project"],"mappings":"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","file":"OrganizationGroupUserFeedback.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport moment from 'moment-timezone';\n\nimport ConfigStore from 'app/stores/configStore';\n\ntype DefaultProps = {\n  seconds: boolean;\n};\n\ntype Props = DefaultProps & {\n  date: moment.MomentInput;\n  dateOnly?: boolean;\n  timeOnly?: boolean;\n  shortDate?: boolean;\n  utc?: boolean;\n};\n\nclass DateTime extends React.Component<Props> {\n  static propTypes = {\n    date: PropTypes.any.isRequired,\n    dateOnly: PropTypes.bool,\n    timeOnly: PropTypes.bool,\n    shortDate: PropTypes.bool,\n    seconds: PropTypes.bool,\n    utc: PropTypes.bool,\n  };\n\n  static defaultProps: DefaultProps = {\n    seconds: true,\n  };\n\n  getFormat = ({clock24Hours}: {clock24Hours: boolean}): string => {\n    const {dateOnly, timeOnly, seconds, shortDate} = this.props;\n\n    // October 26, 2017\n    if (dateOnly) {\n      return 'LL';\n    }\n\n    // 4:57 PM\n    if (timeOnly) {\n      return 'LT';\n    }\n\n    if (shortDate) {\n      return 'MM/DD/YYYY';\n    }\n\n    if (clock24Hours) {\n      return 'MMMM D YYYY HH:mm:ss z';\n    }\n\n    // Oct 26, 2017 11:30:30 AM\n    if (seconds) {\n      return 'll LTS z';\n    }\n\n    // Default is Oct 26, 2017 11:30 AM\n    return 'lll';\n  };\n\n  render() {\n    const {\n      date,\n      utc,\n      seconds: _seconds,\n      shortDate: _shortDate,\n      dateOnly: _dateOnly,\n      timeOnly: _timeOnly,\n      ...carriedProps\n    } = this.props;\n    const user = ConfigStore.get('user');\n    const options = user?.options;\n    const format = this.getFormat(options);\n\n    return (\n      <time {...carriedProps}>\n        {utc\n          ? moment.utc(date).format(format)\n          : moment.tz(date, options?.timezone ?? '').format(format)}\n      </time>\n    );\n  }\n}\n\nexport default DateTime;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nimport space from 'app/styles/space';\n\nconst defaultProps = {\n  shape: 'rect' as 'rect' | 'circle',\n  bottomGutter: 0 as Parameters<typeof space>[0],\n  width: '100%',\n  height: '60px',\n};\n\ntype DefaultProps = Readonly<typeof defaultProps>;\n\ntype Props = {\n  className?: string;\n  children?: React.ReactNode;\n  error?: React.ReactNode;\n} & Partial<DefaultProps>;\n\nconst Placeholder = styled((props: Props) => {\n  const {className, children, error} = props;\n  return (\n    <div data-test-id=\"loading-placeholder\" className={className}>\n      {error || children}\n    </div>\n  );\n})<Props>`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  justify-content: center;\n\n  background-color: ${p => (p.error ? p.theme.red100 : p.theme.placeholderBackground)};\n${p => p.error && `color: ${p.theme.red300};`}\n  width: ${p => p.width};\n  height: ${p => p.height};\n  ${p => (p.shape === 'circle' ? 'border-radius: 100%;' : '')}\n  ${p =>\n    typeof p.bottomGutter === 'number' && p.bottomGutter > 0\n      ? `margin-bottom: ${space(p.bottomGutter)};`\n      : ''}\n`;\n\nPlaceholder.defaultProps = defaultProps;\n\nPlaceholder.propTypes = {\n  shape: PropTypes.oneOf(['rect', 'circle']),\n  width: PropTypes.string,\n  height: PropTypes.string,\n  bottomGutter: PropTypes.number as any,\n};\n\nexport default Placeholder;\n","import PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  backgroundColor?: string;\n  borderColor?: string;\n};\n\n/**\n * This creates a bordered box that has a left pointing arrow\n * on the left-side at the top.\n */\nconst ActivityBubble = styled('div')<Props>`\n  flex: 1;\n  background-color: ${p => p.backgroundColor};\n  border: 1px solid ${p => p.borderColor || p.theme.borderLight};\n  border-radius: ${p => p.theme.borderRadius};\n  position: relative;\n  width: 100%; /* this is used in Incidents Details - a chart can cause overflow and won't resize properly */\n\n  &:before {\n    display: block;\n    content: '';\n    width: 0;\n    height: 0;\n    border-top: 7px solid transparent;\n    border-bottom: 7px solid transparent;\n    border-right: 7px solid ${p => p.borderColor || p.theme.borderLight};\n    position: absolute;\n    left: -7px;\n    top: 12px;\n  }\n\n  &:after {\n    display: block;\n    content: '';\n    width: 0;\n    height: 0;\n    border-top: 6px solid transparent;\n    border-bottom: 6px solid transparent;\n    border-right: 6px solid ${p => p.backgroundColor};\n    position: absolute;\n    left: -6px;\n    top: 13px;\n  }\n`;\n\nActivityBubble.propTypes = {\n  backgroundColor: PropTypes.string,\n  borderColor: PropTypes.string,\n};\n\nActivityBubble.defaultProps = {\n  backgroundColor: '#fff',\n};\n\nexport default ActivityBubble;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {AvatarUser} from 'app/types';\nimport DateTime from 'app/components/dateTime';\nimport TimeSince from 'app/components/timeSince';\nimport space from 'app/styles/space';\nimport textStyles from 'app/styles/text';\nimport {isRenderFunc} from 'app/utils/isRenderFunc';\n\nimport ActivityAvatar from './avatar';\nimport ActivityBubble from './bubble';\n\ntype ChildFunction = () => React.ReactNode;\n\ntype Props = {\n  children?: React.ReactChild | ChildFunction;\n  className?: string;\n  /**\n   * This is used to uniquely identify the activity item for use as an anchor\n   */\n  id?: string;\n\n  /**\n   * If supplied, will show the time since this date\n   */\n  date?: string | Date;\n\n  /**\n   * Used to render an avatar for the author. Currently can be a user, otherwise\n   * defaults as a \"system\" avatar (i.e. sentry)\n   *\n   * `user` is required if `type` is \"user\"\n   */\n  author?: {\n    type: 'user' | 'system';\n    user?: AvatarUser;\n  };\n\n  // Size of the avatar.\n  avatarSize?: number;\n\n  // Hides date in header\n  hideDate?: boolean;\n\n  // Instead of showing a relative time/date, show the time\n  showTime?: boolean;\n\n  /**\n   * Can be a react node or a render function. render function will not include default wrapper\n   */\n  header?: React.ReactNode | ChildFunction;\n\n  /**\n   * Can be a react node or a render function. render function will not include default wrapper\n   */\n  footer?: React.ReactNode | ChildFunction;\n\n  bubbleProps?: React.ComponentProps<typeof ActivityBubble>;\n};\n\nfunction ActivityItem({\n  author,\n  avatarSize,\n  bubbleProps,\n  className,\n  children,\n  date,\n  footer,\n  id,\n  header,\n  hideDate = false,\n  showTime = false,\n}: Props) {\n  const showDate = !hideDate && date;\n\n  return (\n    <ActivityItemWrapper data-test-id=\"activity-item\" className={className}>\n      {id && <a id={id} />}\n\n      {author && (\n        <StyledActivityAvatar type={author.type} user={author.user} size={avatarSize} />\n      )}\n\n      <ActivityBubble {...bubbleProps}>\n        {header && isRenderFunc<ChildFunction>(header) && header()}\n        {header && !isRenderFunc<ChildFunction>(header) && (\n          <ActivityHeader>\n            <ActivityHeaderContent>{header}</ActivityHeaderContent>\n\n            {date && showDate && !showTime && <StyledTimeSince date={date} />}\n            {date && showDate && showTime && <StyledDateTime timeOnly date={date} />}\n          </ActivityHeader>\n        )}\n\n        {children && isRenderFunc<ChildFunction>(children) && children()}\n        {children && !isRenderFunc<ChildFunction>(children) && (\n          <ActivityBody>{children}</ActivityBody>\n        )}\n\n        {footer && isRenderFunc<ChildFunction>(footer) && footer()}\n        {footer && !isRenderFunc<ChildFunction>(footer) && (\n          <ActivityFooter>{footer}</ActivityFooter>\n        )}\n      </ActivityBubble>\n    </ActivityItemWrapper>\n  );\n}\n\nActivityItem.propTypes = {\n  id: PropTypes.string,\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n  author: PropTypes.shape({\n    type: ActivityAvatar.propTypes.type,\n    user: ActivityAvatar.propTypes.user,\n  }),\n  avatarSize: PropTypes.number,\n  hideDate: PropTypes.bool,\n  showTime: PropTypes.bool,\n  header: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  footer: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  bubbleProps: PropTypes.shape(ActivityBubble.propTypes as any),\n};\n\nconst ActivityItemWrapper = styled('div')`\n  display: flex;\n  margin-bottom: ${space(2)};\n`;\n\nconst HeaderAndFooter = styled('div')`\n  padding: 6px ${space(2)};\n`;\n\nconst ActivityHeader = styled(HeaderAndFooter)`\n  display: flex;\n  border-bottom: 1px solid ${p => p.theme.borderLight};\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst ActivityHeaderContent = styled('div')`\n  flex: 1;\n`;\n\nconst ActivityFooter = styled(HeaderAndFooter)`\n  display: flex;\n  border-top: 1px solid ${p => p.theme.borderLight};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst ActivityBody = styled('div')`\n  padding: ${space(2)} ${space(2)};\n  word-break: break-all;\n  ${textStyles}\n`;\n\nconst StyledActivityAvatar = styled(ActivityAvatar)`\n  margin-right: ${space(1)};\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: ${p => p.theme.gray500};\n`;\n\nconst StyledDateTime = styled(DateTime)`\n  color: ${p => p.theme.gray500};\n`;\n\nexport default ActivityItem;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {AvatarUser} from 'app/types';\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport {IconSentry} from 'app/icons';\nimport Placeholder from 'app/components/placeholder';\nimport SentryTypes from 'app/sentryTypes';\n\ntype Props = {\n  type: 'system' | 'user';\n  user?: AvatarUser;\n  className?: string;\n  size?: number;\n};\n\nfunction ActivityAvatar({className, type, user, size = 38}: Props) {\n  if (user) {\n    return <UserAvatar user={user} size={size} className={className} />;\n  }\n\n  if (type === 'system') {\n    // Return Sentry avatar\n    return (\n      <SystemAvatar className={className} size={size}>\n        <StyledIconSentry size=\"md\" />\n      </SystemAvatar>\n    );\n  }\n\n  return (\n    <Placeholder\n      className={className}\n      width={`${size}px`}\n      height={`${size}px`}\n      shape=\"circle\"\n    />\n  );\n}\n\nActivityAvatar.propTypes = {\n  user: SentryTypes.User,\n  type: PropTypes.oneOf(['system', 'user']),\n  size: PropTypes.number,\n};\n\nexport default ActivityAvatar;\n\ntype SystemAvatarProps = {\n  size: number;\n};\n\nconst SystemAvatar = styled('span')<SystemAvatarProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  background-color: ${p => p.theme.gray800};\n  color: ${p => p.theme.white};\n  border-radius: 50%;\n`;\n\nconst StyledIconSentry = styled(IconSentry)`\n  padding-bottom: 3px;\n`;\n","import styled from '@emotion/styled';\n\nconst ActivityAuthor = styled('span')`\n  font-weight: 600;\n  font-size: 13px;\n`;\n\nexport default ActivityAuthor;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {UserReport} from 'app/types';\nimport SentryTypes from 'app/sentryTypes';\nimport {nl2br, escape} from 'app/utils';\nimport {t} from 'app/locale';\nimport ActivityAuthor from 'app/components/activity/author';\nimport ActivityItem from 'app/components/activity/item';\nimport Clipboard from 'app/components/clipboard';\nimport {IconCopy} from 'app/icons';\nimport Link from 'app/components/links/link';\nimport space from 'app/styles/space';\n\ntype Props = {\n  report: UserReport;\n  orgId: string;\n  issueId: string;\n  className?: string;\n};\n\nclass EventUserFeedback extends React.Component<Props> {\n  static propTypes = {\n    report: SentryTypes.UserReport.isRequired,\n    orgId: PropTypes.string.isRequired,\n    issueId: PropTypes.string.isRequired,\n    className: PropTypes.string,\n  };\n\n  getUrl() {\n    const {report, orgId, issueId} = this.props;\n\n    return `/organizations/${orgId}/issues/${issueId}/events/${report.eventID}/`;\n  }\n\n  render() {\n    const {className, report} = this.props;\n    const user = report.user || {\n      name: report.name,\n      email: report.email,\n      id: '',\n      username: '',\n      ip_address: '',\n    };\n\n    return (\n      <div className={className}>\n        <ActivityItem\n          date={report.dateCreated}\n          author={{type: 'user', user}}\n          header={\n            <div>\n              <ActivityAuthor>{report.name}</ActivityAuthor>\n              <Clipboard value={report.email}>\n                <Email>\n                  {report.email}\n                  <StyledIconCopy size=\"xs\" />\n                </Email>\n              </Clipboard>\n              {report.eventID && (\n                <ViewEventLink to={this.getUrl()}>{t('View event')}</ViewEventLink>\n              )}\n            </div>\n          }\n        >\n          <p\n            dangerouslySetInnerHTML={{\n              __html: nl2br(escape(report.comments)),\n            }}\n          />\n        </ActivityItem>\n      </div>\n    );\n  }\n}\n\nexport default EventUserFeedback;\n\nconst Email = styled('span')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: normal;\n  cursor: pointer;\n  margin-left: ${space(1)};\n`;\n\nconst ViewEventLink = styled(Link)`\n  font-weight: 300;\n  margin-left: ${space(1)};\n  font-size: 0.9em;\n`;\n\nconst StyledIconCopy = styled(IconCopy)`\n  margin-left: ${space(1)};\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport * as Sentry from '@sentry/browser';\n\nimport userFeedback from 'sentry-dreamy-components/dist/user-feedback.svg';\n\nimport {Organization, Project} from 'app/types';\nimport {t} from 'app/locale';\nimport {trackAnalyticsEvent, trackAdhocEvent} from 'app/utils/analytics';\nimport Button from 'app/components/button';\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\nimport withOrganization from 'app/utils/withOrganization';\nimport withProjects from 'app/utils/withProjects';\n\ntype Props = {\n  organization: Organization;\n  projects: Project[];\n  loadingProjects: boolean;\n  projectIds?: string[];\n};\n\ntype IllustrationProps = {\n  data: string;\n  className?: string;\n};\n\nclass UserFeedbackEmpty extends React.Component<Props> {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    projectIds: PropTypes.arrayOf(PropTypes.string.isRequired),\n  };\n\n  componentDidMount() {\n    const {organization, projectIds} = this.props;\n\n    window.sentryEmbedCallback = function(embed) {\n      // Mock the embed's submit xhr to always be successful\n      // NOTE: this will not have errors if the form is empty\n      embed.submit = function(_body) {\n        this._submitInProgress = true;\n        setTimeout(() => {\n          this._submitInProgress = false;\n          this.onSuccess();\n        }, 500);\n      };\n    };\n\n    if (this.hasAnyFeedback === false) {\n      // send to reload only due to higher event volume\n      trackAdhocEvent({\n        eventKey: 'user_feedback.viewed',\n        org_id: parseInt(organization.id, 10),\n        projects: projectIds,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.sentryEmbedCallback = null;\n  }\n\n  get hasAnyFeedback() {\n    const {projects, projectIds} = this.props;\n\n    const selectedProjects =\n      projectIds && projectIds.length\n        ? projects.filter(({id}) => projectIds.includes(id))\n        : projects;\n\n    return selectedProjects.some(({hasUserReports}) => hasUserReports);\n  }\n\n  trackAnalytics({eventKey, eventName}: {eventKey: string; eventName: string}) {\n    const {organization, projectIds} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey,\n      eventName,\n      organization_id: organization.id,\n      projects: projectIds,\n    });\n  }\n\n  render() {\n    // Show no user reports if waiting for projects to load or if there is no feedback\n    if (this.props.loadingProjects || this.hasAnyFeedback !== false) {\n      return (\n        <EmptyStateWarning>\n          <p>{t('Sorry, no user reports match your filters.')}</p>\n        </EmptyStateWarning>\n      );\n    }\n    // Show landing page after projects have loaded and it is confirmed no projects have feedback\n    return (\n      <UserFeedbackLanding>\n        <IllustrationContainer>\n          <CardComponentContainer>\n            <Illustration data={userFeedback} />\n          </CardComponentContainer>\n        </IllustrationContainer>\n\n        <StyledBox>\n          <h3>{t('No User Feedback Collected')}</h3>\n          <p>\n            {t(\n              `Don't rely on stack traces and graphs alone to understand\n              the cause and impact of errors. Enable User Feedback to collect\n              your users' comments when they encounter a crash or bug.`\n            )}\n          </p>\n          <ButtonList>\n            <Button\n              external\n              onClick={() =>\n                this.trackAnalytics({\n                  eventKey: 'user_feedback.docs_clicked',\n                  eventName: 'User Feedback Docs Clicked',\n                })\n              }\n              href=\"https://docs.sentry.io/enriching-error-data/user-feedback/\"\n            >\n              {t('Read the docs')}\n            </Button>\n            <Button\n              priority=\"primary\"\n              onClick={() => {\n                Sentry.showReportDialog({\n                  // should never make it to the Sentry API, but just in case, use throwaway id\n                  eventId: '00000000000000000000000000000000',\n                });\n\n                this.trackAnalytics({\n                  eventKey: 'user_feedback.dialog_opened',\n                  eventName: 'User Feedback Dialog Opened',\n                });\n              }}\n            >\n              {t('Open the report dialog')}\n            </Button>\n          </ButtonList>\n        </StyledBox>\n      </UserFeedbackLanding>\n    );\n  }\n}\n\nconst UserFeedbackLanding = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  min-height: 450px;\n  padding: ${space(1)};\n`;\n\nconst StyledBox = styled('div')`\n  flex: 1;\n  padding: ${space(3)};\n`;\n\nconst IllustrationContainer = styled(StyledBox)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst CardComponentContainer = styled('div')`\n  width: 550px;\n  height: 340px;\n\n  img {\n    vertical-align: baseline;\n  }\n\n  @media (max-width: 1150px) {\n    font-size: ${p => p.theme.fontSizeMedium};\n    width: 450px;\n  }\n\n  @media (max-width: 1000px) {\n    font-size: ${p => p.theme.fontSizeSmall};\n    width: 320px;\n    max-height: 180px;\n  }\n`;\n\nconst Illustration = styled(({data, className}: IllustrationProps) => (\n  <object data={data} className={className}>\n    <img src={data} className={className} />\n  </object>\n))`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ButtonList = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(130px, max-content));\n  grid-gap: ${space(1)};\n`;\n\nexport {UserFeedbackEmpty};\n\nexport default withOrganization(withProjects(UserFeedbackEmpty));\n","module.exports = __webpack_public_path__ + \"user-feedback.230a56.svg\";","import {Client} from 'app/api';\n\n/**\n * Fetches group data and mark as seen\n *\n * @param {String} orgId organization slug\n * @param {String} projectId project slug\n * @param {String} groupId groupId\n * @param {String} eventId eventId or \"latest\" or \"oldest\"\n * @returns {Promise<Object>}\n */\nexport async function fetchGroupEventAndMarkSeen(\n  api,\n  orgId,\n  projectId,\n  groupId,\n  eventId,\n  envNames\n) {\n  const url =\n    eventId === 'latest' || eventId === 'oldest'\n      ? `/issues/${groupId}/events/${eventId}/`\n      : `/projects/${orgId}/${projectId}/events/${eventId}/`;\n\n  const query = {};\n  if (envNames.length !== 0) {\n    query.environment = envNames;\n  }\n\n  try {\n    const data = await api.requestPromise(url, {query});\n    api.bulkUpdate({\n      orgId,\n      projectId,\n      itemIds: [groupId],\n      failSilently: true,\n      data: {hasSeen: true},\n    });\n    return data;\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport function fetchGroupUserReports(groupId, query) {\n  const api = new Client();\n\n  return api.requestPromise(`/issues/${groupId}/user-reports/`, {\n    includeAllArgs: true,\n    query,\n  });\n}\n\n/**\n * Returns the environment name for an event or null\n *\n * @param {Object} event\n * @returns {String|Void}\n */\nexport function getEventEnvironment(event) {\n  const tag = event.tags.find(({key}) => key === 'environment');\n\n  return tag ? tag.value : null;\n}\n","import React from 'react';\nimport isEqual from 'lodash/isEqual';\n\nimport SentryTypes from 'app/sentryTypes';\nimport EventUserFeedback from 'app/components/events/userFeedback';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {Panel} from 'app/components/panels';\nimport Pagination from 'app/components/pagination';\nimport withOrganization from 'app/utils/withOrganization';\nimport UserFeedbackEmpty from 'app/views/userFeedback/userFeedbackEmpty';\n\nimport {fetchGroupUserReports} from './utils';\n\nclass GroupUserFeedback extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    group: SentryTypes.Group.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      error: false,\n      reportList: [],\n      pageLinks: '',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(prevProps.params, this.props.params)) {\n      this.fetchData();\n    }\n  }\n\n  fetchData = () => {\n    this.setState({\n      loading: true,\n      error: false,\n    });\n\n    fetchGroupUserReports(this.props.group.id, this.props.params)\n      .then(([data, _, jqXHR]) => {\n        this.setState({\n          error: false,\n          loading: false,\n          reportList: data,\n          pageLinks: jqXHR.getResponseHeader('Link'),\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      });\n  };\n\n  render() {\n    const {reportList} = this.state;\n    const {organization, group} = this.props;\n\n    if (this.state.loading) {\n      return <LoadingIndicator />;\n    } else if (this.state.error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    if (reportList.length) {\n      return (\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            {reportList.map((item, idx) => (\n              <EventUserFeedback\n                key={idx}\n                report={item}\n                orgId={organization.slug}\n                issueId={group.id}\n              />\n            ))}\n            <Pagination pageLinks={this.state.pageLinks} />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <Panel>\n        <UserFeedbackEmpty projectIds={[group.project.id]} />\n      </Panel>\n    );\n  }\n}\n\nexport default withOrganization(GroupUserFeedback);\n"],"sourceRoot":""}