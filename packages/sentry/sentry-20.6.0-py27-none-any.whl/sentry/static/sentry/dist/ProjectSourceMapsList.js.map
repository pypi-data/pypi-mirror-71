{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/views/settings/projectSourceMaps/list/sourceMapsArchiveRow.tsx","webpack:///./app/views/settings/projectSourceMaps/list/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","SearchBar","state","query","defaultQuery","dropdownVisible","searchInputRef","createRef","blur","current","onSubmit","evt","preventDefault","onSearch","clearSearch","setState","callIfFunction","onChange","onQueryFocus","onQueryBlur","onQueryChange","value","target","nextProps","className","width","classNames","Input","type","placeholder","name","ref","autoComplete","onBlur","onClick","PureComponent","undefined","SourceMapsArchiveRow","archive","orgId","projectId","onDelete","id","date","fileCount","archiveLink","encodeURIComponent","Fragment","Column","Name","to","version","anchor","truncate","TimeWrapper","size","RightColumn","gap","t","onConfirm","message","priority","theme","fontSizeMedium","fontSizeSmall","gray600","ProjectSourceMaps","handleSearch","location","router","push","cursor","handleDelete","a","addLoadingMessage","api","requestPromise","getArchivesUrl","method","fetchData","addSuccessMessage","addErrorMessage","params","archives","getQuery","decodeScalar","renderBody","length","map","key","loading","archivesPageLinks","Wrapper","noMargin","StyledPanelTable","headers","Actions","emptyMessage","getEmptyMessage","isEmpty","isLoading","renderMappings","pageLinks","PanelTable","breakpoints"],"mappings":"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","file":"ProjectSourceMapsList.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p => (p.tabs ? `${space(4)} 0 ${space(2)}` : `${space(4)} 0`)};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport {callIfFunction} from 'app/utils/callIfFunction';\n\ntype DefaultProps = {\n  query: string;\n  defaultQuery: string;\n  onSearch: (query: string) => void;\n};\n\ntype Props = DefaultProps & {\n  placeholder?: string;\n  className?: string;\n  onChange?: (query: string) => void;\n  width?: string;\n};\n\ntype State = {\n  query: string;\n  dropdownVisible: boolean;\n};\n\nclass SearchBar extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    query: '',\n    defaultQuery: '',\n    onSearch: function() {},\n  };\n\n  state = {\n    query: this.props.query || this.props.defaultQuery,\n    dropdownVisible: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.setState({\n        query: nextProps.query,\n      });\n    }\n  }\n\n  searchInputRef = React.createRef<HTMLInputElement>();\n\n  blur = () => {\n    if (this.searchInputRef.current) {\n      this.searchInputRef.current.blur();\n    }\n  };\n\n  onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    this.blur();\n    this.props.onSearch(this.state.query);\n  };\n\n  clearSearch = () => {\n    this.setState({query: this.props.defaultQuery}, () => {\n      this.props.onSearch(this.state.query);\n      callIfFunction(this.props.onChange, this.state.query);\n    });\n  };\n\n  onQueryFocus = () => {\n    this.setState({\n      dropdownVisible: true,\n    });\n  };\n\n  onQueryBlur = () => {\n    this.setState({dropdownVisible: false});\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = evt.target;\n\n    this.setState({query: value});\n    callIfFunction(this.props.onChange, value);\n  };\n\n  render() {\n    const {className, width} = this.props;\n\n    return (\n      <div className={classNames('search', className)}>\n        <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n          <div>\n            <Input\n              type=\"text\"\n              className=\"search-input form-control\"\n              placeholder={this.props.placeholder}\n              name=\"query\"\n              ref={this.searchInputRef}\n              autoComplete=\"off\"\n              value={this.state.query}\n              onBlur={this.onQueryBlur}\n              onChange={this.onQueryChange}\n              width={width}\n            />\n            <span className=\"icon-search\" />\n            {this.state.query !== this.props.defaultQuery && (\n              <div>\n                <a className=\"search-clear-form\" onClick={this.clearSearch}>\n                  <span className=\"icon-circle-cross\" />\n                </a>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst Input = styled('input')`\n  width: ${p => (p.width ? p.width : undefined)};\n`;\n\nexport default SearchBar;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {SourceMapsArchive} from 'app/types';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport TimeSince from 'app/components/timeSince';\nimport Button from 'app/components/button';\nimport {IconClock, IconFile, IconDelete} from 'app/icons';\nimport ButtonBar from 'app/components/buttonBar';\nimport Version from 'app/components/version';\nimport Count from 'app/components/count';\nimport Confirm from 'app/components/confirm';\nimport Link from 'app/components/links/link';\n\ntype Props = {\n  archive: SourceMapsArchive;\n  orgId: string;\n  projectId: string;\n  onDelete: (id: number) => void;\n};\n\nconst SourceMapsArchiveRow = ({archive, orgId, projectId, onDelete}: Props) => {\n  const {id, name, date, fileCount} = archive;\n  const archiveLink = `/settings/${orgId}/projects/${projectId}/source-maps/${encodeURIComponent(\n    name\n  )}`;\n  return (\n    <React.Fragment>\n      <Column>\n        <Name>\n          <Link to={archiveLink}>\n            <Version version={name} anchor={false} truncate />\n          </Link>\n        </Name>\n        <TimeWrapper>\n          <IconClock size=\"xs\" />\n          <TimeSince date={date} />\n        </TimeWrapper>\n      </Column>\n      <Column>\n        <Count value={fileCount} />\n      </Column>\n      <RightColumn>\n        <ButtonBar gap={0.5}>\n          <Button size=\"xsmall\" icon={<IconFile size=\"xs\" />} to={archiveLink}>\n            {t('Open')}\n          </Button>\n          <Confirm\n            onConfirm={() => onDelete(id)}\n            message={t('Are you sure you want to remove all artifacts in this archive?')}\n          >\n            <Button size=\"xsmall\" icon={<IconDelete size=\"xs\" />} priority=\"danger\" />\n          </Confirm>\n        </ButtonBar>\n      </RightColumn>\n    </React.Fragment>\n  );\n};\n\nconst Column = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst RightColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst Name = styled('div')`\n  max-width: 100%;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  grid-gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  margin-top: ${space(1)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray600};\n`;\n\nexport default SourceMapsArchiveRow;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport {Organization, Project, SourceMapsArchive} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport SearchBar from 'app/components/searchBar';\nimport Pagination from 'app/components/pagination';\nimport {PanelTable} from 'app/components/panels';\nimport space from 'app/styles/space';\nimport {decodeScalar} from 'app/utils/queryString';\nimport {\n  addLoadingMessage,\n  addSuccessMessage,\n  addErrorMessage,\n} from 'app/actionCreators/indicator';\n\nimport SourceMapsArchiveRow from './sourceMapsArchiveRow';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  archives: SourceMapsArchive[];\n};\n\nclass ProjectSourceMaps extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n\n    return routeTitleGen(t('Source Maps'), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      archives: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['archives', this.getArchivesUrl(), {query: {query: this.getQuery()}}]];\n  }\n\n  getArchivesUrl() {\n    const {orgId, projectId} = this.props.params;\n\n    return `/projects/${orgId}/${projectId}/files/source-maps/`;\n  }\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  handleDelete = async (id: number) => {\n    addLoadingMessage(t('Removing archive\\u2026'));\n    try {\n      await this.api.requestPromise(this.getArchivesUrl(), {\n        method: 'DELETE',\n        query: {id},\n      });\n      this.fetchData();\n      addSuccessMessage(t('Archive removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove archive. Please try again.'));\n    }\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return decodeScalar(query);\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no archives that match your search.');\n    }\n\n    return t('There are no archives for this project.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderMappings() {\n    const {archives} = this.state;\n    const {params} = this.props;\n    const {orgId, projectId} = params;\n\n    if (!archives.length) {\n      return null;\n    }\n\n    return archives.map(a => {\n      return (\n        <SourceMapsArchiveRow\n          key={a.name}\n          archive={a}\n          orgId={orgId}\n          projectId={projectId}\n          onDelete={this.handleDelete}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, archives, archivesPageLinks} = this.state;\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader title={t('Source Maps')} />\n\n        <TextBlock>\n          {t(\n            `Source Maps lets you view source code context obtained from stack traces in their original un-transformed form, which is particularly useful for debugging minified code, or transpiled code from a higher-level language.\n            `\n          )}\n        </TextBlock>\n\n        <Wrapper>\n          <TextBlock noMargin>{t('Uploaded archives')}:</TextBlock>\n\n          <SearchBar\n            placeholder={t('Filter archives')}\n            onSearch={this.handleSearch}\n            query={this.getQuery()}\n          />\n        </Wrapper>\n\n        <StyledPanelTable\n          headers={[\n            t('Archive'),\n            t('Artifacts'),\n            <Actions key=\"actions\">{t('Actions')}</Actions>,\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={archives.length === 0}\n          isLoading={loading}\n        >\n          {this.renderMappings()}\n        </StyledPanelTable>\n        <Pagination pageLinks={archivesPageLinks} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: 1fr 100px 150px;\n`;\n\nconst Actions = styled('div')`\n  text-align: right;\n`;\n\nconst Wrapper = styled('div')`\n  display: grid;\n  grid-template-columns: auto minmax(200px, 400px);\n  grid-gap: ${space(4)};\n  align-items: center;\n  margin-top: ${space(4)};\n  margin-bottom: ${space(1)};\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    display: block;\n  }\n`;\n\nexport default ProjectSourceMaps;\n"],"sourceRoot":""}