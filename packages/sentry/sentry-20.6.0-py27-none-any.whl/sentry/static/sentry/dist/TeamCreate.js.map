{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/forms/textField.jsx","webpack:///./app/utils/slugify.tsx","webpack:///./app/components/createTeamForm.jsx","webpack:///./app/views/teamCreate.jsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","TextField","props","type","React","Component","slugify","str","toLowerCase","replace","CreateTeamForm","handleCreateTeamSuccess","data","onSuccess","organization","Fragment","t","submitLabel","apiEndpoint","slug","apiMethod","onSubmit","onSubmitSuccess","requireChanges","data-test-id","formProps","name","label","placeholder","help","required","stacked","flexibleControlStateSize","inline","transformInput","TeamCreate","handleSubmitSuccess","orgId","params","redirectUrl","router","push","context","contextTypes","SentryTypes","Organization","withRouter"],"mappings":"6fAQqBA,E,8RAKjB,MAAO,K,+BAIP,IAAMC,EAAQC,KAAKC,WACnB,OACE,YAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,WACjBC,KAAKE,uB,GATJC,KAHWL,E,ieCJAM,E,4RAMjB,OAAO,YAAC,IAAD,OAAgBJ,KAAKK,MAArB,CAA4BC,KAAK,c,GANLC,IAAMC,WAAxBJ,E,2DCFN,SAASK,EAAQC,GAC9B,MAAsB,iBAARA,EAAmBA,EAAIC,cAAcC,QAAQ,IAAK,KAAO,GAHzE,mC,oeCSqBC,E,yUAQnBC,wBAA0B,SAAAC,GAAQ,IACzBC,EAAa,EAAKX,MAAlBW,UAEkB,mBAAdA,GAIXA,EAAUD,I,+CAGH,IACAE,EAAgBjB,KAAKK,MAArBY,aAEP,OACE,YAAC,IAAMC,SAAP,KACE,qBACGC,YACC,qHAIJ,YAAC,IAAD,KACEC,YAAaD,YAAE,eACfE,YAAW,yBAAoBJ,EAAaK,KAAjC,WACXC,UAAU,OACVC,SAAUxB,KAAKK,MAAMmB,SACrBC,gBAAiBzB,KAAKc,wBACtBY,gBAAc,EACdC,eAAa,oBACT3B,KAAKK,MAAMuB,WAEf,YAAC,IAAD,CACEC,KAAK,OACLC,MAAOX,YAAE,aACTY,YAAaZ,YAAE,0CACfa,KAAMb,YAAE,mEACRc,UAAQ,EACRC,SAAO,EACPC,0BAAwB,EACxBC,QAAQ,EACRC,eAAgB5B,Y,GAhDgBF,IAAMC,WAA7BK,E,wgBCAfyB,E,yUAaJC,oBAAsB,SAAAxB,GAAQ,IACrByB,EAAS,EAAKnC,MAAMoC,OAApBD,MACDE,EAAc,aAAH,OAAgBF,EAAhB,kBAA+BzB,EAAKO,KAApC,KACjB,EAAKjB,MAAMsC,OAAOC,KAAKF,I,iDAVvB,MAAO,gB,qCAIP,MAAO,K,mCAUP,OACE,YAAC,IAAD,KACE,sBAAKvB,YAAE,sBAEP,YAAC,IAAD,CACEH,UAAWhB,KAAKuC,oBAChBtB,aAAcjB,KAAK6C,QAAQ5B,oB,GA1BZnB,KAAnBwC,EACGQ,aAAe,CACpB7B,aAAc8B,IAAYC,cAgCfC,+BAAWX","file":"TeamCreate.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\n\nimport InputField from 'app/views/settings/components/forms/inputField';\n\nexport default class TextField extends React.Component {\n  static propTypes = {\n    ...InputField.propTypes,\n  };\n\n  render() {\n    return <InputField {...this.props} type=\"text\" />;\n  }\n}\n","// XXX: This is NOT an exhaustive slugify function\n// Only forces lowercase and replaces spaces with hyphens\nexport default function slugify(str: any): string {\n  return typeof str === 'string' ? str.toLowerCase().replace(' ', '-') : '';\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t} from 'app/locale';\nimport Form from 'app/views/settings/components/forms/form';\nimport SentryTypes from 'app/sentryTypes';\nimport TextField from 'app/views/settings/components/forms/textField';\nimport slugify from 'app/utils/slugify';\n\nexport default class CreateTeamForm extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    onSuccess: PropTypes.func,\n    onSubmit: PropTypes.func,\n    formProps: PropTypes.object,\n  };\n\n  handleCreateTeamSuccess = data => {\n    const {onSuccess} = this.props;\n\n    if (typeof onSuccess !== 'function') {\n      return;\n    }\n\n    onSuccess(data);\n  };\n\n  render() {\n    const {organization} = this.props;\n\n    return (\n      <React.Fragment>\n        <p>\n          {t(\n            \"Teams group members' access to a specific focus, e.g. a major product or application that may have sub-projects.\"\n          )}\n        </p>\n\n        <Form\n          submitLabel={t('Create Team')}\n          apiEndpoint={`/organizations/${organization.slug}/teams/`}\n          apiMethod=\"POST\"\n          onSubmit={this.props.onSubmit}\n          onSubmitSuccess={this.handleCreateTeamSuccess}\n          requireChanges\n          data-test-id=\"create-team-form\"\n          {...this.props.formProps}\n        >\n          <TextField\n            name=\"slug\"\n            label={t('Team Slug')}\n            placeholder={t('e.g. operations, web-frontend, desktop')}\n            help={t('May contain lowercase letters, numbers, dashes and underscores.')}\n            required\n            stacked\n            flexibleControlStateSize\n            inline={false}\n            transformInput={slugify}\n          />\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import {withRouter} from 'react-router';\nimport React from 'react';\n\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport CreateTeamForm from 'app/components/createTeamForm';\nimport NarrowLayout from 'app/components/narrowLayout';\nimport SentryTypes from 'app/sentryTypes';\n\nclass TeamCreate extends AsyncView {\n  static contextTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  getTitle() {\n    return 'Create Team';\n  }\n\n  getEndpoints() {\n    return [];\n  }\n\n  handleSubmitSuccess = data => {\n    const {orgId} = this.props.params;\n    const redirectUrl = `/settings/${orgId}/teams/${data.slug}/`;\n    this.props.router.push(redirectUrl);\n  };\n\n  renderBody() {\n    return (\n      <NarrowLayout>\n        <h3>{t('Create a New Team')}</h3>\n\n        <CreateTeamForm\n          onSuccess={this.handleSubmitSuccess}\n          organization={this.context.organization}\n        />\n      </NarrowLayout>\n    );\n  }\n}\n\nexport {TeamCreate};\nexport default withRouter(TeamCreate);\n"],"sourceRoot":""}