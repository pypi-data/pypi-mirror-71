{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/settings/components/forms/textCopyInput.jsx","webpack:///./app/components/clippedBox.jsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.tsx","webpack:///./app/views/settings/project/projectKeys/list/keyRow.tsx","webpack:///./app/views/settings/project/projectKeys/list/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SettingsPageHeading","props","icon","action","tabs","noTitleStyles","TitleAndActions","Icon","Title","styled","Action","React","Component","defaultProps","p","space","StyledSettingsPageHeading","routeTitleGen","routeName","orgSlug","withSentry","tmpl","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","Wrapper","StyledInput","inputStyles","theme","gray100","rtl","OverflowContainer","StyledCopyButton","Button","TextCopyInput","handleCopyClick","e","textRef","current","onCopy","handleSelectText","children","stopPropagation","node","ReactDOM","findDOMNode","setSelectionRange","value","length","selectText","createRef","style","inputValue","readOnly","ref","onClick","hideUnsupported","type","size","ClippedBox","args","reveal","setState","clipped","revealed","state","defaultClipped","renderedHeight","offsetHeight","clipHeight","className","classnames","maxHeight","priority","btnText","t","ProjectKeyCredentials","showDeprecatedDsn","toggleDeprecatedDsn","projectId","data","showDsn","showDsnPublic","showSecurityEndpoint","showMinidump","showUnreal","showPublicKey","showSecretKey","showProjectId","Fragment","label","inline","flexibleControlStateSize","help","tct","link","getDynamicText","dsn","fixed","StyledField","secret","security","href","minidump","unreal","Field","KeyRow","handleRemove","onRemove","handleEnable","onToggle","handleDisable","access","editUrl","id","controlActive","has","controls","key","isActive","disabled","onConfirm","confirmText","message","ClientKeyItemPanel","hasButtons","PanelHeaderLink","Controls","c","n","StyledPanelBody","Panel","Link","gray600","PanelBody","ProjectKeys","handleRemoveKey","a","oldKeyList","keyList","addLoadingMessage","filter","orgId","api","requestPromise","method","addSuccessMessage","addErrorMessage","handleToggleKey","handleCreateKey","description","organization","Set","pageLinks","keyListPageLinks","isEmpty","data-test-id","isCircled","code","renderEmpty","renderResults","withOrganization","withProject"],"mappings":"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","file":"ProjectKeys.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p => (p.tabs ? `${space(4)} 0 ${space(2)}` : `${space(4)} 0`)};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import {Location} from 'history';\nimport {PlainRoute} from 'react-router/lib/Route';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\n\ntype Options = {\n  routes: PlainRoute[];\n  location: Location;\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from '@emotion/styled';\n\nimport {inputStyles} from 'app/styles/input';\nimport {selectText} from 'app/utils/selectText';\nimport Button from 'app/components/button';\nimport Clipboard from 'app/components/clipboard';\nimport {IconCopy} from 'app/icons';\n\nconst Wrapper = styled('div')`\n  display: flex;\n`;\n\nconst StyledInput = styled('input')`\n  ${inputStyles};\n  background-color: ${p => p.theme.gray100};\n  border-right-width: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  direction: ${p => (p.rtl ? 'rtl' : 'ltr')};\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.gray100};\n    border-right-width: 0;\n  }\n`;\n\nconst OverflowContainer = styled('div')`\n  flex-grow: 1;\n  border: none;\n`;\n\nconst StyledCopyButton = styled(Button)`\n  flex-shrink: 1;\n  border-radius: 0 0.25em 0.25em 0;\n  box-shadow: none;\n`;\n\nclass TextCopyInput extends React.Component {\n  static propTypes = {\n    /**\n     * Text to copy\n     */\n    children: PropTypes.string.isRequired,\n    /**\n     * CSS style object\n     */\n    style: PropTypes.object,\n    onCopy: PropTypes.func,\n    /**\n     * Always show the ending of a long overflowing text in input\n     */\n    rtl: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    onCopy: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.textRef = React.createRef();\n  }\n\n  // Select text when copy button is clicked\n  handleCopyClick = e => {\n    if (!this.textRef.current) {\n      return;\n    }\n\n    const {onCopy} = this.props;\n\n    this.handleSelectText();\n\n    onCopy(this.props.children, e);\n\n    e.stopPropagation();\n  };\n\n  handleSelectText = () => {\n    const {rtl} = this.props;\n\n    if (!this.textRef.current) {\n      return;\n    }\n\n    // We use findDOMNode here because `this.textRef` is not a dom node,\n    // it's a ref to AutoSelectText\n    const node = ReactDOM.findDOMNode(this.textRef.current); // eslint-disable-line react/no-find-dom-node\n\n    if (rtl) {\n      // we don't want to select the first character - \\u202A, nor the last - \\u202C\n      node.setSelectionRange(1, node.value.length - 1);\n    } else {\n      selectText(node);\n    }\n  };\n\n  render() {\n    const {style, children, rtl} = this.props;\n\n    /**\n     * We are using direction: rtl; to always show the ending of a long overflowing text in input.\n     *\n     * This however means that the trailing characters with BiDi class O.N. ('Other Neutrals') goes to the other side.\n     * Hello! becomes !Hello and vice versa. This is a problem for us when we want to show path in this component, because\n     * /user/local/bin becomes user/local/bin/. Wrapping in unicode characters for left-to-righ embedding solves this,\n     * however we need to be aware of them when selecting the text - we are solving that by offseting the selectionRange.\n     */\n    const inputValue = rtl ? '\\u202A' + children + '\\u202C' : children;\n\n    return (\n      <Wrapper>\n        <OverflowContainer>\n          <StyledInput\n            readOnly\n            ref={this.textRef}\n            style={style}\n            value={inputValue}\n            onClick={this.handleSelectText}\n            rtl={rtl}\n          />\n        </OverflowContainer>\n        <Clipboard hideUnsupported onClick={this.handleCopyClick} value={children}>\n          <StyledCopyButton type=\"button\" size=\"xsmall\" onClick={this.handleCopyClick}>\n            <IconCopy />\n          </StyledCopyButton>\n        </Clipboard>\n      </Wrapper>\n    );\n  }\n}\n\nexport default TextCopyInput;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport classnames from 'classnames';\n\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\n\nclass ClippedBox extends React.Component {\n  static propTypes = {\n    title: PropTypes.string,\n    defaultClipped: PropTypes.bool,\n    clipHeight: PropTypes.number,\n    btnText: PropTypes.string,\n  };\n\n  static defaultProps = {\n    defaultClipped: false,\n    clipHeight: 200,\n    renderedHeight: null,\n    btnText: t('Show More'),\n  };\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clipped: this.props.defaultClipped,\n      revealed: false, // True once user has clicked \"Show More\" button\n    };\n  }\n\n  componentDidMount() {\n    const renderedHeight = ReactDOM.findDOMNode(this).offsetHeight; // eslint-disable-line react/no-find-dom-node\n\n    if (!this.state.clipped && renderedHeight > this.props.clipHeight) {\n      /*eslint react/no-did-mount-set-state:0*/\n      // okay if this causes re-render; cannot determine until\n      // rendered first anyways\n      this.setState({\n        clipped: true,\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.revealed || !this.state.clipped) {\n      return;\n    }\n\n    const renderedHeight = ReactDOM.findDOMNode(this).offsetHeight; // eslint-disable-line react/no-find-dom-node\n    if (renderedHeight < this.props.clipHeight) {\n      this.reveal();\n    }\n  }\n\n  reveal = e => {\n    e?.stopPropagation();\n\n    this.setState({\n      clipped: false,\n      revealed: true,\n    });\n  };\n\n  render() {\n    const className = classnames('box-clippable', {\n      clipped: this.state.clipped,\n      revealed: this.state.revealed,\n    });\n\n    return (\n      <div\n        className={className}\n        style={{maxHeight: this.state.clipped ? this.props.clipHeight : null}}\n      >\n        {this.props.title && <h5>{this.props.title}</h5>}\n        {this.props.children}\n\n        {this.state.clipped && (\n          <div className=\"clip-fade\">\n            <Button onClick={this.reveal} priority=\"primary\" size=\"xsmall\">\n              {this.props.btnText}\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ClippedBox;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\nimport {t, tct} from 'app/locale';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport Field from 'app/views/settings/components/forms/field';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport space from 'app/styles/space';\n\nconst DEFAULT_PROPS = {\n  showDsn: true,\n  showDsnPublic: true,\n  showSecurityEndpoint: true,\n  showMinidump: true,\n  showUnreal: true,\n  showPublicKey: false,\n  showSecretKey: false,\n  showProjectId: false,\n};\n\ntype Props = {\n  projectId: string;\n  data: ProjectKey;\n} & typeof DEFAULT_PROPS;\n\ntype State = {\n  showDeprecatedDsn: boolean;\n};\n\nclass ProjectKeyCredentials extends React.Component<Props, State> {\n  static defaultProps = DEFAULT_PROPS;\n\n  state = {\n    showDeprecatedDsn: false,\n  };\n\n  toggleDeprecatedDsn = () => {\n    this.setState(state => ({\n      showDeprecatedDsn: !state.showDeprecatedDsn,\n    }));\n  };\n\n  render() {\n    const {showDeprecatedDsn} = this.state;\n    const {\n      projectId,\n      data,\n      showDsn,\n      showDsnPublic,\n      showSecurityEndpoint,\n      showMinidump,\n      showUnreal,\n      showPublicKey,\n      showSecretKey,\n      showProjectId,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        {showDsnPublic && (\n          <Field\n            label={t('DSN')}\n            inline={false}\n            flexibleControlStateSize\n            help={tct('The DSN tells the SDK where to send the events to. [link]', {\n              link: showDsn ? (\n                <Link to=\"\" onClick={this.toggleDeprecatedDsn}>\n                  {showDeprecatedDsn\n                    ? t('Hide deprecated DSN')\n                    : t('Show deprecated DSN')}\n                </Link>\n              ) : null,\n            })}\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.public,\n                fixed: '__DSN__',\n              })}\n            </TextCopyInput>\n            {showDeprecatedDsn && (\n              <StyledField\n                label={null}\n                help={t(\n                  'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n                )}\n                inline={false}\n                flexibleControlStateSize\n              >\n                <TextCopyInput>\n                  {getDynamicText({\n                    value: data.dsn.secret,\n                    fixed: '__DSN_DEPRECATED__',\n                  })}\n                </TextCopyInput>\n              </StyledField>\n            )}\n          </Field>\n        )}\n\n        {/* this edge case should imho not happen, but just to be sure */}\n        {!showDsnPublic && showDsn && (\n          <Field\n            label={t('DSN (Deprecated)')}\n            help={t(\n              'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.secret,\n                fixed: '__DSN_DEPRECATED__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showSecurityEndpoint && (\n          <Field\n            label={t('Security Header Endpoint')}\n            help={t(\n              'Use your security header endpoint for features like CSP and Expect-CT reports.'\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.security,\n                fixed: '__SECURITY_HEADER_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showMinidump && (\n          <Field\n            label={t('Minidump Endpoint')}\n            help={tct(\n              'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/clients/minidump/\">\n                    minidump crash reports\n                  </ExternalLink>\n                ),\n              }\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.minidump,\n                fixed: '__MINIDUMP_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showUnreal && (\n          <Field\n            label={t('Unreal Engine 4 Endpoint')}\n            help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.unreal || '',\n                fixed: '__UNREAL_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showPublicKey && (\n          <Field label={t('Public Key')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.public,\n                fixed: '__PUBLICKEY__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showSecretKey && (\n          <Field label={t('Secret Key')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.secret,\n                fixed: '__SECRETKEY__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showProjectId && (\n          <Field label={t('Project ID')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: projectId,\n                fixed: '__PROJECTID__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledField = styled(Field)`\n  padding: ${space(0.5)} 0 0 0;\n`;\n\nexport default ProjectKeyCredentials;\n","import {Link} from 'react-router';\nimport {RouteComponentProps} from 'react-router/lib/Router';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'app/api';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport ClippedBox from 'app/components/clippedBox';\nimport Confirm from 'app/components/confirm';\nimport {IconDelete} from 'app/icons';\nimport ProjectKeyCredentials from 'app/views/settings/project/projectKeys/projectKeyCredentials';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport space from 'app/styles/space';\nimport {Scope} from 'app/types';\n\ntype Props = {\n  api: Client;\n  orgId: string;\n  projectId: string;\n  data: ProjectKey;\n  access: Set<Scope>;\n  onToggle: (isActive: boolean, data: ProjectKey) => void;\n  onRemove: (data: ProjectKey) => void;\n} & Pick<RouteComponentProps<{}, {}>, 'routes' | 'location' | 'params'>;\n\nclass KeyRow extends React.Component<Props> {\n  handleRemove = () => {\n    const {data, onRemove} = this.props;\n    onRemove(data);\n  };\n\n  handleEnable = () => {\n    const {onToggle, data} = this.props;\n    onToggle(true, data);\n  };\n\n  handleDisable = () => {\n    const {onToggle, data} = this.props;\n    onToggle(false, data);\n  };\n\n  render() {\n    const {access, data, routes, location, params} = this.props;\n    const editUrl = recreateRoute(`${data.id}/`, {routes, params, location});\n    const controlActive = access.has('project:write');\n\n    const controls = [\n      <Button key=\"edit\" to={editUrl} size=\"small\">\n        {t('Configure')}\n      </Button>,\n      <Button\n        key=\"toggle\"\n        size=\"small\"\n        onClick={data.isActive ? this.handleDisable : this.handleEnable}\n        disabled={!controlActive}\n      >\n        {data.isActive ? t('Disable') : t('Enable')}\n      </Button>,\n      <Confirm\n        key=\"remove\"\n        priority=\"danger\"\n        disabled={!controlActive}\n        onConfirm={this.handleRemove}\n        confirmText={t('Remove Key')}\n        message={t(\n          'Are you sure you want to remove this key? This action is irreversible.'\n        )}\n      >\n        <Button size=\"small\" disabled={!controlActive} icon={<IconDelete />} />\n      </Confirm>,\n    ];\n\n    return (\n      <ClientKeyItemPanel>\n        <PanelHeader hasButtons>\n          <Title disabled={!data.isActive}>\n            <PanelHeaderLink to={editUrl}>{data.label}</PanelHeaderLink>\n            {!data.isActive && (\n              <small>\n                {' \\u2014  '}\n                {t('Disabled')}\n              </small>\n            )}\n          </Title>\n          <Controls>\n            {controls.map((c, n) => (\n              <span key={n}> {c}</span>\n            ))}\n          </Controls>\n        </PanelHeader>\n\n        <ClippedBox clipHeight={300} defaultClipped btnText={t('Expand')}>\n          <StyledPanelBody disabled={!data.isActive}>\n            <ProjectKeyCredentials projectId={`${data.projectId}`} data={data} />\n          </StyledPanelBody>\n        </ClippedBox>\n      </ClientKeyItemPanel>\n    );\n  }\n}\n\nexport default KeyRow;\n\nconst ClientKeyItemPanel = styled(Panel)`\n  .box-clippable {\n    padding: 0;\n    margin: 0;\n\n    .clip-fade {\n      padding-bottom: 20px;\n    }\n  }\n`;\n\nconst PanelHeaderLink = styled(Link)`\n  color: ${p => p.theme.gray600};\n`;\n\nconst Title = styled('div')<{disabled: boolean}>`\n  flex: 1;\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n  margin-right: ${space(1)};\n`;\n\nconst Controls = styled('div')`\n  display: grid;\n  align-items: center;\n  grid-gap: ${space(1)};\n  grid-auto-flow: column;\n`;\n\nconst StyledPanelBody = styled(PanelBody)<{disabled: boolean}>`\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n`;\n","import {RouteComponentProps} from 'react-router/lib/Router';\nimport React from 'react';\n\nimport {\n  addLoadingMessage,\n  addErrorMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {Organization, Project} from 'app/types';\nimport {Panel} from 'app/components/panels';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\nimport {t, tct} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Button from 'app/components/button';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Pagination from 'app/components/pagination';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport withOrganization from 'app/utils/withOrganization';\nimport withProject from 'app/utils/withProject';\nimport {IconAdd} from 'app/icons';\n\nimport KeyRow from './keyRow';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  keyList: ProjectKey[];\n} & AsyncView['state'];\n\nclass ProjectKeys extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Client Keys'), projectId, false);\n  }\n\n  getEndpoints(): [string, string][] {\n    const {orgId, projectId} = this.props.params;\n    return [['keyList', `/projects/${orgId}/${projectId}/keys/`]];\n  }\n\n  /**\n   * Optimistically remove key\n   */\n  handleRemoveKey = async (data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Revoking key..'));\n\n    this.setState(state => ({\n      keyList: state.keyList.filter(key => key.id !== data.id),\n    }));\n\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(`/projects/${orgId}/${projectId}/keys/${data.id}/`, {\n        method: 'DELETE',\n      });\n      addSuccessMessage(t('Revoked key'));\n    } catch (_err) {\n      this.setState({\n        keyList: oldKeyList,\n      });\n      addErrorMessage(t('Unable to revoke key'));\n    }\n  };\n\n  handleToggleKey = async (isActive: boolean, data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Saving changes..'));\n\n    this.setState(state => {\n      const keyList = state.keyList.map(key => {\n        if (key.id === data.id) {\n          return {\n            ...key,\n            isActive: !data.isActive,\n          };\n        }\n\n        return key;\n      });\n      return {keyList};\n    });\n\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(`/projects/${orgId}/${projectId}/keys/${data.id}/`, {\n        method: 'PUT',\n        data: {isActive},\n      });\n      addSuccessMessage(isActive ? t('Enabled key') : t('Disabled key'));\n    } catch (_err) {\n      addErrorMessage(isActive ? t('Error enabling key') : t('Error disabling key'));\n      this.setState({keyList: oldKeyList});\n    }\n  };\n\n  handleCreateKey = async () => {\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      const data: ProjectKey = await this.api.requestPromise(\n        `/projects/${orgId}/${projectId}/keys/`,\n        {\n          method: 'POST',\n        }\n      );\n\n      this.setState(state => ({\n        keyList: [...state.keyList, data],\n      }));\n      addSuccessMessage(t('Created a new key.'));\n    } catch (_err) {\n      addErrorMessage(t('Unable to create new key. Please try again.'));\n    }\n  };\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <EmptyMessage\n          icon=\"icon-circle-exclamation\"\n          description={t('There are no keys active for this project.')}\n        />\n      </Panel>\n    );\n  }\n\n  renderResults() {\n    const {location, organization, routes, params} = this.props;\n    const {orgId, projectId} = params;\n    const access = new Set(organization.access);\n\n    return (\n      <React.Fragment>\n        {this.state.keyList.map(key => (\n          <KeyRow\n            api={this.api}\n            access={access}\n            key={key.id}\n            orgId={orgId}\n            projectId={`${projectId}`}\n            data={key}\n            onToggle={this.handleToggleKey}\n            onRemove={this.handleRemoveKey}\n            routes={routes}\n            location={location}\n            params={params}\n          />\n        ))}\n        <Pagination pageLinks={this.state.keyListPageLinks} />\n      </React.Fragment>\n    );\n  }\n\n  renderBody() {\n    const access = new Set(this.props.organization.access);\n    const isEmpty = !this.state.keyList.length;\n\n    return (\n      <div data-test-id=\"project-keys\">\n        <SettingsPageHeader\n          title={t('Client Keys')}\n          action={\n            access.has('project:write') ? (\n              <Button\n                onClick={this.handleCreateKey}\n                size=\"small\"\n                priority=\"primary\"\n                icon={<IconAdd size=\"xs\" isCircled />}\n              >\n                {t('Generate New Key')}\n              </Button>\n            ) : null\n          }\n        />\n        <TextBlock>\n          {tct(\n            `To send data to Sentry you will need to configure an SDK with a client key\n          (usually referred to as the [code:SENTRY_DSN] value). For more\n          information on integrating Sentry with your application take a look at our\n          [link:documentation].`,\n            {\n              link: <ExternalLink href=\"https://docs.sentry.io/\" />,\n              code: <code />,\n            }\n          )}\n        </TextBlock>\n\n        {isEmpty ? this.renderEmpty() : this.renderResults()}\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(withProject(ProjectKeys));\n"],"sourceRoot":""}