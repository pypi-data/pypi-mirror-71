from spikesorters.spyking_circus import SpykingcircusSorter
class_default = SpykingcircusSorter._default_params

gui_params = [
    {
        "name": "output_folder",
        "type": "folder",
        "value": None,
        "default": None,
        "title": "Sorting output folder path.",
        "base_param": True,
    },
    {
        "name": "verbose",
        "type": "bool",
        "value": False,
        "default": False,
        "title": "If True, output from SpikeInterface element is verbose when run.",
        "base_param": True,
    },
    {
        "name": "grouping_property",
        "type": "str",
        "value": None,
        "default": None,
        "title": "Property name to be used for sorter output grouping.",
        "base_param": True,
    },
    {
        "name": "parallel",
        "type": "bool",
        "value": False,
        "default": False,
        "title": "If grouping property specifed, sort property groups in parallel if True.",
        "base_param": True,
    },
    {
        "name": "delete_output_folder",
        "type": "bool",
        "value": False,
        "default": False,
        "title": "Delete specified or default output folder on completion if True.",
        "base_param": True,
    },
    # spyking_circus specific parameters
    {
        "name": "detect_sign",
        "type": "int",
        "value": class_default["detect_sign"],
        "default": class_default["detect_sign"],
        "title": "Use -1, 0, or 1, depending on the sign of the spikes in the recording",
    },
    {
        "name": "adjacency_radius",
        "type": "float",
        "value": class_default["adjacency_radius"],
        "default": class_default["adjacency_radius"],
        "title": "Distance (in microns) of the adjacency radius",
    },
    {
        "name": "detect_threshold",
        "type": "float",
        "value": class_default["detect_threshold"],
        "default": class_default["detect_threshold"],
        "title": "Threshold for detection",
    },
    {
        "name": "template_width_ms",
        "type": "float",
        "value": class_default["template_width_ms"],
        "default": class_default["template_width_ms"],
        "title": "Width of templates (ms)",
    },
    {
        "name": "filter",
        "type": "bool",
        "value": class_default["filter"],
        "default": class_default["filter"],
        "title": "If True, the recording will be filtered",
    },
    {
        "name": "merge_spikes",
        "type": "bool",
        "value": class_default["merge_spikes"],
        "default": class_default["merge_spikes"],
        "title": "If True, spikes will be merged at the end.",
    },
    {
        "name": "auto_merge",
        "type": "float",
        "value": class_default["auto_merge"],
        "default": class_default["auto_merge"],
        "title": "Auto-merge value",
    },
    {
        "name": "num_workers",
        "type": "int",
        "value": class_default["num_workers"],
        "default": class_default["num_workers"],
        "title": "Number of parallel workers",
    },
    {
        "name": "whitening_max_elts",
        "type": "int",
        "value": class_default["whitening_max_elts"],
        "default": class_default["whitening_max_elts"],
        "title": "Related to subsampling",
    },
    {
        "name": "clustering_max_elts",
        "type": "int",
        "value": class_default["clustering_max_elts"],
        "default": class_default["clustering_max_elts"],
        "title": "Related to subsampling",
    },
]
