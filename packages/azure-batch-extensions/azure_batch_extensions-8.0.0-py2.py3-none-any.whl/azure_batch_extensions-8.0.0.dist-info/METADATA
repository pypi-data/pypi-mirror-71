Metadata-Version: 2.0
Name: azure-batch-extensions
Version: 8.0.0
Summary: Microsoft Azure Batch Extended Features
Home-page: https://github.com/Azure/azure-batch-cli-extensions
Author: Microsoft Corporation
Author-email: azpycli@microsoft.com
License: MIT
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: License :: OSI Approved :: MIT License
Requires-Dist: msrestazure (<1,>=0.4.14)
Requires-Dist: azure-batch (<10,>=9.0)
Requires-Dist: azure-mgmt-batch (<10,>=9.0)
Requires-Dist: azure-storage-blob (<2,>=1.1.0)
Requires-Dist: azure-mgmt-storage (<3,>=2.0)
Requires-Dist: pathlib (>=1.0.1); python_version<'3.4'

Microsoft Azure Batch Extensions
================================

.. image:: https://travis-ci.org/Azure/azure-batch-cli-extensions.svg?branch=master
 :target: https://travis-ci.org/Azure/azure-batch-cli-extensions

This project is a preview build of the Microsoft Azure command-line interface to demonstrate proposed features in Azure Batch.
For further details on the Azure CLI, please check the `official documentation <https://docs.microsoft.com/en-us/cli/azure/install-azure-cli>`_.

The purpose of this project is to allow customers to try out proposed Batch features and provide feedback to help shape the direction of the Batch service.
The features presented here may not be compatible with other Batch client SDKs and tools, nor will they necessarily be adopted into the core Batch service.

As these features are still in preview, they will be updated regularly, and refined based on customer feedback.
Unfortunately this may result in occasional breaking changes, though every effort will be made to keep this to a minimum.

Features
--------

- `Input data upload to Batch linked storage accounts <https://github.com/Azure/azure-batch-cli-extensions/blob/master/doc/inputFiles.md#input-file-upload>`_

  A new command to allow a user to upload a set of files directly into the storage account linked to their Azure Batch account.


- `Input data references using linked storage accounts <https://github.com/Azure/azure-batch-cli-extensions/blob/master/doc/inputFiles.md#referencing-input-data>`_

  Input data stored in linked storage under a file group can be simply referenced by a task by using some new ResourceFile properties. 


- `Automatic persistence of task output files to a file group <https://github.com/Azure/azure-batch-cli-extensions/blob/master/doc/outputFiles.md>`_

  When declaring task output files, you can now persist outputs to a named file group, without the need to generate a container SAS URL.


- `Download job outputs from directly from storage <https://github.com/Azure/azure-batch-cli-extensions/blob/master/doc/outputFiles.md#output-file-download>`_

  A new command to allow a user to download job output files from a file group in the storage account linked to their Azure Batch account.


- `Pool and job templates with parameterization <https://github.com/Azure/azure-batch-cli-extensions/blob/master/doc/templates.md>`_

  Templates allow pools and jobs to be defined in parameterized json files with a format inspired by ARM templates.


- `Task factories for automatic task generation on job submission <https://github.com/Azure/azure-batch-cli-extensions/blob/master/doc/taskFactories.md>`_

  Task factories provide a way for a job and all its tasks to be created in one command instead
  of calling `azure batch task create` for each task. There are currently three kinds of task factory:

  + `Task Collection <https://github.com/Azure/azure-batch-cli-extensions/blob/master/doc/taskFactories.md#task-collection>`_ - tasks are explicitly defined as a part of the job
  + `Parametric Sweep <https://github.com/Azure/azure-batch-cli-extensions/blob/master/doc/taskFactories.md#parametric-sweep>`_ - a set of tasks are created by substituting a range or sequence of values into a template 
  + `Per File <https://github.com/Azure/azure-batch-cli-extensions/blob/master/doc/taskFactories.md#task-per-file>`_ - a template task is replicated for each available input file 


- `Split job configuration and management with reusable application templates <https://github.com/Azure/azure-batch-cli-extensions/blob/master/doc/application-templates.md>`_

  Application templates provide a way to partition the details of a job into two parts.
  All of the details about how the job should be processed are moved into the **application template**, creating a reusable definition that is independent of a particular account. Application templates are parameterized to allow the processing to be customized without requiring modification of the template itself.


- `Easy software installation via package managers <https://github.com/Azure/azure-batch-cli-extensions/blob/master/doc/packages.md>`_

  Integration with existing 3rd party package managers to streamline the installation of applications. Currently the following package managers are supported:

  + Chocolatey - for Windows
  + APT - as used by some Linux distros including Ubuntu, Debian, and Fedora. 
  + Yum - a package manager used by some Linux distros including  Red Hat Enterprise Linux, Fedora, CentOS. 


Samples
-------

Samples for all of the preview features can be `found in samples <https://github.com/Azure/azure-batch-cli-extensions/blob/master/samples>`_.


SDK Installation
----------------

.. code-block:: bash

    $ pip install azure-batch-extensions


CLI Extensions Installation
---------------------------

In order to make use of these features, you must have the Azure CLI installed.
You can find futher instructions in `the official documentation <https://docs.microsoft.com/en-us/cli/azure/install-azure-cli>`_ and in the
`Azure CLI GitHub repository <https://github.com/azure/azure-cli>`_.

This extension package can be installed to supplement the existing Azure CLI Batch commands.
It can be installed using the CLI extension tools (recommended):

.. code-block:: bash

    $ az extension add -n azure-batch-cli-extensions

Each release of the CLI ships with a specific version of the azure-batch-cli-extensions.  This is considered the official version for the CLI release.
If you would like to install a different version you can specify any release listed at https://github.com/Azure/azure-batch-cli-extensions/releases/.
To add a specific extension version and pin to it:

.. code-block:: bash

    $ az extension add --source https://github.com/Azure/azure-batch-cli-extensions/releases/download/azure-batch-cli-extensions-x.x.x/azure_batch_cli_extensions-x.x.x-py2.py3-none-any.whl


Uninstall CLI extensions
------------------------

The CLI extensions can be removed using the `az extension remove` command:

.. code-block:: bash

	$ az extension remove -n azure-batch-cli-extensions


Azure Batch account requirements
--------------------------------

In order to make use of the new features previewed here, you will need an Azure Batch account with a linked storage account.
For more information on this, see `Create an Azure Batch account using the Azure Portal <https://azure.microsoft.com/documentation/articles/batch-account-create-portal>`_.

Contributing
------------

This project has adopted the `Microsoft Open Source Code of Conduct <https://opensource.microsoft.com/codeofconduct/>`_. For more information see the `Code of Conduct FAQ <https://opensource.microsoft.com/codeofconduct/faq/>`_ or contact `opencode@microsoft.com <mailto:opencode@microsoft.com>`_ with any additional questions or comments.

Developer Installation
----------------------

Preparing your machine
++++++++++++++++++++++
1.	Install Python 3.5.x from http://python.org. Please note that the version of Python that comes preinstalled on OSX is 2.7. 
2.	Clone your repository and check out the master branch.
3.	Create a new virtual environment “env” for Python 3.5 in the root of your clone. You can do this by running:

    **Windows**

    .. code-block:: bash

        python -m venv <clone root>\env

    **OSX/Ubuntu (bash)**

    .. code-block:: bash

        python –m venv <clone root>/env

4.	Activate the env virtual environment by running:

    **Windows**

    .. code-block:: bash

      <clone root>\env\scripts\activate.bat

    **OSX/Ubuntu (bash)**

    .. code-block:: bash

      . <clone root>/env/bin/activate

5.	Install the dependencies and load the command module as a local package using pip.

  .. code-block:: bash

    python scripts/dev_setup.py


.. :changelog:

SDK Release History
===================

8.0.0 (2020-06-15)
------------------

* Update to match latest Python SDK taking associated breaking changes.

7.0.0 (2019-08-20)
------------------

* Update to match latest Python SDK taking associated breaking changes.
* Add support in template parsing to support ARM object syntax.

6.0.1 (2019-06-20)
------------------

* Align to Python SDK for breaking changes to shared models

5.0.5 (2019-02-25)
------------------

* Fix bug in blobSource conversion to httpUrl

5.0.4 (2019-02-25)
------------------

* Fix bug where specifying a mergeTask in a template would cause task add failures.

5.0.3 (2019-02-19)
------------------

* Fix bug where blobSource was no longer an attribute of ExtendedResourceFile
* Improve test coverage

5.0.2 (2019-02-15)
------------------

* Fix bug where apiVersion became required

5.0.1 (2019-02-15)
------------------

* Fix bug where knack.get_logger was used instead of logging.getLogger

5.0.0 (2019-02-01)
------------------

* Align to Python SDK for breaking changes to shared models
* This also includes collapsing all models into one models file. Models should now be imported from the models namespace and not from their individual files.

4.0.2 (2018-10-06)
------------------

* Move `ExtendedTaskOperation` feature to standard Azure Batch SDK

4.0.1 (2018-10-04)
------------------

* Clean up code to meet Python standards

4.0.0 (2018-08-29)
------------------

* **Breaking** Model signatures are now using only keywords-arguments syntax. Each positional argument must be rewritten as a keyword argument.

3.1.2 (2018-08-22)
------------------

* Fix bug related to mis-configured endpoints for storage operations.

3.1.1 (2018-7-19)
------------------

* Enable using cloud shell AAD token for extension SDK
* Fix bug on using default thread count to submit tasks on the machine with odd number CPU cores

3.1.0 (2018-7-17)
------------------

* Align to Python SDK for shared models

3.0.0 (2018-6-20)
------------------

* Update add_collection function of ExtendedTaskOperations to retry failed requests due to server errors.
* Update add_collection function of ExtendedTaskOperations to track failed requests due to client errors and raise a CreateTasksErrorException if any occured.
* Elements of input template/json can be case insensitive.
* Escape in parameter json file doesn't need double escape.
* The callback of file operations include file name.

2.0.0 (2018-6-1)
------------------

* Rename the namespace to azext.batch

1.1.2 (2018-5-21)
------------------

* Update add_collection function of ExtendedTaskOperations to handle RequestBodyTooLarge error for well behaved tasks.
* Update add_collection function of ExtendedTaskOperations to enable degrees of parallelism.

1.1.1 (2018-4-10)
------------------

* Using azure-storage-blob as dependency
* Expand template only accept JSON dictionary object
* Minor bugs fix

1.0.1 (2017-10-10)
------------------

* Better support for unicode in Python 2.7

1.0.0 (2017-10-03)
------------------

* Support for Batch SDK version 4.0
* Added support for extended common_resource_files in MultiInstanceSettings
* Added support for native containers in tasks (including RepeatTask in a task factory)

0.2.0 (2017-07-29)
------------------

* Support for Batch SDK version 3.1 
* Fix bug with pool OS version detection
* Download from file group now supports prefix
* Support detection of Linux command using /bin/sh

0.1.1 (2017-07-10)
------------------

* Fix to support azure-cli-core v2.0.11


0.1.0 (2017-06-28)
------------------

* Initial preview release.



