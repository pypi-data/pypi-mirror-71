# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from . import utilities, tables

class GetSyntheticsMonitorResult:
    """
    A collection of values returned by getSyntheticsMonitor.
    """
    def __init__(__self__, monitor_id=None, name=None, id=None):
        if monitor_id and not isinstance(monitor_id, str):
            raise TypeError('Expected argument monitor_id to be a str')
        __self__.monitor_id = monitor_id
        if name and not isinstance(name, str):
            raise TypeError('Expected argument name to be a str')
        __self__.name = name
        if id and not isinstance(id, str):
            raise TypeError('Expected argument id to be a str')
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """

async def get_synthetics_monitor(name=None,opts=None):
    """
    Use this data source to get information about a specific synthetics monitor in New Relic. This can then be used to set up a synthetics alert condition.
    """
    __args__ = dict()

    __args__['name'] = name
    __ret__ = await pulumi.runtime.invoke('newrelic:index/getSyntheticsMonitor:getSyntheticsMonitor', __args__, opts=opts)

    return GetSyntheticsMonitorResult(
        monitor_id=__ret__.get('monitorId'),
        name=__ret__.get('name'),
        id=__ret__.get('id'))
