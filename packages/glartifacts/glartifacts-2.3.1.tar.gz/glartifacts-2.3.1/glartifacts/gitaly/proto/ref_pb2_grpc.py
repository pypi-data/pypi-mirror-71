# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import ref_pb2 as ref__pb2


class RefServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.FindDefaultBranchName = channel.unary_unary(
        '/gitaly.RefService/FindDefaultBranchName',
        request_serializer=ref__pb2.FindDefaultBranchNameRequest.SerializeToString,
        response_deserializer=ref__pb2.FindDefaultBranchNameResponse.FromString,
        )
    self.FindAllBranchNames = channel.unary_stream(
        '/gitaly.RefService/FindAllBranchNames',
        request_serializer=ref__pb2.FindAllBranchNamesRequest.SerializeToString,
        response_deserializer=ref__pb2.FindAllBranchNamesResponse.FromString,
        )
    self.FindAllTagNames = channel.unary_stream(
        '/gitaly.RefService/FindAllTagNames',
        request_serializer=ref__pb2.FindAllTagNamesRequest.SerializeToString,
        response_deserializer=ref__pb2.FindAllTagNamesResponse.FromString,
        )
    self.FindRefName = channel.unary_unary(
        '/gitaly.RefService/FindRefName',
        request_serializer=ref__pb2.FindRefNameRequest.SerializeToString,
        response_deserializer=ref__pb2.FindRefNameResponse.FromString,
        )
    self.FindLocalBranches = channel.unary_stream(
        '/gitaly.RefService/FindLocalBranches',
        request_serializer=ref__pb2.FindLocalBranchesRequest.SerializeToString,
        response_deserializer=ref__pb2.FindLocalBranchesResponse.FromString,
        )
    self.FindAllBranches = channel.unary_stream(
        '/gitaly.RefService/FindAllBranches',
        request_serializer=ref__pb2.FindAllBranchesRequest.SerializeToString,
        response_deserializer=ref__pb2.FindAllBranchesResponse.FromString,
        )
    self.FindAllTags = channel.unary_stream(
        '/gitaly.RefService/FindAllTags',
        request_serializer=ref__pb2.FindAllTagsRequest.SerializeToString,
        response_deserializer=ref__pb2.FindAllTagsResponse.FromString,
        )
    self.FindAllRemoteBranches = channel.unary_stream(
        '/gitaly.RefService/FindAllRemoteBranches',
        request_serializer=ref__pb2.FindAllRemoteBranchesRequest.SerializeToString,
        response_deserializer=ref__pb2.FindAllRemoteBranchesResponse.FromString,
        )
    self.RefExists = channel.unary_unary(
        '/gitaly.RefService/RefExists',
        request_serializer=ref__pb2.RefExistsRequest.SerializeToString,
        response_deserializer=ref__pb2.RefExistsResponse.FromString,
        )
    self.CreateBranch = channel.unary_unary(
        '/gitaly.RefService/CreateBranch',
        request_serializer=ref__pb2.CreateBranchRequest.SerializeToString,
        response_deserializer=ref__pb2.CreateBranchResponse.FromString,
        )
    self.DeleteBranch = channel.unary_unary(
        '/gitaly.RefService/DeleteBranch',
        request_serializer=ref__pb2.DeleteBranchRequest.SerializeToString,
        response_deserializer=ref__pb2.DeleteBranchResponse.FromString,
        )
    self.FindBranch = channel.unary_unary(
        '/gitaly.RefService/FindBranch',
        request_serializer=ref__pb2.FindBranchRequest.SerializeToString,
        response_deserializer=ref__pb2.FindBranchResponse.FromString,
        )
    self.DeleteRefs = channel.unary_unary(
        '/gitaly.RefService/DeleteRefs',
        request_serializer=ref__pb2.DeleteRefsRequest.SerializeToString,
        response_deserializer=ref__pb2.DeleteRefsResponse.FromString,
        )
    self.ListBranchNamesContainingCommit = channel.unary_stream(
        '/gitaly.RefService/ListBranchNamesContainingCommit',
        request_serializer=ref__pb2.ListBranchNamesContainingCommitRequest.SerializeToString,
        response_deserializer=ref__pb2.ListBranchNamesContainingCommitResponse.FromString,
        )
    self.ListTagNamesContainingCommit = channel.unary_stream(
        '/gitaly.RefService/ListTagNamesContainingCommit',
        request_serializer=ref__pb2.ListTagNamesContainingCommitRequest.SerializeToString,
        response_deserializer=ref__pb2.ListTagNamesContainingCommitResponse.FromString,
        )
    self.GetTagMessages = channel.unary_stream(
        '/gitaly.RefService/GetTagMessages',
        request_serializer=ref__pb2.GetTagMessagesRequest.SerializeToString,
        response_deserializer=ref__pb2.GetTagMessagesResponse.FromString,
        )
    self.ListNewCommits = channel.unary_stream(
        '/gitaly.RefService/ListNewCommits',
        request_serializer=ref__pb2.ListNewCommitsRequest.SerializeToString,
        response_deserializer=ref__pb2.ListNewCommitsResponse.FromString,
        )
    self.ListNewBlobs = channel.unary_stream(
        '/gitaly.RefService/ListNewBlobs',
        request_serializer=ref__pb2.ListNewBlobsRequest.SerializeToString,
        response_deserializer=ref__pb2.ListNewBlobsResponse.FromString,
        )


class RefServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def FindDefaultBranchName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FindAllBranchNames(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FindAllTagNames(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FindRefName(self, request, context):
    """Find a Ref matching the given constraints. Response may be empty.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FindLocalBranches(self, request, context):
    """Return a stream so we can divide the response in chunks of branches
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FindAllBranches(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FindAllTags(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FindAllRemoteBranches(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RefExists(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateBranch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteBranch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FindBranch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteRefs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListBranchNamesContainingCommit(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListTagNamesContainingCommit(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTagMessages(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListNewCommits(self, request, context):
    """Returns commits that are only reachable from the ref passed
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListNewBlobs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RefServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'FindDefaultBranchName': grpc.unary_unary_rpc_method_handler(
          servicer.FindDefaultBranchName,
          request_deserializer=ref__pb2.FindDefaultBranchNameRequest.FromString,
          response_serializer=ref__pb2.FindDefaultBranchNameResponse.SerializeToString,
      ),
      'FindAllBranchNames': grpc.unary_stream_rpc_method_handler(
          servicer.FindAllBranchNames,
          request_deserializer=ref__pb2.FindAllBranchNamesRequest.FromString,
          response_serializer=ref__pb2.FindAllBranchNamesResponse.SerializeToString,
      ),
      'FindAllTagNames': grpc.unary_stream_rpc_method_handler(
          servicer.FindAllTagNames,
          request_deserializer=ref__pb2.FindAllTagNamesRequest.FromString,
          response_serializer=ref__pb2.FindAllTagNamesResponse.SerializeToString,
      ),
      'FindRefName': grpc.unary_unary_rpc_method_handler(
          servicer.FindRefName,
          request_deserializer=ref__pb2.FindRefNameRequest.FromString,
          response_serializer=ref__pb2.FindRefNameResponse.SerializeToString,
      ),
      'FindLocalBranches': grpc.unary_stream_rpc_method_handler(
          servicer.FindLocalBranches,
          request_deserializer=ref__pb2.FindLocalBranchesRequest.FromString,
          response_serializer=ref__pb2.FindLocalBranchesResponse.SerializeToString,
      ),
      'FindAllBranches': grpc.unary_stream_rpc_method_handler(
          servicer.FindAllBranches,
          request_deserializer=ref__pb2.FindAllBranchesRequest.FromString,
          response_serializer=ref__pb2.FindAllBranchesResponse.SerializeToString,
      ),
      'FindAllTags': grpc.unary_stream_rpc_method_handler(
          servicer.FindAllTags,
          request_deserializer=ref__pb2.FindAllTagsRequest.FromString,
          response_serializer=ref__pb2.FindAllTagsResponse.SerializeToString,
      ),
      'FindAllRemoteBranches': grpc.unary_stream_rpc_method_handler(
          servicer.FindAllRemoteBranches,
          request_deserializer=ref__pb2.FindAllRemoteBranchesRequest.FromString,
          response_serializer=ref__pb2.FindAllRemoteBranchesResponse.SerializeToString,
      ),
      'RefExists': grpc.unary_unary_rpc_method_handler(
          servicer.RefExists,
          request_deserializer=ref__pb2.RefExistsRequest.FromString,
          response_serializer=ref__pb2.RefExistsResponse.SerializeToString,
      ),
      'CreateBranch': grpc.unary_unary_rpc_method_handler(
          servicer.CreateBranch,
          request_deserializer=ref__pb2.CreateBranchRequest.FromString,
          response_serializer=ref__pb2.CreateBranchResponse.SerializeToString,
      ),
      'DeleteBranch': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteBranch,
          request_deserializer=ref__pb2.DeleteBranchRequest.FromString,
          response_serializer=ref__pb2.DeleteBranchResponse.SerializeToString,
      ),
      'FindBranch': grpc.unary_unary_rpc_method_handler(
          servicer.FindBranch,
          request_deserializer=ref__pb2.FindBranchRequest.FromString,
          response_serializer=ref__pb2.FindBranchResponse.SerializeToString,
      ),
      'DeleteRefs': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteRefs,
          request_deserializer=ref__pb2.DeleteRefsRequest.FromString,
          response_serializer=ref__pb2.DeleteRefsResponse.SerializeToString,
      ),
      'ListBranchNamesContainingCommit': grpc.unary_stream_rpc_method_handler(
          servicer.ListBranchNamesContainingCommit,
          request_deserializer=ref__pb2.ListBranchNamesContainingCommitRequest.FromString,
          response_serializer=ref__pb2.ListBranchNamesContainingCommitResponse.SerializeToString,
      ),
      'ListTagNamesContainingCommit': grpc.unary_stream_rpc_method_handler(
          servicer.ListTagNamesContainingCommit,
          request_deserializer=ref__pb2.ListTagNamesContainingCommitRequest.FromString,
          response_serializer=ref__pb2.ListTagNamesContainingCommitResponse.SerializeToString,
      ),
      'GetTagMessages': grpc.unary_stream_rpc_method_handler(
          servicer.GetTagMessages,
          request_deserializer=ref__pb2.GetTagMessagesRequest.FromString,
          response_serializer=ref__pb2.GetTagMessagesResponse.SerializeToString,
      ),
      'ListNewCommits': grpc.unary_stream_rpc_method_handler(
          servicer.ListNewCommits,
          request_deserializer=ref__pb2.ListNewCommitsRequest.FromString,
          response_serializer=ref__pb2.ListNewCommitsResponse.SerializeToString,
      ),
      'ListNewBlobs': grpc.unary_stream_rpc_method_handler(
          servicer.ListNewBlobs,
          request_deserializer=ref__pb2.ListNewBlobsRequest.FromString,
          response_serializer=ref__pb2.ListNewBlobsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'gitaly.RefService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
