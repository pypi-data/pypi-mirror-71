# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import ssh_pb2 as ssh__pb2


class SSHServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SSHUploadPack = channel.stream_stream(
        '/gitaly.SSHService/SSHUploadPack',
        request_serializer=ssh__pb2.SSHUploadPackRequest.SerializeToString,
        response_deserializer=ssh__pb2.SSHUploadPackResponse.FromString,
        )
    self.SSHReceivePack = channel.stream_stream(
        '/gitaly.SSHService/SSHReceivePack',
        request_serializer=ssh__pb2.SSHReceivePackRequest.SerializeToString,
        response_deserializer=ssh__pb2.SSHReceivePackResponse.FromString,
        )
    self.SSHUploadArchive = channel.stream_stream(
        '/gitaly.SSHService/SSHUploadArchive',
        request_serializer=ssh__pb2.SSHUploadArchiveRequest.SerializeToString,
        response_deserializer=ssh__pb2.SSHUploadArchiveResponse.FromString,
        )


class SSHServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SSHUploadPack(self, request_iterator, context):
    """To forward 'git upload-pack' to Gitaly for SSH sessions
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SSHReceivePack(self, request_iterator, context):
    """To forward 'git receive-pack' to Gitaly for SSH sessions
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SSHUploadArchive(self, request_iterator, context):
    """To forward 'git upload-archive' to Gitaly for SSH sessions
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SSHServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SSHUploadPack': grpc.stream_stream_rpc_method_handler(
          servicer.SSHUploadPack,
          request_deserializer=ssh__pb2.SSHUploadPackRequest.FromString,
          response_serializer=ssh__pb2.SSHUploadPackResponse.SerializeToString,
      ),
      'SSHReceivePack': grpc.stream_stream_rpc_method_handler(
          servicer.SSHReceivePack,
          request_deserializer=ssh__pb2.SSHReceivePackRequest.FromString,
          response_serializer=ssh__pb2.SSHReceivePackResponse.SerializeToString,
      ),
      'SSHUploadArchive': grpc.stream_stream_rpc_method_handler(
          servicer.SSHUploadArchive,
          request_deserializer=ssh__pb2.SSHUploadArchiveRequest.FromString,
          response_serializer=ssh__pb2.SSHUploadArchiveResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'gitaly.SSHService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
