# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import namespace_pb2 as namespace__pb2


class NamespaceServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddNamespace = channel.unary_unary(
        '/gitaly.NamespaceService/AddNamespace',
        request_serializer=namespace__pb2.AddNamespaceRequest.SerializeToString,
        response_deserializer=namespace__pb2.AddNamespaceResponse.FromString,
        )
    self.RemoveNamespace = channel.unary_unary(
        '/gitaly.NamespaceService/RemoveNamespace',
        request_serializer=namespace__pb2.RemoveNamespaceRequest.SerializeToString,
        response_deserializer=namespace__pb2.RemoveNamespaceResponse.FromString,
        )
    self.RenameNamespace = channel.unary_unary(
        '/gitaly.NamespaceService/RenameNamespace',
        request_serializer=namespace__pb2.RenameNamespaceRequest.SerializeToString,
        response_deserializer=namespace__pb2.RenameNamespaceResponse.FromString,
        )
    self.NamespaceExists = channel.unary_unary(
        '/gitaly.NamespaceService/NamespaceExists',
        request_serializer=namespace__pb2.NamespaceExistsRequest.SerializeToString,
        response_deserializer=namespace__pb2.NamespaceExistsResponse.FromString,
        )


class NamespaceServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def AddNamespace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoveNamespace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RenameNamespace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NamespaceExists(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NamespaceServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddNamespace': grpc.unary_unary_rpc_method_handler(
          servicer.AddNamespace,
          request_deserializer=namespace__pb2.AddNamespaceRequest.FromString,
          response_serializer=namespace__pb2.AddNamespaceResponse.SerializeToString,
      ),
      'RemoveNamespace': grpc.unary_unary_rpc_method_handler(
          servicer.RemoveNamespace,
          request_deserializer=namespace__pb2.RemoveNamespaceRequest.FromString,
          response_serializer=namespace__pb2.RemoveNamespaceResponse.SerializeToString,
      ),
      'RenameNamespace': grpc.unary_unary_rpc_method_handler(
          servicer.RenameNamespace,
          request_deserializer=namespace__pb2.RenameNamespaceRequest.FromString,
          response_serializer=namespace__pb2.RenameNamespaceResponse.SerializeToString,
      ),
      'NamespaceExists': grpc.unary_unary_rpc_method_handler(
          servicer.NamespaceExists,
          request_deserializer=namespace__pb2.NamespaceExistsRequest.FromString,
          response_serializer=namespace__pb2.NamespaceExistsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'gitaly.NamespaceService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
