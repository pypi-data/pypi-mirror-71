from typing import Union

Datum = Union[str, float]


def _compress(d: dict): return {k: v for k, v in d.items() if v is not None}


def plot(
        coord: str = None,
        mark: str = None,
        x: Datum = None,
        x0: Datum = None,
        x1: Datum = None,
        x2: Datum = None,
        x_scale: str = None,
        x_title: str = None,
        x_min: Datum = None,
        x_max: Datum = None,
        x_nice: bool = None,
        y: Datum = None,
        y0: Datum = None,
        y1: Datum = None,
        y2: Datum = None,
        y_scale: str = None,
        y_title: str = None,
        y_min: Datum = None,
        y_max: Datum = None,
        y_nice: bool = None,
        color_range: str = None,
        color: str = None,
        fill_color: str = None,
        fill_opacity: float = None,
        stroke_color: str = None,
        stroke_opacity: float = None,
        stroke_size: float = None,
        stroke_dash: str = None,
        shape_range: str = None,
        shape: str = None,
        size_range: str = None,
        size: Datum = None,
        curve: str = None,
        stack: str = None,
        dodge: str = None,
        label: str = None,
        label_offset: float = None,
        label_offset_x: float = None,
        label_offset_y: float = None,
        label_rotation: Datum = None,  # 'none', 'auto', value
        label_position: str = None,
        label_overlap: str = None,
        label_fill_color: str = None,
        label_fill_opacity: float = None,
        label_stroke_color: str = None,
        label_stroke_opacity: float = None,
        label_stroke_size: float = None,
        label_font_size: float = None,
        label_font_weight: Datum = None,
        label_line_height: float = None,
        label_align: str = None,
        ref_stroke_color: str = None,
        ref_stroke_opacity: float = None,
        ref_stroke_size: float = None,
        ref_stroke_dash: str = None,
):
    return [_compress(dict(
        coord=coord,
        mark=mark,
        x=x,
        x0=x0,
        x1=x1,
        x2=x2,
        x_scale=x_scale,
        x_title=x_title,
        x_min=x_min,
        x_max=x_max,
        x_nice=x_nice,
        y=y,
        y0=y0,
        y1=y1,
        y2=y2,
        y_scale=y_scale,
        y_title=y_title,
        y_min=y_min,
        y_max=y_max,
        y_nice=y_nice,
        color_range=color_range,
        color=color,
        fill_color=fill_color,
        fill_opacity=fill_opacity,
        stroke_color=stroke_color,
        stroke_opacity=stroke_opacity,
        stroke_size=stroke_size,
        stroke_dash=stroke_dash,
        shape_range=shape_range,
        shape=shape,
        size_range=size_range,
        size=size,
        curve=curve,
        stack=stack,
        dodge=dodge,
        label=label,
        label_offset=label_offset,
        label_offset_x=label_offset_x,
        label_offset_y=label_offset_y,
        label_rotation=label_rotation,
        label_position=label_position,
        label_overlap=label_overlap,
        label_fill_color=label_fill_color,
        label_fill_opacity=label_fill_opacity,
        label_stroke_color=label_stroke_color,
        label_stroke_opacity=label_stroke_opacity,
        label_stroke_size=label_stroke_size,
        label_font_size=label_font_size,
        label_font_weight=label_font_weight,
        label_line_height=label_line_height,
        label_align=label_align,
        ref_stroke_color=ref_stroke_color,
        ref_stroke_opacity=ref_stroke_opacity,
        ref_stroke_size=ref_stroke_size,
        ref_stroke_dash=ref_stroke_dash,
    ))]
