# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _TubeTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeConvertImagesToCSVFilterPython
else:
    import _tubeConvertImagesToCSVFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _tubeConvertImagesToCSVFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _tubeConvertImagesToCSVFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImagePython
import itk.itkFixedArrayPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython

def tubeConvertImagesToCSVID2ISS2_New():
    return tubeConvertImagesToCSVID2ISS2.New()

class tubeConvertImagesToCSVID2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID2ISS2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID2ISS2

        Create a new object of the class tubeConvertImagesToCSVID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID2ISS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_swigregister(tubeConvertImagesToCSVID2ISS2)
tubeConvertImagesToCSVID2ISS2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2___New_orig__
tubeConvertImagesToCSVID2ISS2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_cast


def tubeConvertImagesToCSVID2IUC2_New():
    return tubeConvertImagesToCSVID2IUC2.New()

class tubeConvertImagesToCSVID2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID2IUC2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID2IUC2

        Create a new object of the class tubeConvertImagesToCSVID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID2IUC2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_swigregister(tubeConvertImagesToCSVID2IUC2)
tubeConvertImagesToCSVID2IUC2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2___New_orig__
tubeConvertImagesToCSVID2IUC2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_cast


def tubeConvertImagesToCSVID2IUS2_New():
    return tubeConvertImagesToCSVID2IUS2.New()

class tubeConvertImagesToCSVID2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID2IUS2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID2IUS2

        Create a new object of the class tubeConvertImagesToCSVID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID2IUS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_swigregister(tubeConvertImagesToCSVID2IUS2)
tubeConvertImagesToCSVID2IUS2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2___New_orig__
tubeConvertImagesToCSVID2IUS2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_cast


def tubeConvertImagesToCSVID3ISS3_New():
    return tubeConvertImagesToCSVID3ISS3.New()

class tubeConvertImagesToCSVID3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID3ISS3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID3ISS3

        Create a new object of the class tubeConvertImagesToCSVID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID3ISS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_swigregister(tubeConvertImagesToCSVID3ISS3)
tubeConvertImagesToCSVID3ISS3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3___New_orig__
tubeConvertImagesToCSVID3ISS3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_cast


def tubeConvertImagesToCSVID3IUC3_New():
    return tubeConvertImagesToCSVID3IUC3.New()

class tubeConvertImagesToCSVID3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID3IUC3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID3IUC3

        Create a new object of the class tubeConvertImagesToCSVID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID3IUC3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_swigregister(tubeConvertImagesToCSVID3IUC3)
tubeConvertImagesToCSVID3IUC3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3___New_orig__
tubeConvertImagesToCSVID3IUC3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_cast


def tubeConvertImagesToCSVID3IUS3_New():
    return tubeConvertImagesToCSVID3IUS3.New()

class tubeConvertImagesToCSVID3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID3IUS3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID3IUS3

        Create a new object of the class tubeConvertImagesToCSVID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID3IUS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_swigregister(tubeConvertImagesToCSVID3IUS3)
tubeConvertImagesToCSVID3IUS3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3___New_orig__
tubeConvertImagesToCSVID3IUS3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_cast


def tubeConvertImagesToCSVIF2ISS2_New():
    return tubeConvertImagesToCSVIF2ISS2.New()

class tubeConvertImagesToCSVIF2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF2ISS2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF2ISS2

        Create a new object of the class tubeConvertImagesToCSVIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF2ISS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_swigregister(tubeConvertImagesToCSVIF2ISS2)
tubeConvertImagesToCSVIF2ISS2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2___New_orig__
tubeConvertImagesToCSVIF2ISS2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_cast


def tubeConvertImagesToCSVIF2IUC2_New():
    return tubeConvertImagesToCSVIF2IUC2.New()

class tubeConvertImagesToCSVIF2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF2IUC2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF2IUC2

        Create a new object of the class tubeConvertImagesToCSVIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF2IUC2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_swigregister(tubeConvertImagesToCSVIF2IUC2)
tubeConvertImagesToCSVIF2IUC2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2___New_orig__
tubeConvertImagesToCSVIF2IUC2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_cast


def tubeConvertImagesToCSVIF2IUS2_New():
    return tubeConvertImagesToCSVIF2IUS2.New()

class tubeConvertImagesToCSVIF2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF2IUS2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF2IUS2

        Create a new object of the class tubeConvertImagesToCSVIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF2IUS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_swigregister(tubeConvertImagesToCSVIF2IUS2)
tubeConvertImagesToCSVIF2IUS2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2___New_orig__
tubeConvertImagesToCSVIF2IUS2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_cast


def tubeConvertImagesToCSVIF3ISS3_New():
    return tubeConvertImagesToCSVIF3ISS3.New()

class tubeConvertImagesToCSVIF3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF3ISS3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF3ISS3

        Create a new object of the class tubeConvertImagesToCSVIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF3ISS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_swigregister(tubeConvertImagesToCSVIF3ISS3)
tubeConvertImagesToCSVIF3ISS3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3___New_orig__
tubeConvertImagesToCSVIF3ISS3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_cast


def tubeConvertImagesToCSVIF3IUC3_New():
    return tubeConvertImagesToCSVIF3IUC3.New()

class tubeConvertImagesToCSVIF3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF3IUC3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF3IUC3

        Create a new object of the class tubeConvertImagesToCSVIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF3IUC3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_swigregister(tubeConvertImagesToCSVIF3IUC3)
tubeConvertImagesToCSVIF3IUC3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3___New_orig__
tubeConvertImagesToCSVIF3IUC3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_cast


def tubeConvertImagesToCSVIF3IUS3_New():
    return tubeConvertImagesToCSVIF3IUS3.New()

class tubeConvertImagesToCSVIF3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF3IUS3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF3IUS3

        Create a new object of the class tubeConvertImagesToCSVIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF3IUS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_swigregister(tubeConvertImagesToCSVIF3IUS3)
tubeConvertImagesToCSVIF3IUS3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3___New_orig__
tubeConvertImagesToCSVIF3IUS3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_cast


def tubeConvertImagesToCSVISS2ISS2_New():
    return tubeConvertImagesToCSVISS2ISS2.New()

class tubeConvertImagesToCSVISS2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS2ISS2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS2ISS2

        Create a new object of the class tubeConvertImagesToCSVISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS2ISS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_swigregister(tubeConvertImagesToCSVISS2ISS2)
tubeConvertImagesToCSVISS2ISS2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2___New_orig__
tubeConvertImagesToCSVISS2ISS2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_cast


def tubeConvertImagesToCSVISS2IUC2_New():
    return tubeConvertImagesToCSVISS2IUC2.New()

class tubeConvertImagesToCSVISS2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS2IUC2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS2IUC2

        Create a new object of the class tubeConvertImagesToCSVISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS2IUC2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_swigregister(tubeConvertImagesToCSVISS2IUC2)
tubeConvertImagesToCSVISS2IUC2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2___New_orig__
tubeConvertImagesToCSVISS2IUC2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_cast


def tubeConvertImagesToCSVISS2IUS2_New():
    return tubeConvertImagesToCSVISS2IUS2.New()

class tubeConvertImagesToCSVISS2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS2IUS2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS2IUS2

        Create a new object of the class tubeConvertImagesToCSVISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS2IUS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_swigregister(tubeConvertImagesToCSVISS2IUS2)
tubeConvertImagesToCSVISS2IUS2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2___New_orig__
tubeConvertImagesToCSVISS2IUS2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_cast


def tubeConvertImagesToCSVISS3ISS3_New():
    return tubeConvertImagesToCSVISS3ISS3.New()

class tubeConvertImagesToCSVISS3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS3ISS3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS3ISS3

        Create a new object of the class tubeConvertImagesToCSVISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS3ISS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_swigregister(tubeConvertImagesToCSVISS3ISS3)
tubeConvertImagesToCSVISS3ISS3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3___New_orig__
tubeConvertImagesToCSVISS3ISS3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_cast


def tubeConvertImagesToCSVISS3IUC3_New():
    return tubeConvertImagesToCSVISS3IUC3.New()

class tubeConvertImagesToCSVISS3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS3IUC3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS3IUC3

        Create a new object of the class tubeConvertImagesToCSVISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS3IUC3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_swigregister(tubeConvertImagesToCSVISS3IUC3)
tubeConvertImagesToCSVISS3IUC3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3___New_orig__
tubeConvertImagesToCSVISS3IUC3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_cast


def tubeConvertImagesToCSVISS3IUS3_New():
    return tubeConvertImagesToCSVISS3IUS3.New()

class tubeConvertImagesToCSVISS3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS3IUS3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS3IUS3

        Create a new object of the class tubeConvertImagesToCSVISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS3IUS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_swigregister(tubeConvertImagesToCSVISS3IUS3)
tubeConvertImagesToCSVISS3IUS3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3___New_orig__
tubeConvertImagesToCSVISS3IUS3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_cast


def tubeConvertImagesToCSVIUC2ISS2_New():
    return tubeConvertImagesToCSVIUC2ISS2.New()

class tubeConvertImagesToCSVIUC2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC2ISS2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC2ISS2

        Create a new object of the class tubeConvertImagesToCSVIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC2ISS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_swigregister(tubeConvertImagesToCSVIUC2ISS2)
tubeConvertImagesToCSVIUC2ISS2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2___New_orig__
tubeConvertImagesToCSVIUC2ISS2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_cast


def tubeConvertImagesToCSVIUC2IUC2_New():
    return tubeConvertImagesToCSVIUC2IUC2.New()

class tubeConvertImagesToCSVIUC2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC2IUC2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC2IUC2

        Create a new object of the class tubeConvertImagesToCSVIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC2IUC2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_swigregister(tubeConvertImagesToCSVIUC2IUC2)
tubeConvertImagesToCSVIUC2IUC2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2___New_orig__
tubeConvertImagesToCSVIUC2IUC2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_cast


def tubeConvertImagesToCSVIUC2IUS2_New():
    return tubeConvertImagesToCSVIUC2IUS2.New()

class tubeConvertImagesToCSVIUC2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC2IUS2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC2IUS2

        Create a new object of the class tubeConvertImagesToCSVIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC2IUS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_swigregister(tubeConvertImagesToCSVIUC2IUS2)
tubeConvertImagesToCSVIUC2IUS2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2___New_orig__
tubeConvertImagesToCSVIUC2IUS2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_cast


def tubeConvertImagesToCSVIUC3ISS3_New():
    return tubeConvertImagesToCSVIUC3ISS3.New()

class tubeConvertImagesToCSVIUC3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC3ISS3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC3ISS3

        Create a new object of the class tubeConvertImagesToCSVIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC3ISS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_swigregister(tubeConvertImagesToCSVIUC3ISS3)
tubeConvertImagesToCSVIUC3ISS3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3___New_orig__
tubeConvertImagesToCSVIUC3ISS3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_cast


def tubeConvertImagesToCSVIUC3IUC3_New():
    return tubeConvertImagesToCSVIUC3IUC3.New()

class tubeConvertImagesToCSVIUC3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC3IUC3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC3IUC3

        Create a new object of the class tubeConvertImagesToCSVIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC3IUC3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_swigregister(tubeConvertImagesToCSVIUC3IUC3)
tubeConvertImagesToCSVIUC3IUC3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3___New_orig__
tubeConvertImagesToCSVIUC3IUC3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_cast


def tubeConvertImagesToCSVIUC3IUS3_New():
    return tubeConvertImagesToCSVIUC3IUS3.New()

class tubeConvertImagesToCSVIUC3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC3IUS3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC3IUS3

        Create a new object of the class tubeConvertImagesToCSVIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC3IUS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_swigregister(tubeConvertImagesToCSVIUC3IUS3)
tubeConvertImagesToCSVIUC3IUS3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3___New_orig__
tubeConvertImagesToCSVIUC3IUS3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_cast


def tubeConvertImagesToCSVIUS2ISS2_New():
    return tubeConvertImagesToCSVIUS2ISS2.New()

class tubeConvertImagesToCSVIUS2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS2ISS2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS2ISS2

        Create a new object of the class tubeConvertImagesToCSVIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS2ISS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_swigregister(tubeConvertImagesToCSVIUS2ISS2)
tubeConvertImagesToCSVIUS2ISS2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2___New_orig__
tubeConvertImagesToCSVIUS2ISS2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_cast


def tubeConvertImagesToCSVIUS2IUC2_New():
    return tubeConvertImagesToCSVIUS2IUC2.New()

class tubeConvertImagesToCSVIUS2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS2IUC2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS2IUC2

        Create a new object of the class tubeConvertImagesToCSVIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS2IUC2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_swigregister(tubeConvertImagesToCSVIUS2IUC2)
tubeConvertImagesToCSVIUS2IUC2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2___New_orig__
tubeConvertImagesToCSVIUS2IUC2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_cast


def tubeConvertImagesToCSVIUS2IUS2_New():
    return tubeConvertImagesToCSVIUS2IUS2.New()

class tubeConvertImagesToCSVIUS2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS2IUS2
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS2IUS2

        Create a new object of the class tubeConvertImagesToCSVIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS2IUS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_swigregister(tubeConvertImagesToCSVIUS2IUS2)
tubeConvertImagesToCSVIUS2IUS2___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2___New_orig__
tubeConvertImagesToCSVIUS2IUS2_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_cast


def tubeConvertImagesToCSVIUS3ISS3_New():
    return tubeConvertImagesToCSVIUS3ISS3.New()

class tubeConvertImagesToCSVIUS3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS3ISS3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS3ISS3

        Create a new object of the class tubeConvertImagesToCSVIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS3ISS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_swigregister(tubeConvertImagesToCSVIUS3ISS3)
tubeConvertImagesToCSVIUS3ISS3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3___New_orig__
tubeConvertImagesToCSVIUS3ISS3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_cast


def tubeConvertImagesToCSVIUS3IUC3_New():
    return tubeConvertImagesToCSVIUS3IUC3.New()

class tubeConvertImagesToCSVIUS3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS3IUC3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS3IUC3

        Create a new object of the class tubeConvertImagesToCSVIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS3IUC3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_swigregister(tubeConvertImagesToCSVIUS3IUC3)
tubeConvertImagesToCSVIUS3IUC3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3___New_orig__
tubeConvertImagesToCSVIUS3IUC3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_cast


def tubeConvertImagesToCSVIUS3IUS3_New():
    return tubeConvertImagesToCSVIUS3IUS3.New()

class tubeConvertImagesToCSVIUS3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_Clone)
    SetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_SetInputMask)
    GetInputMask = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_GetInputMask)
    GetOutput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_GetOutput)
    GetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_GetStride)
    SetStride = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_SetStride)
    SetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_SetNumImages)
    GetNumImages = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_GetNumImages)
    SetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_SetNumberRows)
    GetNumberRows = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_GetNumberRows)
    SetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_GetInput)
    AddImage = _swig_new_instance_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_AddImage)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS3IUS3
    cast = _swig_new_static_method(_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS3IUS3

        Create a new object of the class tubeConvertImagesToCSVIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS3IUS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_swigregister(tubeConvertImagesToCSVIUS3IUS3)
tubeConvertImagesToCSVIUS3IUS3___New_orig__ = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3___New_orig__
tubeConvertImagesToCSVIUS3IUS3_cast = _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def convert_images_to_csv(*args, **kwargs):
    """Procedural interface for ConvertImagesToCSV"""
    import itk
    instance = itk.ConvertImagesToCSV.New(*args, **kwargs)
    return instance.__internal_call__()

def convert_images_to_csv_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ConvertImagesToCSV, itkTemplate.itkTemplate):
        filter_object = itk.ConvertImagesToCSV.values()[0]
    else:
        filter_object = itk.ConvertImagesToCSV

    convert_images_to_csv.__doc__ = filter_object.__doc__
    convert_images_to_csv.__doc__ += "\n Args are Input(s) to the filter.\n"
    convert_images_to_csv.__doc__ += "Available Keyword Arguments:\n"
    convert_images_to_csv.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



