# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _TubeTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeConvertTubesToImagePython
else:
    import _tubeConvertTubesToImagePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _tubeConvertTubesToImagePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _tubeConvertTubesToImagePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkSpatialObjectBasePython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkAffineTransformPython
import itk.itkTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.ITKCommonBasePython
import itk.itkArrayPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkBoundingBoxPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkMapContainerPython
import itk.itkImagePython
import itk.itkRGBPixelPython

def tubeConvertTubesToImageD2_New():
    return tubeConvertTubesToImageD2.New()

class tubeConvertTubesToImageD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToImageD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_Clone)
    SetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetUseRadius)
    GetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetUseRadius)
    SetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByTubeID)
    SetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByRadius)
    SetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByRidgeness)
    SetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByMedialness)
    SetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByBranchness)
    SetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByCurvature)
    SetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByLevelness)
    SetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByRoundness)
    SetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetColorByIntensity)
    GetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByTubeID)
    GetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByRadius)
    GetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByRidgeness)
    GetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByMedialness)
    GetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByBranchness)
    GetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByCurvature)
    GetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByLevelness)
    GetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByRoundness)
    GetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetColorByIntensity)
    SetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetTemplateImage)
    GetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetTemplateImage)
    SetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_GetOutput)
    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageD2
    cast = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageD2

        Create a new object of the class tubeConvertTubesToImageD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToImageD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToImageD2 in _tubeConvertTubesToImagePython:
_tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_swigregister(tubeConvertTubesToImageD2)
tubeConvertTubesToImageD2___New_orig__ = _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2___New_orig__
tubeConvertTubesToImageD2_cast = _tubeConvertTubesToImagePython.tubeConvertTubesToImageD2_cast


def tubeConvertTubesToImageD3_New():
    return tubeConvertTubesToImageD3.New()

class tubeConvertTubesToImageD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToImageD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_Clone)
    SetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetUseRadius)
    GetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetUseRadius)
    SetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByTubeID)
    SetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByRadius)
    SetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByRidgeness)
    SetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByMedialness)
    SetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByBranchness)
    SetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByCurvature)
    SetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByLevelness)
    SetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByRoundness)
    SetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetColorByIntensity)
    GetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByTubeID)
    GetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByRadius)
    GetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByRidgeness)
    GetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByMedialness)
    GetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByBranchness)
    GetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByCurvature)
    GetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByLevelness)
    GetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByRoundness)
    GetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetColorByIntensity)
    SetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetTemplateImage)
    GetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetTemplateImage)
    SetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_GetOutput)
    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageD3
    cast = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageD3

        Create a new object of the class tubeConvertTubesToImageD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToImageD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToImageD3 in _tubeConvertTubesToImagePython:
_tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_swigregister(tubeConvertTubesToImageD3)
tubeConvertTubesToImageD3___New_orig__ = _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3___New_orig__
tubeConvertTubesToImageD3_cast = _tubeConvertTubesToImagePython.tubeConvertTubesToImageD3_cast


def tubeConvertTubesToImageF2_New():
    return tubeConvertTubesToImageF2.New()

class tubeConvertTubesToImageF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToImageF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_Clone)
    SetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetUseRadius)
    GetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetUseRadius)
    SetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByTubeID)
    SetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByRadius)
    SetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByRidgeness)
    SetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByMedialness)
    SetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByBranchness)
    SetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByCurvature)
    SetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByLevelness)
    SetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByRoundness)
    SetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetColorByIntensity)
    GetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByTubeID)
    GetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByRadius)
    GetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByRidgeness)
    GetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByMedialness)
    GetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByBranchness)
    GetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByCurvature)
    GetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByLevelness)
    GetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByRoundness)
    GetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetColorByIntensity)
    SetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetTemplateImage)
    GetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetTemplateImage)
    SetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_GetOutput)
    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageF2
    cast = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageF2

        Create a new object of the class tubeConvertTubesToImageF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToImageF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToImageF2 in _tubeConvertTubesToImagePython:
_tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_swigregister(tubeConvertTubesToImageF2)
tubeConvertTubesToImageF2___New_orig__ = _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2___New_orig__
tubeConvertTubesToImageF2_cast = _tubeConvertTubesToImagePython.tubeConvertTubesToImageF2_cast


def tubeConvertTubesToImageF3_New():
    return tubeConvertTubesToImageF3.New()

class tubeConvertTubesToImageF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToImageF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_Clone)
    SetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetUseRadius)
    GetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetUseRadius)
    SetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByTubeID)
    SetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByRadius)
    SetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByRidgeness)
    SetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByMedialness)
    SetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByBranchness)
    SetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByCurvature)
    SetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByLevelness)
    SetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByRoundness)
    SetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetColorByIntensity)
    GetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByTubeID)
    GetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByRadius)
    GetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByRidgeness)
    GetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByMedialness)
    GetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByBranchness)
    GetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByCurvature)
    GetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByLevelness)
    GetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByRoundness)
    GetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetColorByIntensity)
    SetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetTemplateImage)
    GetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetTemplateImage)
    SetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_GetOutput)
    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageF3
    cast = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageF3

        Create a new object of the class tubeConvertTubesToImageF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToImageF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToImageF3 in _tubeConvertTubesToImagePython:
_tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_swigregister(tubeConvertTubesToImageF3)
tubeConvertTubesToImageF3___New_orig__ = _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3___New_orig__
tubeConvertTubesToImageF3_cast = _tubeConvertTubesToImagePython.tubeConvertTubesToImageF3_cast


def tubeConvertTubesToImageSS2_New():
    return tubeConvertTubesToImageSS2.New()

class tubeConvertTubesToImageSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToImageSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_Clone)
    SetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetUseRadius)
    GetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetUseRadius)
    SetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByTubeID)
    SetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByRadius)
    SetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByRidgeness)
    SetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByMedialness)
    SetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByBranchness)
    SetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByCurvature)
    SetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByLevelness)
    SetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByRoundness)
    SetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetColorByIntensity)
    GetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByTubeID)
    GetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByRadius)
    GetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByRidgeness)
    GetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByMedialness)
    GetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByBranchness)
    GetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByCurvature)
    GetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByLevelness)
    GetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByRoundness)
    GetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetColorByIntensity)
    SetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetTemplateImage)
    GetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetTemplateImage)
    SetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_GetOutput)
    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageSS2
    cast = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageSS2

        Create a new object of the class tubeConvertTubesToImageSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToImageSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToImageSS2 in _tubeConvertTubesToImagePython:
_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_swigregister(tubeConvertTubesToImageSS2)
tubeConvertTubesToImageSS2___New_orig__ = _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2___New_orig__
tubeConvertTubesToImageSS2_cast = _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS2_cast


def tubeConvertTubesToImageSS3_New():
    return tubeConvertTubesToImageSS3.New()

class tubeConvertTubesToImageSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToImageSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_Clone)
    SetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetUseRadius)
    GetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetUseRadius)
    SetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByTubeID)
    SetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByRadius)
    SetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByRidgeness)
    SetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByMedialness)
    SetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByBranchness)
    SetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByCurvature)
    SetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByLevelness)
    SetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByRoundness)
    SetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetColorByIntensity)
    GetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByTubeID)
    GetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByRadius)
    GetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByRidgeness)
    GetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByMedialness)
    GetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByBranchness)
    GetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByCurvature)
    GetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByLevelness)
    GetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByRoundness)
    GetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetColorByIntensity)
    SetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetTemplateImage)
    GetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetTemplateImage)
    SetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_GetOutput)
    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageSS3
    cast = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageSS3

        Create a new object of the class tubeConvertTubesToImageSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToImageSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToImageSS3 in _tubeConvertTubesToImagePython:
_tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_swigregister(tubeConvertTubesToImageSS3)
tubeConvertTubesToImageSS3___New_orig__ = _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3___New_orig__
tubeConvertTubesToImageSS3_cast = _tubeConvertTubesToImagePython.tubeConvertTubesToImageSS3_cast


def tubeConvertTubesToImageUC2_New():
    return tubeConvertTubesToImageUC2.New()

class tubeConvertTubesToImageUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToImageUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_Clone)
    SetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetUseRadius)
    GetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetUseRadius)
    SetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByTubeID)
    SetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByRadius)
    SetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByRidgeness)
    SetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByMedialness)
    SetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByBranchness)
    SetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByCurvature)
    SetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByLevelness)
    SetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByRoundness)
    SetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetColorByIntensity)
    GetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByTubeID)
    GetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByRadius)
    GetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByRidgeness)
    GetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByMedialness)
    GetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByBranchness)
    GetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByCurvature)
    GetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByLevelness)
    GetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByRoundness)
    GetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetColorByIntensity)
    SetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetTemplateImage)
    GetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetTemplateImage)
    SetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_GetOutput)
    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageUC2
    cast = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageUC2

        Create a new object of the class tubeConvertTubesToImageUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToImageUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToImageUC2 in _tubeConvertTubesToImagePython:
_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_swigregister(tubeConvertTubesToImageUC2)
tubeConvertTubesToImageUC2___New_orig__ = _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2___New_orig__
tubeConvertTubesToImageUC2_cast = _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC2_cast


def tubeConvertTubesToImageUC3_New():
    return tubeConvertTubesToImageUC3.New()

class tubeConvertTubesToImageUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToImageUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_Clone)
    SetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetUseRadius)
    GetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetUseRadius)
    SetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByTubeID)
    SetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByRadius)
    SetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByRidgeness)
    SetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByMedialness)
    SetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByBranchness)
    SetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByCurvature)
    SetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByLevelness)
    SetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByRoundness)
    SetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetColorByIntensity)
    GetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByTubeID)
    GetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByRadius)
    GetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByRidgeness)
    GetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByMedialness)
    GetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByBranchness)
    GetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByCurvature)
    GetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByLevelness)
    GetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByRoundness)
    GetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetColorByIntensity)
    SetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetTemplateImage)
    GetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetTemplateImage)
    SetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_GetOutput)
    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageUC3
    cast = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageUC3

        Create a new object of the class tubeConvertTubesToImageUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToImageUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToImageUC3 in _tubeConvertTubesToImagePython:
_tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_swigregister(tubeConvertTubesToImageUC3)
tubeConvertTubesToImageUC3___New_orig__ = _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3___New_orig__
tubeConvertTubesToImageUC3_cast = _tubeConvertTubesToImagePython.tubeConvertTubesToImageUC3_cast


def tubeConvertTubesToImageUS2_New():
    return tubeConvertTubesToImageUS2.New()

class tubeConvertTubesToImageUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToImageUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_Clone)
    SetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetUseRadius)
    GetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetUseRadius)
    SetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByTubeID)
    SetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByRadius)
    SetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByRidgeness)
    SetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByMedialness)
    SetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByBranchness)
    SetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByCurvature)
    SetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByLevelness)
    SetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByRoundness)
    SetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetColorByIntensity)
    GetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByTubeID)
    GetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByRadius)
    GetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByRidgeness)
    GetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByMedialness)
    GetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByBranchness)
    GetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByCurvature)
    GetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByLevelness)
    GetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByRoundness)
    GetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetColorByIntensity)
    SetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetTemplateImage)
    GetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetTemplateImage)
    SetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_GetOutput)
    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageUS2
    cast = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageUS2

        Create a new object of the class tubeConvertTubesToImageUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToImageUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToImageUS2 in _tubeConvertTubesToImagePython:
_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_swigregister(tubeConvertTubesToImageUS2)
tubeConvertTubesToImageUS2___New_orig__ = _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2___New_orig__
tubeConvertTubesToImageUS2_cast = _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS2_cast


def tubeConvertTubesToImageUS3_New():
    return tubeConvertTubesToImageUS3.New()

class tubeConvertTubesToImageUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToImageUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_Clone)
    SetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetUseRadius)
    GetUseRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetUseRadius)
    SetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByTubeID)
    SetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByRadius)
    SetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByRidgeness)
    SetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByMedialness)
    SetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByBranchness)
    SetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByCurvature)
    SetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByLevelness)
    SetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByRoundness)
    SetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetColorByIntensity)
    GetColorByTubeID = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByTubeID)
    GetColorByRadius = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByRadius)
    GetColorByRidgeness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByRidgeness)
    GetColorByMedialness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByMedialness)
    GetColorByBranchness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByBranchness)
    GetColorByCurvature = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByCurvature)
    GetColorByLevelness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByLevelness)
    GetColorByRoundness = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByRoundness)
    GetColorByIntensity = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetColorByIntensity)
    SetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetTemplateImage)
    GetTemplateImage = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetTemplateImage)
    SetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_GetOutput)
    __swig_destroy__ = _tubeConvertTubesToImagePython.delete_tubeConvertTubesToImageUS3
    cast = _swig_new_static_method(_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToImageUS3

        Create a new object of the class tubeConvertTubesToImageUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToImageUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToImageUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToImageUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToImageUS3 in _tubeConvertTubesToImagePython:
_tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_swigregister(tubeConvertTubesToImageUS3)
tubeConvertTubesToImageUS3___New_orig__ = _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3___New_orig__
tubeConvertTubesToImageUS3_cast = _tubeConvertTubesToImagePython.tubeConvertTubesToImageUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def convert_tubes_to_image(*args, **kwargs):
    """Procedural interface for ConvertTubesToImage"""
    import itk
    instance = itk.ConvertTubesToImage.New(*args, **kwargs)
    return instance.__internal_call__()

def convert_tubes_to_image_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ConvertTubesToImage, itkTemplate.itkTemplate):
        filter_object = itk.ConvertTubesToImage.values()[0]
    else:
        filter_object = itk.ConvertTubesToImage

    convert_tubes_to_image.__doc__ = filter_object.__doc__
    convert_tubes_to_image.__doc__ += "\n Args are Input(s) to the filter.\n"
    convert_tubes_to_image.__doc__ += "Available Keyword Arguments:\n"
    convert_tubes_to_image.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



