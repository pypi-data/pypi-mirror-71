# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _TubeTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeEnhanceContrastUsingPriorPython
else:
    import _tubeEnhanceContrastUsingPriorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _tubeEnhanceContrastUsingPriorPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _tubeEnhanceContrastUsingPriorPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImagePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.ITKCommonBasePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkPointPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython

def tubeEnhanceContrastUsingPriorD2_New():
    return tubeEnhanceContrastUsingPriorD2.New()

class tubeEnhanceContrastUsingPriorD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_Clone)
    SetInput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetInput)
    SetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetInputMaskImage)
    SetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetObjectScale)
    GetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetObjectScale)
    SetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetBackgroundScale)
    GetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetBackgroundScale)
    SetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetMaskObjectValue)
    GetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetMaskObjectValue)
    SetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetMaskBackgroundValue)
    GetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetMaskBackgroundValue)
    SetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetOptimizationIterations)
    GetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetOptimizationIterations)
    SetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetOptimizationSeed)
    GetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetOptimizationSeed)
    GetOutput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetOutput)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorD2
    cast = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_cast)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorD2

        Create a new object of the class tubeEnhanceContrastUsingPriorD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorD2 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_swigregister(tubeEnhanceContrastUsingPriorD2)
tubeEnhanceContrastUsingPriorD2___New_orig__ = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2___New_orig__
tubeEnhanceContrastUsingPriorD2_cast = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_cast


def tubeEnhanceContrastUsingPriorD3_New():
    return tubeEnhanceContrastUsingPriorD3.New()

class tubeEnhanceContrastUsingPriorD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_Clone)
    SetInput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetInput)
    SetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetInputMaskImage)
    SetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetObjectScale)
    GetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetObjectScale)
    SetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetBackgroundScale)
    GetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetBackgroundScale)
    SetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetMaskObjectValue)
    GetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetMaskObjectValue)
    SetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetMaskBackgroundValue)
    GetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetMaskBackgroundValue)
    SetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetOptimizationIterations)
    GetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetOptimizationIterations)
    SetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetOptimizationSeed)
    GetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetOptimizationSeed)
    GetOutput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetOutput)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorD3
    cast = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_cast)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorD3

        Create a new object of the class tubeEnhanceContrastUsingPriorD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorD3 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_swigregister(tubeEnhanceContrastUsingPriorD3)
tubeEnhanceContrastUsingPriorD3___New_orig__ = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3___New_orig__
tubeEnhanceContrastUsingPriorD3_cast = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_cast


def tubeEnhanceContrastUsingPriorF2_New():
    return tubeEnhanceContrastUsingPriorF2.New()

class tubeEnhanceContrastUsingPriorF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_Clone)
    SetInput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetInput)
    SetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetInputMaskImage)
    SetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetObjectScale)
    GetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetObjectScale)
    SetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetBackgroundScale)
    GetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetBackgroundScale)
    SetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetMaskObjectValue)
    GetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetMaskObjectValue)
    SetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetMaskBackgroundValue)
    GetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetMaskBackgroundValue)
    SetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetOptimizationIterations)
    GetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetOptimizationIterations)
    SetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetOptimizationSeed)
    GetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetOptimizationSeed)
    GetOutput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetOutput)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorF2
    cast = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_cast)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorF2

        Create a new object of the class tubeEnhanceContrastUsingPriorF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorF2 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_swigregister(tubeEnhanceContrastUsingPriorF2)
tubeEnhanceContrastUsingPriorF2___New_orig__ = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2___New_orig__
tubeEnhanceContrastUsingPriorF2_cast = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_cast


def tubeEnhanceContrastUsingPriorF3_New():
    return tubeEnhanceContrastUsingPriorF3.New()

class tubeEnhanceContrastUsingPriorF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_Clone)
    SetInput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetInput)
    SetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetInputMaskImage)
    SetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetObjectScale)
    GetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetObjectScale)
    SetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetBackgroundScale)
    GetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetBackgroundScale)
    SetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetMaskObjectValue)
    GetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetMaskObjectValue)
    SetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetMaskBackgroundValue)
    GetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetMaskBackgroundValue)
    SetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetOptimizationIterations)
    GetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetOptimizationIterations)
    SetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetOptimizationSeed)
    GetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetOptimizationSeed)
    GetOutput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetOutput)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorF3
    cast = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_cast)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorF3

        Create a new object of the class tubeEnhanceContrastUsingPriorF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorF3 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_swigregister(tubeEnhanceContrastUsingPriorF3)
tubeEnhanceContrastUsingPriorF3___New_orig__ = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3___New_orig__
tubeEnhanceContrastUsingPriorF3_cast = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_cast


def tubeEnhanceContrastUsingPriorSS2_New():
    return tubeEnhanceContrastUsingPriorSS2.New()

class tubeEnhanceContrastUsingPriorSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_Clone)
    SetInput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetInput)
    SetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetInputMaskImage)
    SetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetObjectScale)
    GetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetObjectScale)
    SetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetBackgroundScale)
    GetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetBackgroundScale)
    SetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetMaskObjectValue)
    GetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetMaskObjectValue)
    SetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetMaskBackgroundValue)
    GetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetMaskBackgroundValue)
    SetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetOptimizationIterations)
    GetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetOptimizationIterations)
    SetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetOptimizationSeed)
    GetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetOptimizationSeed)
    GetOutput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetOutput)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorSS2
    cast = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorSS2

        Create a new object of the class tubeEnhanceContrastUsingPriorSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorSS2 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_swigregister(tubeEnhanceContrastUsingPriorSS2)
tubeEnhanceContrastUsingPriorSS2___New_orig__ = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2___New_orig__
tubeEnhanceContrastUsingPriorSS2_cast = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_cast


def tubeEnhanceContrastUsingPriorSS3_New():
    return tubeEnhanceContrastUsingPriorSS3.New()

class tubeEnhanceContrastUsingPriorSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_Clone)
    SetInput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetInput)
    SetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetInputMaskImage)
    SetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetObjectScale)
    GetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetObjectScale)
    SetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetBackgroundScale)
    GetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetBackgroundScale)
    SetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetMaskObjectValue)
    GetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetMaskObjectValue)
    SetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetMaskBackgroundValue)
    GetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetMaskBackgroundValue)
    SetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetOptimizationIterations)
    GetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetOptimizationIterations)
    SetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetOptimizationSeed)
    GetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetOptimizationSeed)
    GetOutput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetOutput)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorSS3
    cast = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorSS3

        Create a new object of the class tubeEnhanceContrastUsingPriorSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorSS3 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_swigregister(tubeEnhanceContrastUsingPriorSS3)
tubeEnhanceContrastUsingPriorSS3___New_orig__ = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3___New_orig__
tubeEnhanceContrastUsingPriorSS3_cast = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_cast


def tubeEnhanceContrastUsingPriorUC2_New():
    return tubeEnhanceContrastUsingPriorUC2.New()

class tubeEnhanceContrastUsingPriorUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_Clone)
    SetInput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetInput)
    SetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetInputMaskImage)
    SetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetObjectScale)
    GetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetObjectScale)
    SetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetBackgroundScale)
    GetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetBackgroundScale)
    SetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetMaskObjectValue)
    GetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetMaskObjectValue)
    SetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetMaskBackgroundValue)
    GetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetMaskBackgroundValue)
    SetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetOptimizationIterations)
    GetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetOptimizationIterations)
    SetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetOptimizationSeed)
    GetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetOptimizationSeed)
    GetOutput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetOutput)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorUC2
    cast = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorUC2

        Create a new object of the class tubeEnhanceContrastUsingPriorUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorUC2 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_swigregister(tubeEnhanceContrastUsingPriorUC2)
tubeEnhanceContrastUsingPriorUC2___New_orig__ = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2___New_orig__
tubeEnhanceContrastUsingPriorUC2_cast = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_cast


def tubeEnhanceContrastUsingPriorUC3_New():
    return tubeEnhanceContrastUsingPriorUC3.New()

class tubeEnhanceContrastUsingPriorUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_Clone)
    SetInput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetInput)
    SetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetInputMaskImage)
    SetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetObjectScale)
    GetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetObjectScale)
    SetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetBackgroundScale)
    GetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetBackgroundScale)
    SetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetMaskObjectValue)
    GetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetMaskObjectValue)
    SetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetMaskBackgroundValue)
    GetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetMaskBackgroundValue)
    SetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetOptimizationIterations)
    GetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetOptimizationIterations)
    SetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetOptimizationSeed)
    GetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetOptimizationSeed)
    GetOutput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetOutput)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorUC3
    cast = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorUC3

        Create a new object of the class tubeEnhanceContrastUsingPriorUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorUC3 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_swigregister(tubeEnhanceContrastUsingPriorUC3)
tubeEnhanceContrastUsingPriorUC3___New_orig__ = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3___New_orig__
tubeEnhanceContrastUsingPriorUC3_cast = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_cast


def tubeEnhanceContrastUsingPriorUS2_New():
    return tubeEnhanceContrastUsingPriorUS2.New()

class tubeEnhanceContrastUsingPriorUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_Clone)
    SetInput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetInput)
    SetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetInputMaskImage)
    SetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetObjectScale)
    GetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetObjectScale)
    SetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetBackgroundScale)
    GetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetBackgroundScale)
    SetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetMaskObjectValue)
    GetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetMaskObjectValue)
    SetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetMaskBackgroundValue)
    GetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetMaskBackgroundValue)
    SetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetOptimizationIterations)
    GetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetOptimizationIterations)
    SetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetOptimizationSeed)
    GetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetOptimizationSeed)
    GetOutput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetOutput)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorUS2
    cast = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorUS2

        Create a new object of the class tubeEnhanceContrastUsingPriorUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorUS2 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_swigregister(tubeEnhanceContrastUsingPriorUS2)
tubeEnhanceContrastUsingPriorUS2___New_orig__ = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2___New_orig__
tubeEnhanceContrastUsingPriorUS2_cast = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_cast


def tubeEnhanceContrastUsingPriorUS3_New():
    return tubeEnhanceContrastUsingPriorUS3.New()

class tubeEnhanceContrastUsingPriorUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_Clone)
    SetInput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetInput)
    SetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetInputMaskImage)
    GetInputMaskImage = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetInputMaskImage)
    SetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetObjectScale)
    GetObjectScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetObjectScale)
    SetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetBackgroundScale)
    GetBackgroundScale = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetBackgroundScale)
    SetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetMaskObjectValue)
    GetMaskObjectValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetMaskObjectValue)
    SetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetMaskBackgroundValue)
    GetMaskBackgroundValue = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetMaskBackgroundValue)
    SetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetOptimizationIterations)
    GetOptimizationIterations = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetOptimizationIterations)
    SetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetOptimizationSeed)
    GetOptimizationSeed = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetOptimizationSeed)
    GetOutput = _swig_new_instance_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetOutput)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorUS3
    cast = _swig_new_static_method(_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorUS3

        Create a new object of the class tubeEnhanceContrastUsingPriorUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorUS3 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_swigregister(tubeEnhanceContrastUsingPriorUS3)
tubeEnhanceContrastUsingPriorUS3___New_orig__ = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3___New_orig__
tubeEnhanceContrastUsingPriorUS3_cast = _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def enhance_contrast_using_prior(*args, **kwargs):
    """Procedural interface for EnhanceContrastUsingPrior"""
    import itk
    instance = itk.EnhanceContrastUsingPrior.New(*args, **kwargs)
    return instance.__internal_call__()

def enhance_contrast_using_prior_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.EnhanceContrastUsingPrior, itkTemplate.itkTemplate):
        filter_object = itk.EnhanceContrastUsingPrior.values()[0]
    else:
        filter_object = itk.EnhanceContrastUsingPrior

    enhance_contrast_using_prior.__doc__ = filter_object.__doc__
    enhance_contrast_using_prior.__doc__ += "\n Args are Input(s) to the filter.\n"
    enhance_contrast_using_prior.__doc__ += "Available Keyword Arguments:\n"
    enhance_contrast_using_prior.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



