# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _TubeTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeConvertTubesToDensityImagePython
else:
    import _tubeConvertTubesToDensityImagePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _tubeConvertTubesToDensityImagePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _tubeConvertTubesToDensityImagePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkImagePython
import itk.ITKCommonBasePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkPointPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkGroupSpatialObjectPython
import itk.itkSpatialObjectBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkArray2DPython
import itk.itkDiffusionTensor3DPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkTransformBasePython

def tubeConvertTubesToDensityImageD2_New():
    return tubeConvertTubesToDensityImageD2.New()

class tubeConvertTubesToDensityImageD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToDensityImageD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_Clone)
    SetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetMaxDensityIntensity)
    GetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetMaxDensityIntensity)
    SetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetSize)
    GetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetSize)
    SetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetUseSquaredDistance)
    GetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetUseSquaredDistance)
    SetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetInputTubeGroup)
    GetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetInputTubeGroup)
    GetDensityMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetDensityMapImage)
    GetRadiusMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetRadiusMapImage)
    GetTangentMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetTangentMapImage)
    SetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_GetSpacing)
    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageD2
    cast = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageD2

        Create a new object of the class tubeConvertTubesToDensityImageD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToDensityImageD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToDensityImageD2 in _tubeConvertTubesToDensityImagePython:
_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_swigregister(tubeConvertTubesToDensityImageD2)
tubeConvertTubesToDensityImageD2___New_orig__ = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2___New_orig__
tubeConvertTubesToDensityImageD2_cast = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD2_cast


def tubeConvertTubesToDensityImageD3_New():
    return tubeConvertTubesToDensityImageD3.New()

class tubeConvertTubesToDensityImageD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToDensityImageD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_Clone)
    SetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetMaxDensityIntensity)
    GetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetMaxDensityIntensity)
    SetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetSize)
    GetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetSize)
    SetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetUseSquaredDistance)
    GetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetUseSquaredDistance)
    SetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetInputTubeGroup)
    GetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetInputTubeGroup)
    GetDensityMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetDensityMapImage)
    GetRadiusMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetRadiusMapImage)
    GetTangentMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetTangentMapImage)
    SetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_GetSpacing)
    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageD3
    cast = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageD3

        Create a new object of the class tubeConvertTubesToDensityImageD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToDensityImageD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToDensityImageD3 in _tubeConvertTubesToDensityImagePython:
_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_swigregister(tubeConvertTubesToDensityImageD3)
tubeConvertTubesToDensityImageD3___New_orig__ = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3___New_orig__
tubeConvertTubesToDensityImageD3_cast = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageD3_cast


def tubeConvertTubesToDensityImageF2_New():
    return tubeConvertTubesToDensityImageF2.New()

class tubeConvertTubesToDensityImageF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToDensityImageF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_Clone)
    SetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetMaxDensityIntensity)
    GetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetMaxDensityIntensity)
    SetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetSize)
    GetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetSize)
    SetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetUseSquaredDistance)
    GetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetUseSquaredDistance)
    SetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetInputTubeGroup)
    GetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetInputTubeGroup)
    GetDensityMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetDensityMapImage)
    GetRadiusMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetRadiusMapImage)
    GetTangentMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetTangentMapImage)
    SetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_GetSpacing)
    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageF2
    cast = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageF2

        Create a new object of the class tubeConvertTubesToDensityImageF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToDensityImageF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToDensityImageF2 in _tubeConvertTubesToDensityImagePython:
_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_swigregister(tubeConvertTubesToDensityImageF2)
tubeConvertTubesToDensityImageF2___New_orig__ = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2___New_orig__
tubeConvertTubesToDensityImageF2_cast = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF2_cast


def tubeConvertTubesToDensityImageF3_New():
    return tubeConvertTubesToDensityImageF3.New()

class tubeConvertTubesToDensityImageF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToDensityImageF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_Clone)
    SetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetMaxDensityIntensity)
    GetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetMaxDensityIntensity)
    SetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetSize)
    GetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetSize)
    SetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetUseSquaredDistance)
    GetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetUseSquaredDistance)
    SetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetInputTubeGroup)
    GetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetInputTubeGroup)
    GetDensityMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetDensityMapImage)
    GetRadiusMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetRadiusMapImage)
    GetTangentMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetTangentMapImage)
    SetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_GetSpacing)
    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageF3
    cast = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageF3

        Create a new object of the class tubeConvertTubesToDensityImageF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToDensityImageF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToDensityImageF3 in _tubeConvertTubesToDensityImagePython:
_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_swigregister(tubeConvertTubesToDensityImageF3)
tubeConvertTubesToDensityImageF3___New_orig__ = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3___New_orig__
tubeConvertTubesToDensityImageF3_cast = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageF3_cast


def tubeConvertTubesToDensityImageSS2_New():
    return tubeConvertTubesToDensityImageSS2.New()

class tubeConvertTubesToDensityImageSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToDensityImageSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_Clone)
    SetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetMaxDensityIntensity)
    GetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetMaxDensityIntensity)
    SetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetSize)
    GetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetSize)
    SetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetUseSquaredDistance)
    GetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetUseSquaredDistance)
    SetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetInputTubeGroup)
    GetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetInputTubeGroup)
    GetDensityMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetDensityMapImage)
    GetRadiusMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetRadiusMapImage)
    GetTangentMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetTangentMapImage)
    SetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_GetSpacing)
    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageSS2
    cast = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageSS2

        Create a new object of the class tubeConvertTubesToDensityImageSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToDensityImageSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToDensityImageSS2 in _tubeConvertTubesToDensityImagePython:
_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_swigregister(tubeConvertTubesToDensityImageSS2)
tubeConvertTubesToDensityImageSS2___New_orig__ = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2___New_orig__
tubeConvertTubesToDensityImageSS2_cast = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS2_cast


def tubeConvertTubesToDensityImageSS3_New():
    return tubeConvertTubesToDensityImageSS3.New()

class tubeConvertTubesToDensityImageSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToDensityImageSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_Clone)
    SetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetMaxDensityIntensity)
    GetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetMaxDensityIntensity)
    SetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetSize)
    GetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetSize)
    SetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetUseSquaredDistance)
    GetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetUseSquaredDistance)
    SetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetInputTubeGroup)
    GetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetInputTubeGroup)
    GetDensityMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetDensityMapImage)
    GetRadiusMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetRadiusMapImage)
    GetTangentMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetTangentMapImage)
    SetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_GetSpacing)
    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageSS3
    cast = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageSS3

        Create a new object of the class tubeConvertTubesToDensityImageSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToDensityImageSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToDensityImageSS3 in _tubeConvertTubesToDensityImagePython:
_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_swigregister(tubeConvertTubesToDensityImageSS3)
tubeConvertTubesToDensityImageSS3___New_orig__ = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3___New_orig__
tubeConvertTubesToDensityImageSS3_cast = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageSS3_cast


def tubeConvertTubesToDensityImageUC2_New():
    return tubeConvertTubesToDensityImageUC2.New()

class tubeConvertTubesToDensityImageUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToDensityImageUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_Clone)
    SetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetMaxDensityIntensity)
    GetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetMaxDensityIntensity)
    SetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetSize)
    GetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetSize)
    SetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetUseSquaredDistance)
    GetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetUseSquaredDistance)
    SetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetInputTubeGroup)
    GetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetInputTubeGroup)
    GetDensityMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetDensityMapImage)
    GetRadiusMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetRadiusMapImage)
    GetTangentMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetTangentMapImage)
    SetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_GetSpacing)
    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageUC2
    cast = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageUC2

        Create a new object of the class tubeConvertTubesToDensityImageUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToDensityImageUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToDensityImageUC2 in _tubeConvertTubesToDensityImagePython:
_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_swigregister(tubeConvertTubesToDensityImageUC2)
tubeConvertTubesToDensityImageUC2___New_orig__ = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2___New_orig__
tubeConvertTubesToDensityImageUC2_cast = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC2_cast


def tubeConvertTubesToDensityImageUC3_New():
    return tubeConvertTubesToDensityImageUC3.New()

class tubeConvertTubesToDensityImageUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToDensityImageUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_Clone)
    SetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetMaxDensityIntensity)
    GetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetMaxDensityIntensity)
    SetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetSize)
    GetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetSize)
    SetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetUseSquaredDistance)
    GetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetUseSquaredDistance)
    SetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetInputTubeGroup)
    GetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetInputTubeGroup)
    GetDensityMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetDensityMapImage)
    GetRadiusMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetRadiusMapImage)
    GetTangentMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetTangentMapImage)
    SetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_GetSpacing)
    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageUC3
    cast = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageUC3

        Create a new object of the class tubeConvertTubesToDensityImageUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToDensityImageUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToDensityImageUC3 in _tubeConvertTubesToDensityImagePython:
_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_swigregister(tubeConvertTubesToDensityImageUC3)
tubeConvertTubesToDensityImageUC3___New_orig__ = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3___New_orig__
tubeConvertTubesToDensityImageUC3_cast = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUC3_cast


def tubeConvertTubesToDensityImageUS2_New():
    return tubeConvertTubesToDensityImageUS2.New()

class tubeConvertTubesToDensityImageUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToDensityImageUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_Clone)
    SetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetMaxDensityIntensity)
    GetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetMaxDensityIntensity)
    SetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetSize)
    GetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetSize)
    SetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetUseSquaredDistance)
    GetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetUseSquaredDistance)
    SetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetInputTubeGroup)
    GetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetInputTubeGroup)
    GetDensityMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetDensityMapImage)
    GetRadiusMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetRadiusMapImage)
    GetTangentMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetTangentMapImage)
    SetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_GetSpacing)
    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageUS2
    cast = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageUS2

        Create a new object of the class tubeConvertTubesToDensityImageUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToDensityImageUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToDensityImageUS2 in _tubeConvertTubesToDensityImagePython:
_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_swigregister(tubeConvertTubesToDensityImageUS2)
tubeConvertTubesToDensityImageUS2___New_orig__ = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2___New_orig__
tubeConvertTubesToDensityImageUS2_cast = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS2_cast


def tubeConvertTubesToDensityImageUS3_New():
    return tubeConvertTubesToDensityImageUS3.New()

class tubeConvertTubesToDensityImageUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertTubesToDensityImageUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_Clone)
    SetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetMaxDensityIntensity)
    GetMaxDensityIntensity = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetMaxDensityIntensity)
    SetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetSize)
    GetSize = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetSize)
    SetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetUseSquaredDistance)
    GetUseSquaredDistance = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetUseSquaredDistance)
    SetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetInputTubeGroup)
    GetInputTubeGroup = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetInputTubeGroup)
    GetDensityMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetDensityMapImage)
    GetRadiusMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetRadiusMapImage)
    GetTangentMapImage = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetTangentMapImage)
    SetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_GetSpacing)
    __swig_destroy__ = _tubeConvertTubesToDensityImagePython.delete_tubeConvertTubesToDensityImageUS3
    cast = _swig_new_static_method(_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeConvertTubesToDensityImageUS3

        Create a new object of the class tubeConvertTubesToDensityImageUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertTubesToDensityImageUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertTubesToDensityImageUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertTubesToDensityImageUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertTubesToDensityImageUS3 in _tubeConvertTubesToDensityImagePython:
_tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_swigregister(tubeConvertTubesToDensityImageUS3)
tubeConvertTubesToDensityImageUS3___New_orig__ = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3___New_orig__
tubeConvertTubesToDensityImageUS3_cast = _tubeConvertTubesToDensityImagePython.tubeConvertTubesToDensityImageUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def convert_tubes_to_density_image(*args, **kwargs):
    """Procedural interface for ConvertTubesToDensityImage"""
    import itk
    instance = itk.ConvertTubesToDensityImage.New(*args, **kwargs)
    return instance.__internal_call__()

def convert_tubes_to_density_image_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ConvertTubesToDensityImage, itkTemplate.itkTemplate):
        filter_object = itk.ConvertTubesToDensityImage.values()[0]
    else:
        filter_object = itk.ConvertTubesToDensityImage

    convert_tubes_to_density_image.__doc__ = filter_object.__doc__
    convert_tubes_to_density_image.__doc__ += "\n Args are Input(s) to the filter.\n"
    convert_tubes_to_density_image.__doc__ += "Available Keyword Arguments:\n"
    convert_tubes_to_density_image.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



