# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _TubeTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeCropImagePython
else:
    import _tubeCropImagePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _tubeCropImagePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _tubeCropImagePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImagePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.ITKCommonBasePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkPointPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython

def tubeCropImageID2ID2_New():
    return tubeCropImageID2ID2.New()

class tubeCropImageID2ID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID2ID2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageID2ID2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageID2ID2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageID2ID2

        Create a new object of the class tubeCropImageID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageID2ID2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageID2ID2_swigregister(tubeCropImageID2ID2)
tubeCropImageID2ID2___New_orig__ = _tubeCropImagePython.tubeCropImageID2ID2___New_orig__
tubeCropImageID2ID2_cast = _tubeCropImagePython.tubeCropImageID2ID2_cast


def tubeCropImageID3ID3_New():
    return tubeCropImageID3ID3.New()

class tubeCropImageID3ID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageID3ID3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageID3ID3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageID3ID3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageID3ID3

        Create a new object of the class tubeCropImageID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageID3ID3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageID3ID3_swigregister(tubeCropImageID3ID3)
tubeCropImageID3ID3___New_orig__ = _tubeCropImagePython.tubeCropImageID3ID3___New_orig__
tubeCropImageID3ID3_cast = _tubeCropImagePython.tubeCropImageID3ID3_cast


def tubeCropImageIF2IF2_New():
    return tubeCropImageIF2IF2.New()

class tubeCropImageIF2IF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF2IF2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageIF2IF2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageIF2IF2

        Create a new object of the class tubeCropImageIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageIF2IF2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageIF2IF2_swigregister(tubeCropImageIF2IF2)
tubeCropImageIF2IF2___New_orig__ = _tubeCropImagePython.tubeCropImageIF2IF2___New_orig__
tubeCropImageIF2IF2_cast = _tubeCropImagePython.tubeCropImageIF2IF2_cast


def tubeCropImageIF3IF3_New():
    return tubeCropImageIF3IF3.New()

class tubeCropImageIF3IF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIF3IF3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageIF3IF3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageIF3IF3

        Create a new object of the class tubeCropImageIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageIF3IF3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageIF3IF3_swigregister(tubeCropImageIF3IF3)
tubeCropImageIF3IF3___New_orig__ = _tubeCropImagePython.tubeCropImageIF3IF3___New_orig__
tubeCropImageIF3IF3_cast = _tubeCropImagePython.tubeCropImageIF3IF3_cast


def tubeCropImageISS2ISS2_New():
    return tubeCropImageISS2ISS2.New()

class tubeCropImageISS2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS2ISS2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageISS2ISS2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageISS2ISS2

        Create a new object of the class tubeCropImageISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageISS2ISS2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageISS2ISS2_swigregister(tubeCropImageISS2ISS2)
tubeCropImageISS2ISS2___New_orig__ = _tubeCropImagePython.tubeCropImageISS2ISS2___New_orig__
tubeCropImageISS2ISS2_cast = _tubeCropImagePython.tubeCropImageISS2ISS2_cast


def tubeCropImageISS3ISS3_New():
    return tubeCropImageISS3ISS3.New()

class tubeCropImageISS3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageISS3ISS3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageISS3ISS3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageISS3ISS3

        Create a new object of the class tubeCropImageISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageISS3ISS3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageISS3ISS3_swigregister(tubeCropImageISS3ISS3)
tubeCropImageISS3ISS3___New_orig__ = _tubeCropImagePython.tubeCropImageISS3ISS3___New_orig__
tubeCropImageISS3ISS3_cast = _tubeCropImagePython.tubeCropImageISS3ISS3_cast


def tubeCropImageIUC2IUC2_New():
    return tubeCropImageIUC2IUC2.New()

class tubeCropImageIUC2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageIUC2IUC2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageIUC2IUC2

        Create a new object of the class tubeCropImageIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageIUC2IUC2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageIUC2IUC2_swigregister(tubeCropImageIUC2IUC2)
tubeCropImageIUC2IUC2___New_orig__ = _tubeCropImagePython.tubeCropImageIUC2IUC2___New_orig__
tubeCropImageIUC2IUC2_cast = _tubeCropImagePython.tubeCropImageIUC2IUC2_cast


def tubeCropImageIUC3IUC3_New():
    return tubeCropImageIUC3IUC3.New()

class tubeCropImageIUC3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageIUC3IUC3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageIUC3IUC3

        Create a new object of the class tubeCropImageIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageIUC3IUC3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageIUC3IUC3_swigregister(tubeCropImageIUC3IUC3)
tubeCropImageIUC3IUC3___New_orig__ = _tubeCropImagePython.tubeCropImageIUC3IUC3___New_orig__
tubeCropImageIUC3IUC3_cast = _tubeCropImagePython.tubeCropImageIUC3IUC3_cast


def tubeCropImageIUS2IUS2_New():
    return tubeCropImageIUS2IUS2.New()

class tubeCropImageIUS2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageIUS2IUS2
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageIUS2IUS2

        Create a new object of the class tubeCropImageIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageIUS2IUS2 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageIUS2IUS2_swigregister(tubeCropImageIUS2IUS2)
tubeCropImageIUS2IUS2___New_orig__ = _tubeCropImagePython.tubeCropImageIUS2IUS2___New_orig__
tubeCropImageIUS2IUS2_cast = _tubeCropImagePython.tubeCropImageIUS2IUS2_cast


def tubeCropImageIUS3IUS3_New():
    return tubeCropImageIUS3IUS3.New()

class tubeCropImageIUS3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeCropImageIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeCropImagePython.tubeCropImageIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_Clone)
    SetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetMin)
    GetMin = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_GetMin)
    SetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetMax)
    GetMax = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_GetMax)
    SetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetSize)
    GetSize = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_GetSize)
    SetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetCenter)
    GetCenter = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_GetCenter)
    SetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_GetBoundary)
    SetMatchVolume = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetMatchVolume)
    SetMatchMask = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetMatchMask)
    SetSplitInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetSplitInput)
    SetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_GetOutput)
    __swig_destroy__ = _tubeCropImagePython.delete_tubeCropImageIUS3IUS3
    cast = _swig_new_static_method(_tubeCropImagePython.tubeCropImageIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeCropImageIUS3IUS3

        Create a new object of the class tubeCropImageIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeCropImageIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeCropImageIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeCropImageIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeCropImageIUS3IUS3 in _tubeCropImagePython:
_tubeCropImagePython.tubeCropImageIUS3IUS3_swigregister(tubeCropImageIUS3IUS3)
tubeCropImageIUS3IUS3___New_orig__ = _tubeCropImagePython.tubeCropImageIUS3IUS3___New_orig__
tubeCropImageIUS3IUS3_cast = _tubeCropImagePython.tubeCropImageIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def crop_image(*args, **kwargs):
    """Procedural interface for CropImage"""
    import itk
    instance = itk.CropImage.New(*args, **kwargs)
    return instance.__internal_call__()

def crop_image_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.CropImage, itkTemplate.itkTemplate):
        filter_object = itk.CropImage.values()[0]
    else:
        filter_object = itk.CropImage

    crop_image.__doc__ = filter_object.__doc__
    crop_image.__doc__ += "\n Args are Input(s) to the filter.\n"
    crop_image.__doc__ += "Available Keyword Arguments:\n"
    crop_image.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



