# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeMergeAdjacentImagesPython
else:
    import _tubeMergeAdjacentImagesPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _tubeMergeAdjacentImagesPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _tubeMergeAdjacentImagesPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkAffineTransformPython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkOptimizerParametersPython
import itk.ITKCommonBasePython
import itk.itkArrayPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkArray2DPython
import itk.itkDiffusionTensor3DPython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython

def tubeMergeAdjacentImagesID2_New():
    return tubeMergeAdjacentImagesID2.New()

class tubeMergeAdjacentImagesID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeMergeAdjacentImagesID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2___New_orig__)
    Clone = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_Clone)
    SetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_SetInput1)
    GetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_GetInput1)
    SetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_SetInput2)
    GetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_GetInput2)
    SetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_SetBackground)
    GetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_GetBackground)
    SetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_SetMaskZero)
    GetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_GetMaskZero)
    SetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_SetMaxIterations)
    GetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_GetMaxIterations)
    SetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_SetPadding)
    GetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_GetPadding)
    SetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_SetExpectedOffset)
    GetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_GetExpectedOffset)
    SetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_SetExpectedRotation)
    GetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_GetExpectedRotation)
    SetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_SetSamplingRatio)
    GetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_GetSamplingRatio)
    SetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_SetBlendUsingAverage)
    GetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_GetBlendUsingAverage)
    SetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_SetUseFastBlending)
    GetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_GetUseFastBlending)
    SetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_SetInitialTransform)
    GetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_GetInitialTransform)
    LoadInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_LoadInitialTransform)
    GetOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_GetOutputTransform)
    SaveOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_SaveOutputTransform)
    GetOutput = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_GetOutput)
    __swig_destroy__ = _tubeMergeAdjacentImagesPython.delete_tubeMergeAdjacentImagesID2
    cast = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_cast)

    def New(*args, **kargs):
        """New() -> tubeMergeAdjacentImagesID2

        Create a new object of the class tubeMergeAdjacentImagesID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeMergeAdjacentImagesID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeMergeAdjacentImagesID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeMergeAdjacentImagesID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeMergeAdjacentImagesID2 in _tubeMergeAdjacentImagesPython:
_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_swigregister(tubeMergeAdjacentImagesID2)
tubeMergeAdjacentImagesID2___New_orig__ = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2___New_orig__
tubeMergeAdjacentImagesID2_cast = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID2_cast


def tubeMergeAdjacentImagesID3_New():
    return tubeMergeAdjacentImagesID3.New()

class tubeMergeAdjacentImagesID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeMergeAdjacentImagesID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3___New_orig__)
    Clone = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_Clone)
    SetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_SetInput1)
    GetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_GetInput1)
    SetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_SetInput2)
    GetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_GetInput2)
    SetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_SetBackground)
    GetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_GetBackground)
    SetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_SetMaskZero)
    GetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_GetMaskZero)
    SetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_SetMaxIterations)
    GetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_GetMaxIterations)
    SetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_SetPadding)
    GetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_GetPadding)
    SetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_SetExpectedOffset)
    GetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_GetExpectedOffset)
    SetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_SetExpectedRotation)
    GetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_GetExpectedRotation)
    SetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_SetSamplingRatio)
    GetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_GetSamplingRatio)
    SetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_SetBlendUsingAverage)
    GetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_GetBlendUsingAverage)
    SetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_SetUseFastBlending)
    GetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_GetUseFastBlending)
    SetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_SetInitialTransform)
    GetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_GetInitialTransform)
    LoadInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_LoadInitialTransform)
    GetOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_GetOutputTransform)
    SaveOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_SaveOutputTransform)
    GetOutput = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_GetOutput)
    __swig_destroy__ = _tubeMergeAdjacentImagesPython.delete_tubeMergeAdjacentImagesID3
    cast = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_cast)

    def New(*args, **kargs):
        """New() -> tubeMergeAdjacentImagesID3

        Create a new object of the class tubeMergeAdjacentImagesID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeMergeAdjacentImagesID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeMergeAdjacentImagesID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeMergeAdjacentImagesID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeMergeAdjacentImagesID3 in _tubeMergeAdjacentImagesPython:
_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_swigregister(tubeMergeAdjacentImagesID3)
tubeMergeAdjacentImagesID3___New_orig__ = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3___New_orig__
tubeMergeAdjacentImagesID3_cast = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesID3_cast


def tubeMergeAdjacentImagesIF2_New():
    return tubeMergeAdjacentImagesIF2.New()

class tubeMergeAdjacentImagesIF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeMergeAdjacentImagesIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_Clone)
    SetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_SetInput1)
    GetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_GetInput1)
    SetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_SetInput2)
    GetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_GetInput2)
    SetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_SetBackground)
    GetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_GetBackground)
    SetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_SetMaskZero)
    GetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_GetMaskZero)
    SetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_SetMaxIterations)
    GetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_GetMaxIterations)
    SetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_SetPadding)
    GetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_GetPadding)
    SetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_SetExpectedOffset)
    GetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_GetExpectedOffset)
    SetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_SetExpectedRotation)
    GetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_GetExpectedRotation)
    SetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_SetSamplingRatio)
    GetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_GetSamplingRatio)
    SetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_SetBlendUsingAverage)
    GetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_GetBlendUsingAverage)
    SetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_SetUseFastBlending)
    GetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_GetUseFastBlending)
    SetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_SetInitialTransform)
    GetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_GetInitialTransform)
    LoadInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_LoadInitialTransform)
    GetOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_GetOutputTransform)
    SaveOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_SaveOutputTransform)
    GetOutput = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_GetOutput)
    __swig_destroy__ = _tubeMergeAdjacentImagesPython.delete_tubeMergeAdjacentImagesIF2
    cast = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_cast)

    def New(*args, **kargs):
        """New() -> tubeMergeAdjacentImagesIF2

        Create a new object of the class tubeMergeAdjacentImagesIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeMergeAdjacentImagesIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeMergeAdjacentImagesIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeMergeAdjacentImagesIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeMergeAdjacentImagesIF2 in _tubeMergeAdjacentImagesPython:
_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_swigregister(tubeMergeAdjacentImagesIF2)
tubeMergeAdjacentImagesIF2___New_orig__ = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2___New_orig__
tubeMergeAdjacentImagesIF2_cast = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF2_cast


def tubeMergeAdjacentImagesIF3_New():
    return tubeMergeAdjacentImagesIF3.New()

class tubeMergeAdjacentImagesIF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeMergeAdjacentImagesIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_Clone)
    SetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_SetInput1)
    GetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_GetInput1)
    SetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_SetInput2)
    GetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_GetInput2)
    SetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_SetBackground)
    GetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_GetBackground)
    SetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_SetMaskZero)
    GetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_GetMaskZero)
    SetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_SetMaxIterations)
    GetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_GetMaxIterations)
    SetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_SetPadding)
    GetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_GetPadding)
    SetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_SetExpectedOffset)
    GetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_GetExpectedOffset)
    SetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_SetExpectedRotation)
    GetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_GetExpectedRotation)
    SetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_SetSamplingRatio)
    GetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_GetSamplingRatio)
    SetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_SetBlendUsingAverage)
    GetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_GetBlendUsingAverage)
    SetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_SetUseFastBlending)
    GetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_GetUseFastBlending)
    SetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_SetInitialTransform)
    GetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_GetInitialTransform)
    LoadInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_LoadInitialTransform)
    GetOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_GetOutputTransform)
    SaveOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_SaveOutputTransform)
    GetOutput = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_GetOutput)
    __swig_destroy__ = _tubeMergeAdjacentImagesPython.delete_tubeMergeAdjacentImagesIF3
    cast = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_cast)

    def New(*args, **kargs):
        """New() -> tubeMergeAdjacentImagesIF3

        Create a new object of the class tubeMergeAdjacentImagesIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeMergeAdjacentImagesIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeMergeAdjacentImagesIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeMergeAdjacentImagesIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeMergeAdjacentImagesIF3 in _tubeMergeAdjacentImagesPython:
_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_swigregister(tubeMergeAdjacentImagesIF3)
tubeMergeAdjacentImagesIF3___New_orig__ = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3___New_orig__
tubeMergeAdjacentImagesIF3_cast = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIF3_cast


def tubeMergeAdjacentImagesISS2_New():
    return tubeMergeAdjacentImagesISS2.New()

class tubeMergeAdjacentImagesISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeMergeAdjacentImagesISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_Clone)
    SetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_SetInput1)
    GetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_GetInput1)
    SetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_SetInput2)
    GetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_GetInput2)
    SetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_SetBackground)
    GetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_GetBackground)
    SetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_SetMaskZero)
    GetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_GetMaskZero)
    SetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_SetMaxIterations)
    GetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_GetMaxIterations)
    SetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_SetPadding)
    GetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_GetPadding)
    SetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_SetExpectedOffset)
    GetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_GetExpectedOffset)
    SetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_SetExpectedRotation)
    GetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_GetExpectedRotation)
    SetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_SetSamplingRatio)
    GetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_GetSamplingRatio)
    SetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_SetBlendUsingAverage)
    GetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_GetBlendUsingAverage)
    SetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_SetUseFastBlending)
    GetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_GetUseFastBlending)
    SetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_SetInitialTransform)
    GetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_GetInitialTransform)
    LoadInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_LoadInitialTransform)
    GetOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_GetOutputTransform)
    SaveOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_SaveOutputTransform)
    GetOutput = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_GetOutput)
    __swig_destroy__ = _tubeMergeAdjacentImagesPython.delete_tubeMergeAdjacentImagesISS2
    cast = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_cast)

    def New(*args, **kargs):
        """New() -> tubeMergeAdjacentImagesISS2

        Create a new object of the class tubeMergeAdjacentImagesISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeMergeAdjacentImagesISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeMergeAdjacentImagesISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeMergeAdjacentImagesISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeMergeAdjacentImagesISS2 in _tubeMergeAdjacentImagesPython:
_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_swigregister(tubeMergeAdjacentImagesISS2)
tubeMergeAdjacentImagesISS2___New_orig__ = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2___New_orig__
tubeMergeAdjacentImagesISS2_cast = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS2_cast


def tubeMergeAdjacentImagesISS3_New():
    return tubeMergeAdjacentImagesISS3.New()

class tubeMergeAdjacentImagesISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeMergeAdjacentImagesISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_Clone)
    SetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_SetInput1)
    GetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_GetInput1)
    SetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_SetInput2)
    GetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_GetInput2)
    SetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_SetBackground)
    GetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_GetBackground)
    SetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_SetMaskZero)
    GetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_GetMaskZero)
    SetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_SetMaxIterations)
    GetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_GetMaxIterations)
    SetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_SetPadding)
    GetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_GetPadding)
    SetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_SetExpectedOffset)
    GetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_GetExpectedOffset)
    SetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_SetExpectedRotation)
    GetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_GetExpectedRotation)
    SetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_SetSamplingRatio)
    GetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_GetSamplingRatio)
    SetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_SetBlendUsingAverage)
    GetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_GetBlendUsingAverage)
    SetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_SetUseFastBlending)
    GetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_GetUseFastBlending)
    SetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_SetInitialTransform)
    GetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_GetInitialTransform)
    LoadInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_LoadInitialTransform)
    GetOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_GetOutputTransform)
    SaveOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_SaveOutputTransform)
    GetOutput = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_GetOutput)
    __swig_destroy__ = _tubeMergeAdjacentImagesPython.delete_tubeMergeAdjacentImagesISS3
    cast = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_cast)

    def New(*args, **kargs):
        """New() -> tubeMergeAdjacentImagesISS3

        Create a new object of the class tubeMergeAdjacentImagesISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeMergeAdjacentImagesISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeMergeAdjacentImagesISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeMergeAdjacentImagesISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeMergeAdjacentImagesISS3 in _tubeMergeAdjacentImagesPython:
_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_swigregister(tubeMergeAdjacentImagesISS3)
tubeMergeAdjacentImagesISS3___New_orig__ = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3___New_orig__
tubeMergeAdjacentImagesISS3_cast = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesISS3_cast


def tubeMergeAdjacentImagesIUC2_New():
    return tubeMergeAdjacentImagesIUC2.New()

class tubeMergeAdjacentImagesIUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeMergeAdjacentImagesIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_Clone)
    SetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_SetInput1)
    GetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_GetInput1)
    SetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_SetInput2)
    GetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_GetInput2)
    SetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_SetBackground)
    GetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_GetBackground)
    SetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_SetMaskZero)
    GetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_GetMaskZero)
    SetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_SetMaxIterations)
    GetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_GetMaxIterations)
    SetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_SetPadding)
    GetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_GetPadding)
    SetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_SetExpectedOffset)
    GetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_GetExpectedOffset)
    SetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_SetExpectedRotation)
    GetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_GetExpectedRotation)
    SetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_SetSamplingRatio)
    GetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_GetSamplingRatio)
    SetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_SetBlendUsingAverage)
    GetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_GetBlendUsingAverage)
    SetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_SetUseFastBlending)
    GetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_GetUseFastBlending)
    SetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_SetInitialTransform)
    GetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_GetInitialTransform)
    LoadInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_LoadInitialTransform)
    GetOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_GetOutputTransform)
    SaveOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_SaveOutputTransform)
    GetOutput = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_GetOutput)
    __swig_destroy__ = _tubeMergeAdjacentImagesPython.delete_tubeMergeAdjacentImagesIUC2
    cast = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeMergeAdjacentImagesIUC2

        Create a new object of the class tubeMergeAdjacentImagesIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeMergeAdjacentImagesIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeMergeAdjacentImagesIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeMergeAdjacentImagesIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeMergeAdjacentImagesIUC2 in _tubeMergeAdjacentImagesPython:
_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_swigregister(tubeMergeAdjacentImagesIUC2)
tubeMergeAdjacentImagesIUC2___New_orig__ = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2___New_orig__
tubeMergeAdjacentImagesIUC2_cast = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC2_cast


def tubeMergeAdjacentImagesIUC3_New():
    return tubeMergeAdjacentImagesIUC3.New()

class tubeMergeAdjacentImagesIUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeMergeAdjacentImagesIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_Clone)
    SetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_SetInput1)
    GetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_GetInput1)
    SetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_SetInput2)
    GetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_GetInput2)
    SetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_SetBackground)
    GetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_GetBackground)
    SetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_SetMaskZero)
    GetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_GetMaskZero)
    SetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_SetMaxIterations)
    GetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_GetMaxIterations)
    SetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_SetPadding)
    GetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_GetPadding)
    SetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_SetExpectedOffset)
    GetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_GetExpectedOffset)
    SetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_SetExpectedRotation)
    GetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_GetExpectedRotation)
    SetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_SetSamplingRatio)
    GetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_GetSamplingRatio)
    SetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_SetBlendUsingAverage)
    GetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_GetBlendUsingAverage)
    SetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_SetUseFastBlending)
    GetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_GetUseFastBlending)
    SetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_SetInitialTransform)
    GetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_GetInitialTransform)
    LoadInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_LoadInitialTransform)
    GetOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_GetOutputTransform)
    SaveOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_SaveOutputTransform)
    GetOutput = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_GetOutput)
    __swig_destroy__ = _tubeMergeAdjacentImagesPython.delete_tubeMergeAdjacentImagesIUC3
    cast = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeMergeAdjacentImagesIUC3

        Create a new object of the class tubeMergeAdjacentImagesIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeMergeAdjacentImagesIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeMergeAdjacentImagesIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeMergeAdjacentImagesIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeMergeAdjacentImagesIUC3 in _tubeMergeAdjacentImagesPython:
_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_swigregister(tubeMergeAdjacentImagesIUC3)
tubeMergeAdjacentImagesIUC3___New_orig__ = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3___New_orig__
tubeMergeAdjacentImagesIUC3_cast = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUC3_cast


def tubeMergeAdjacentImagesIUS2_New():
    return tubeMergeAdjacentImagesIUS2.New()

class tubeMergeAdjacentImagesIUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeMergeAdjacentImagesIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_Clone)
    SetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_SetInput1)
    GetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_GetInput1)
    SetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_SetInput2)
    GetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_GetInput2)
    SetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_SetBackground)
    GetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_GetBackground)
    SetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_SetMaskZero)
    GetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_GetMaskZero)
    SetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_SetMaxIterations)
    GetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_GetMaxIterations)
    SetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_SetPadding)
    GetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_GetPadding)
    SetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_SetExpectedOffset)
    GetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_GetExpectedOffset)
    SetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_SetExpectedRotation)
    GetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_GetExpectedRotation)
    SetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_SetSamplingRatio)
    GetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_GetSamplingRatio)
    SetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_SetBlendUsingAverage)
    GetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_GetBlendUsingAverage)
    SetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_SetUseFastBlending)
    GetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_GetUseFastBlending)
    SetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_SetInitialTransform)
    GetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_GetInitialTransform)
    LoadInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_LoadInitialTransform)
    GetOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_GetOutputTransform)
    SaveOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_SaveOutputTransform)
    GetOutput = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_GetOutput)
    __swig_destroy__ = _tubeMergeAdjacentImagesPython.delete_tubeMergeAdjacentImagesIUS2
    cast = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeMergeAdjacentImagesIUS2

        Create a new object of the class tubeMergeAdjacentImagesIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeMergeAdjacentImagesIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeMergeAdjacentImagesIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeMergeAdjacentImagesIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeMergeAdjacentImagesIUS2 in _tubeMergeAdjacentImagesPython:
_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_swigregister(tubeMergeAdjacentImagesIUS2)
tubeMergeAdjacentImagesIUS2___New_orig__ = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2___New_orig__
tubeMergeAdjacentImagesIUS2_cast = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS2_cast


def tubeMergeAdjacentImagesIUS3_New():
    return tubeMergeAdjacentImagesIUS3.New()

class tubeMergeAdjacentImagesIUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeMergeAdjacentImagesIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_Clone)
    SetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_SetInput1)
    GetInput1 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_GetInput1)
    SetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_SetInput2)
    GetInput2 = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_GetInput2)
    SetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_SetBackground)
    GetBackground = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_GetBackground)
    SetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_SetMaskZero)
    GetMaskZero = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_GetMaskZero)
    SetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_SetMaxIterations)
    GetMaxIterations = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_GetMaxIterations)
    SetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_SetPadding)
    GetPadding = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_GetPadding)
    SetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_SetExpectedOffset)
    GetExpectedOffset = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_GetExpectedOffset)
    SetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_SetExpectedRotation)
    GetExpectedRotation = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_GetExpectedRotation)
    SetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_SetSamplingRatio)
    GetSamplingRatio = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_GetSamplingRatio)
    SetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_SetBlendUsingAverage)
    GetBlendUsingAverage = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_GetBlendUsingAverage)
    SetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_SetUseFastBlending)
    GetUseFastBlending = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_GetUseFastBlending)
    SetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_SetInitialTransform)
    GetInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_GetInitialTransform)
    LoadInitialTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_LoadInitialTransform)
    GetOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_GetOutputTransform)
    SaveOutputTransform = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_SaveOutputTransform)
    GetOutput = _swig_new_instance_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_GetOutput)
    __swig_destroy__ = _tubeMergeAdjacentImagesPython.delete_tubeMergeAdjacentImagesIUS3
    cast = _swig_new_static_method(_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeMergeAdjacentImagesIUS3

        Create a new object of the class tubeMergeAdjacentImagesIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeMergeAdjacentImagesIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeMergeAdjacentImagesIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeMergeAdjacentImagesIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeMergeAdjacentImagesIUS3 in _tubeMergeAdjacentImagesPython:
_tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_swigregister(tubeMergeAdjacentImagesIUS3)
tubeMergeAdjacentImagesIUS3___New_orig__ = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3___New_orig__
tubeMergeAdjacentImagesIUS3_cast = _tubeMergeAdjacentImagesPython.tubeMergeAdjacentImagesIUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def merge_adjacent_images(*args, **kwargs):
    """Procedural interface for MergeAdjacentImages"""
    import itk
    instance = itk.MergeAdjacentImages.New(*args, **kwargs)
    return instance.__internal_call__()

def merge_adjacent_images_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MergeAdjacentImages, itkTemplate.itkTemplate):
        filter_object = itk.MergeAdjacentImages.values()[0]
    else:
        filter_object = itk.MergeAdjacentImages

    merge_adjacent_images.__doc__ = filter_object.__doc__
    merge_adjacent_images.__doc__ += "\n Args are Input(s) to the filter.\n"
    merge_adjacent_images.__doc__ += "Available Keyword Arguments:\n"
    merge_adjacent_images.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



