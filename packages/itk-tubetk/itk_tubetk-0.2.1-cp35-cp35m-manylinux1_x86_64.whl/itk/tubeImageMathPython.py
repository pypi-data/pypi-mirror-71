# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeImageMathPython
else:
    import _tubeImageMathPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _tubeImageMathPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _tubeImageMathPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkRGBPixelPython
import itk.itkPointPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableSizeMatrixPython
import itk.itkArrayPython
import itk.itkContinuousIndexPython

def tubeImageMathDD2_New():
    return tubeImageMathDD2.New()

class tubeImageMathDD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathDD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathDD2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDD2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathDD2

        Create a new object of the class tubeImageMathDD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathDD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathDD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathDD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathDD2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathDD2_swigregister(tubeImageMathDD2)
tubeImageMathDD2___New_orig__ = _tubeImageMathPython.tubeImageMathDD2___New_orig__
tubeImageMathDD2_cast = _tubeImageMathPython.tubeImageMathDD2_cast


def tubeImageMathDD3_New():
    return tubeImageMathDD3.New()

class tubeImageMathDD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathDD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDD3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathDD3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDD3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathDD3

        Create a new object of the class tubeImageMathDD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathDD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathDD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathDD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathDD3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathDD3_swigregister(tubeImageMathDD3)
tubeImageMathDD3___New_orig__ = _tubeImageMathPython.tubeImageMathDD3___New_orig__
tubeImageMathDD3_cast = _tubeImageMathPython.tubeImageMathDD3_cast


def tubeImageMathDF2_New():
    return tubeImageMathDF2.New()

class tubeImageMathDF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathDF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathDF2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDF2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathDF2

        Create a new object of the class tubeImageMathDF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathDF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathDF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathDF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathDF2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathDF2_swigregister(tubeImageMathDF2)
tubeImageMathDF2___New_orig__ = _tubeImageMathPython.tubeImageMathDF2___New_orig__
tubeImageMathDF2_cast = _tubeImageMathPython.tubeImageMathDF2_cast


def tubeImageMathDF3_New():
    return tubeImageMathDF3.New()

class tubeImageMathDF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathDF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDF3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathDF3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDF3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathDF3

        Create a new object of the class tubeImageMathDF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathDF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathDF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathDF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathDF3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathDF3_swigregister(tubeImageMathDF3)
tubeImageMathDF3___New_orig__ = _tubeImageMathPython.tubeImageMathDF3___New_orig__
tubeImageMathDF3_cast = _tubeImageMathPython.tubeImageMathDF3_cast


def tubeImageMathDSS2_New():
    return tubeImageMathDSS2.New()

class tubeImageMathDSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathDSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathDSS2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathDSS2

        Create a new object of the class tubeImageMathDSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathDSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathDSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathDSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathDSS2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathDSS2_swigregister(tubeImageMathDSS2)
tubeImageMathDSS2___New_orig__ = _tubeImageMathPython.tubeImageMathDSS2___New_orig__
tubeImageMathDSS2_cast = _tubeImageMathPython.tubeImageMathDSS2_cast


def tubeImageMathDSS3_New():
    return tubeImageMathDSS3.New()

class tubeImageMathDSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathDSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDSS3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathDSS3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathDSS3

        Create a new object of the class tubeImageMathDSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathDSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathDSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathDSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathDSS3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathDSS3_swigregister(tubeImageMathDSS3)
tubeImageMathDSS3___New_orig__ = _tubeImageMathPython.tubeImageMathDSS3___New_orig__
tubeImageMathDSS3_cast = _tubeImageMathPython.tubeImageMathDSS3_cast


def tubeImageMathDUC2_New():
    return tubeImageMathDUC2.New()

class tubeImageMathDUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathDUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathDUC2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathDUC2

        Create a new object of the class tubeImageMathDUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathDUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathDUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathDUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathDUC2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathDUC2_swigregister(tubeImageMathDUC2)
tubeImageMathDUC2___New_orig__ = _tubeImageMathPython.tubeImageMathDUC2___New_orig__
tubeImageMathDUC2_cast = _tubeImageMathPython.tubeImageMathDUC2_cast


def tubeImageMathDUC3_New():
    return tubeImageMathDUC3.New()

class tubeImageMathDUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathDUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUC3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathDUC3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathDUC3

        Create a new object of the class tubeImageMathDUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathDUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathDUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathDUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathDUC3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathDUC3_swigregister(tubeImageMathDUC3)
tubeImageMathDUC3___New_orig__ = _tubeImageMathPython.tubeImageMathDUC3___New_orig__
tubeImageMathDUC3_cast = _tubeImageMathPython.tubeImageMathDUC3_cast


def tubeImageMathDUS2_New():
    return tubeImageMathDUS2.New()

class tubeImageMathDUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathDUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathDUS2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathDUS2

        Create a new object of the class tubeImageMathDUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathDUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathDUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathDUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathDUS2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathDUS2_swigregister(tubeImageMathDUS2)
tubeImageMathDUS2___New_orig__ = _tubeImageMathPython.tubeImageMathDUS2___New_orig__
tubeImageMathDUS2_cast = _tubeImageMathPython.tubeImageMathDUS2_cast


def tubeImageMathDUS3_New():
    return tubeImageMathDUS3.New()

class tubeImageMathDUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathDUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathDUS3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathDUS3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathDUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathDUS3

        Create a new object of the class tubeImageMathDUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathDUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathDUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathDUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathDUS3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathDUS3_swigregister(tubeImageMathDUS3)
tubeImageMathDUS3___New_orig__ = _tubeImageMathPython.tubeImageMathDUS3___New_orig__
tubeImageMathDUS3_cast = _tubeImageMathPython.tubeImageMathDUS3_cast


def tubeImageMathFD2_New():
    return tubeImageMathFD2.New()

class tubeImageMathFD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathFD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathFD2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFD2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathFD2

        Create a new object of the class tubeImageMathFD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathFD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathFD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathFD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathFD2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathFD2_swigregister(tubeImageMathFD2)
tubeImageMathFD2___New_orig__ = _tubeImageMathPython.tubeImageMathFD2___New_orig__
tubeImageMathFD2_cast = _tubeImageMathPython.tubeImageMathFD2_cast


def tubeImageMathFD3_New():
    return tubeImageMathFD3.New()

class tubeImageMathFD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathFD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFD3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathFD3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFD3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathFD3

        Create a new object of the class tubeImageMathFD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathFD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathFD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathFD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathFD3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathFD3_swigregister(tubeImageMathFD3)
tubeImageMathFD3___New_orig__ = _tubeImageMathPython.tubeImageMathFD3___New_orig__
tubeImageMathFD3_cast = _tubeImageMathPython.tubeImageMathFD3_cast


def tubeImageMathFF2_New():
    return tubeImageMathFF2.New()

class tubeImageMathFF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathFF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathFF2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFF2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathFF2

        Create a new object of the class tubeImageMathFF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathFF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathFF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathFF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathFF2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathFF2_swigregister(tubeImageMathFF2)
tubeImageMathFF2___New_orig__ = _tubeImageMathPython.tubeImageMathFF2___New_orig__
tubeImageMathFF2_cast = _tubeImageMathPython.tubeImageMathFF2_cast


def tubeImageMathFF3_New():
    return tubeImageMathFF3.New()

class tubeImageMathFF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathFF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFF3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathFF3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFF3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathFF3

        Create a new object of the class tubeImageMathFF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathFF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathFF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathFF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathFF3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathFF3_swigregister(tubeImageMathFF3)
tubeImageMathFF3___New_orig__ = _tubeImageMathPython.tubeImageMathFF3___New_orig__
tubeImageMathFF3_cast = _tubeImageMathPython.tubeImageMathFF3_cast


def tubeImageMathFSS2_New():
    return tubeImageMathFSS2.New()

class tubeImageMathFSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathFSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathFSS2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathFSS2

        Create a new object of the class tubeImageMathFSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathFSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathFSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathFSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathFSS2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathFSS2_swigregister(tubeImageMathFSS2)
tubeImageMathFSS2___New_orig__ = _tubeImageMathPython.tubeImageMathFSS2___New_orig__
tubeImageMathFSS2_cast = _tubeImageMathPython.tubeImageMathFSS2_cast


def tubeImageMathFSS3_New():
    return tubeImageMathFSS3.New()

class tubeImageMathFSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathFSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFSS3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathFSS3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathFSS3

        Create a new object of the class tubeImageMathFSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathFSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathFSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathFSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathFSS3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathFSS3_swigregister(tubeImageMathFSS3)
tubeImageMathFSS3___New_orig__ = _tubeImageMathPython.tubeImageMathFSS3___New_orig__
tubeImageMathFSS3_cast = _tubeImageMathPython.tubeImageMathFSS3_cast


def tubeImageMathFUC2_New():
    return tubeImageMathFUC2.New()

class tubeImageMathFUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathFUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathFUC2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathFUC2

        Create a new object of the class tubeImageMathFUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathFUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathFUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathFUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathFUC2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathFUC2_swigregister(tubeImageMathFUC2)
tubeImageMathFUC2___New_orig__ = _tubeImageMathPython.tubeImageMathFUC2___New_orig__
tubeImageMathFUC2_cast = _tubeImageMathPython.tubeImageMathFUC2_cast


def tubeImageMathFUC3_New():
    return tubeImageMathFUC3.New()

class tubeImageMathFUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathFUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUC3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathFUC3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathFUC3

        Create a new object of the class tubeImageMathFUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathFUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathFUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathFUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathFUC3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathFUC3_swigregister(tubeImageMathFUC3)
tubeImageMathFUC3___New_orig__ = _tubeImageMathPython.tubeImageMathFUC3___New_orig__
tubeImageMathFUC3_cast = _tubeImageMathPython.tubeImageMathFUC3_cast


def tubeImageMathFUS2_New():
    return tubeImageMathFUS2.New()

class tubeImageMathFUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathFUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathFUS2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathFUS2

        Create a new object of the class tubeImageMathFUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathFUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathFUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathFUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathFUS2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathFUS2_swigregister(tubeImageMathFUS2)
tubeImageMathFUS2___New_orig__ = _tubeImageMathPython.tubeImageMathFUS2___New_orig__
tubeImageMathFUS2_cast = _tubeImageMathPython.tubeImageMathFUS2_cast


def tubeImageMathFUS3_New():
    return tubeImageMathFUS3.New()

class tubeImageMathFUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathFUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathFUS3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathFUS3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathFUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathFUS3

        Create a new object of the class tubeImageMathFUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathFUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathFUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathFUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathFUS3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathFUS3_swigregister(tubeImageMathFUS3)
tubeImageMathFUS3___New_orig__ = _tubeImageMathPython.tubeImageMathFUS3___New_orig__
tubeImageMathFUS3_cast = _tubeImageMathPython.tubeImageMathFUS3_cast


def tubeImageMathSSD2_New():
    return tubeImageMathSSD2.New()

class tubeImageMathSSD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathSSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathSSD2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSD2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathSSD2

        Create a new object of the class tubeImageMathSSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathSSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathSSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathSSD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathSSD2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathSSD2_swigregister(tubeImageMathSSD2)
tubeImageMathSSD2___New_orig__ = _tubeImageMathPython.tubeImageMathSSD2___New_orig__
tubeImageMathSSD2_cast = _tubeImageMathPython.tubeImageMathSSD2_cast


def tubeImageMathSSD3_New():
    return tubeImageMathSSD3.New()

class tubeImageMathSSD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathSSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSD3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathSSD3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSD3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathSSD3

        Create a new object of the class tubeImageMathSSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathSSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathSSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathSSD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathSSD3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathSSD3_swigregister(tubeImageMathSSD3)
tubeImageMathSSD3___New_orig__ = _tubeImageMathPython.tubeImageMathSSD3___New_orig__
tubeImageMathSSD3_cast = _tubeImageMathPython.tubeImageMathSSD3_cast


def tubeImageMathSSF2_New():
    return tubeImageMathSSF2.New()

class tubeImageMathSSF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathSSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathSSF2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSF2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathSSF2

        Create a new object of the class tubeImageMathSSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathSSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathSSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathSSF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathSSF2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathSSF2_swigregister(tubeImageMathSSF2)
tubeImageMathSSF2___New_orig__ = _tubeImageMathPython.tubeImageMathSSF2___New_orig__
tubeImageMathSSF2_cast = _tubeImageMathPython.tubeImageMathSSF2_cast


def tubeImageMathSSF3_New():
    return tubeImageMathSSF3.New()

class tubeImageMathSSF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathSSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSF3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathSSF3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSF3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathSSF3

        Create a new object of the class tubeImageMathSSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathSSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathSSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathSSF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathSSF3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathSSF3_swigregister(tubeImageMathSSF3)
tubeImageMathSSF3___New_orig__ = _tubeImageMathPython.tubeImageMathSSF3___New_orig__
tubeImageMathSSF3_cast = _tubeImageMathPython.tubeImageMathSSF3_cast


def tubeImageMathSSSS2_New():
    return tubeImageMathSSSS2.New()

class tubeImageMathSSSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathSSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathSSSS2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathSSSS2

        Create a new object of the class tubeImageMathSSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathSSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathSSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathSSSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathSSSS2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathSSSS2_swigregister(tubeImageMathSSSS2)
tubeImageMathSSSS2___New_orig__ = _tubeImageMathPython.tubeImageMathSSSS2___New_orig__
tubeImageMathSSSS2_cast = _tubeImageMathPython.tubeImageMathSSSS2_cast


def tubeImageMathSSSS3_New():
    return tubeImageMathSSSS3.New()

class tubeImageMathSSSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathSSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSSS3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathSSSS3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathSSSS3

        Create a new object of the class tubeImageMathSSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathSSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathSSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathSSSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathSSSS3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathSSSS3_swigregister(tubeImageMathSSSS3)
tubeImageMathSSSS3___New_orig__ = _tubeImageMathPython.tubeImageMathSSSS3___New_orig__
tubeImageMathSSSS3_cast = _tubeImageMathPython.tubeImageMathSSSS3_cast


def tubeImageMathSSUC2_New():
    return tubeImageMathSSUC2.New()

class tubeImageMathSSUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathSSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathSSUC2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathSSUC2

        Create a new object of the class tubeImageMathSSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathSSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathSSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathSSUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathSSUC2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathSSUC2_swigregister(tubeImageMathSSUC2)
tubeImageMathSSUC2___New_orig__ = _tubeImageMathPython.tubeImageMathSSUC2___New_orig__
tubeImageMathSSUC2_cast = _tubeImageMathPython.tubeImageMathSSUC2_cast


def tubeImageMathSSUC3_New():
    return tubeImageMathSSUC3.New()

class tubeImageMathSSUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathSSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUC3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathSSUC3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathSSUC3

        Create a new object of the class tubeImageMathSSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathSSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathSSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathSSUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathSSUC3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathSSUC3_swigregister(tubeImageMathSSUC3)
tubeImageMathSSUC3___New_orig__ = _tubeImageMathPython.tubeImageMathSSUC3___New_orig__
tubeImageMathSSUC3_cast = _tubeImageMathPython.tubeImageMathSSUC3_cast


def tubeImageMathSSUS2_New():
    return tubeImageMathSSUS2.New()

class tubeImageMathSSUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathSSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathSSUS2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathSSUS2

        Create a new object of the class tubeImageMathSSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathSSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathSSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathSSUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathSSUS2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathSSUS2_swigregister(tubeImageMathSSUS2)
tubeImageMathSSUS2___New_orig__ = _tubeImageMathPython.tubeImageMathSSUS2___New_orig__
tubeImageMathSSUS2_cast = _tubeImageMathPython.tubeImageMathSSUS2_cast


def tubeImageMathSSUS3_New():
    return tubeImageMathSSUS3.New()

class tubeImageMathSSUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathSSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathSSUS3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathSSUS3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathSSUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathSSUS3

        Create a new object of the class tubeImageMathSSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathSSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathSSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathSSUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathSSUS3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathSSUS3_swigregister(tubeImageMathSSUS3)
tubeImageMathSSUS3___New_orig__ = _tubeImageMathPython.tubeImageMathSSUS3___New_orig__
tubeImageMathSSUS3_cast = _tubeImageMathPython.tubeImageMathSSUS3_cast


def tubeImageMathUCD2_New():
    return tubeImageMathUCD2.New()

class tubeImageMathUCD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUCD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUCD2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCD2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUCD2

        Create a new object of the class tubeImageMathUCD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUCD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUCD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUCD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUCD2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUCD2_swigregister(tubeImageMathUCD2)
tubeImageMathUCD2___New_orig__ = _tubeImageMathPython.tubeImageMathUCD2___New_orig__
tubeImageMathUCD2_cast = _tubeImageMathPython.tubeImageMathUCD2_cast


def tubeImageMathUCD3_New():
    return tubeImageMathUCD3.New()

class tubeImageMathUCD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUCD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCD3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUCD3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCD3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUCD3

        Create a new object of the class tubeImageMathUCD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUCD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUCD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUCD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUCD3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUCD3_swigregister(tubeImageMathUCD3)
tubeImageMathUCD3___New_orig__ = _tubeImageMathPython.tubeImageMathUCD3___New_orig__
tubeImageMathUCD3_cast = _tubeImageMathPython.tubeImageMathUCD3_cast


def tubeImageMathUCF2_New():
    return tubeImageMathUCF2.New()

class tubeImageMathUCF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUCF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUCF2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCF2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUCF2

        Create a new object of the class tubeImageMathUCF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUCF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUCF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUCF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUCF2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUCF2_swigregister(tubeImageMathUCF2)
tubeImageMathUCF2___New_orig__ = _tubeImageMathPython.tubeImageMathUCF2___New_orig__
tubeImageMathUCF2_cast = _tubeImageMathPython.tubeImageMathUCF2_cast


def tubeImageMathUCF3_New():
    return tubeImageMathUCF3.New()

class tubeImageMathUCF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUCF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCF3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUCF3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCF3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUCF3

        Create a new object of the class tubeImageMathUCF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUCF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUCF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUCF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUCF3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUCF3_swigregister(tubeImageMathUCF3)
tubeImageMathUCF3___New_orig__ = _tubeImageMathPython.tubeImageMathUCF3___New_orig__
tubeImageMathUCF3_cast = _tubeImageMathPython.tubeImageMathUCF3_cast


def tubeImageMathUCSS2_New():
    return tubeImageMathUCSS2.New()

class tubeImageMathUCSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUCSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUCSS2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUCSS2

        Create a new object of the class tubeImageMathUCSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUCSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUCSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUCSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUCSS2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUCSS2_swigregister(tubeImageMathUCSS2)
tubeImageMathUCSS2___New_orig__ = _tubeImageMathPython.tubeImageMathUCSS2___New_orig__
tubeImageMathUCSS2_cast = _tubeImageMathPython.tubeImageMathUCSS2_cast


def tubeImageMathUCSS3_New():
    return tubeImageMathUCSS3.New()

class tubeImageMathUCSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUCSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCSS3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUCSS3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUCSS3

        Create a new object of the class tubeImageMathUCSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUCSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUCSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUCSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUCSS3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUCSS3_swigregister(tubeImageMathUCSS3)
tubeImageMathUCSS3___New_orig__ = _tubeImageMathPython.tubeImageMathUCSS3___New_orig__
tubeImageMathUCSS3_cast = _tubeImageMathPython.tubeImageMathUCSS3_cast


def tubeImageMathUCUC2_New():
    return tubeImageMathUCUC2.New()

class tubeImageMathUCUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUCUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUCUC2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUCUC2

        Create a new object of the class tubeImageMathUCUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUCUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUCUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUCUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUCUC2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUCUC2_swigregister(tubeImageMathUCUC2)
tubeImageMathUCUC2___New_orig__ = _tubeImageMathPython.tubeImageMathUCUC2___New_orig__
tubeImageMathUCUC2_cast = _tubeImageMathPython.tubeImageMathUCUC2_cast


def tubeImageMathUCUC3_New():
    return tubeImageMathUCUC3.New()

class tubeImageMathUCUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUCUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUC3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUCUC3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUCUC3

        Create a new object of the class tubeImageMathUCUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUCUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUCUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUCUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUCUC3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUCUC3_swigregister(tubeImageMathUCUC3)
tubeImageMathUCUC3___New_orig__ = _tubeImageMathPython.tubeImageMathUCUC3___New_orig__
tubeImageMathUCUC3_cast = _tubeImageMathPython.tubeImageMathUCUC3_cast


def tubeImageMathUCUS2_New():
    return tubeImageMathUCUS2.New()

class tubeImageMathUCUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUCUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUCUS2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUCUS2

        Create a new object of the class tubeImageMathUCUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUCUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUCUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUCUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUCUS2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUCUS2_swigregister(tubeImageMathUCUS2)
tubeImageMathUCUS2___New_orig__ = _tubeImageMathPython.tubeImageMathUCUS2___New_orig__
tubeImageMathUCUS2_cast = _tubeImageMathPython.tubeImageMathUCUS2_cast


def tubeImageMathUCUS3_New():
    return tubeImageMathUCUS3.New()

class tubeImageMathUCUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUCUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUCUS3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUCUS3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUCUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUCUS3

        Create a new object of the class tubeImageMathUCUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUCUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUCUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUCUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUCUS3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUCUS3_swigregister(tubeImageMathUCUS3)
tubeImageMathUCUS3___New_orig__ = _tubeImageMathPython.tubeImageMathUCUS3___New_orig__
tubeImageMathUCUS3_cast = _tubeImageMathPython.tubeImageMathUCUS3_cast


def tubeImageMathUSD2_New():
    return tubeImageMathUSD2.New()

class tubeImageMathUSD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUSD2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSD2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUSD2

        Create a new object of the class tubeImageMathUSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUSD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUSD2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUSD2_swigregister(tubeImageMathUSD2)
tubeImageMathUSD2___New_orig__ = _tubeImageMathPython.tubeImageMathUSD2___New_orig__
tubeImageMathUSD2_cast = _tubeImageMathPython.tubeImageMathUSD2_cast


def tubeImageMathUSD3_New():
    return tubeImageMathUSD3.New()

class tubeImageMathUSD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSD3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUSD3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSD3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUSD3

        Create a new object of the class tubeImageMathUSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUSD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUSD3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUSD3_swigregister(tubeImageMathUSD3)
tubeImageMathUSD3___New_orig__ = _tubeImageMathPython.tubeImageMathUSD3___New_orig__
tubeImageMathUSD3_cast = _tubeImageMathPython.tubeImageMathUSD3_cast


def tubeImageMathUSF2_New():
    return tubeImageMathUSF2.New()

class tubeImageMathUSF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUSF2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSF2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUSF2

        Create a new object of the class tubeImageMathUSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUSF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUSF2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUSF2_swigregister(tubeImageMathUSF2)
tubeImageMathUSF2___New_orig__ = _tubeImageMathPython.tubeImageMathUSF2___New_orig__
tubeImageMathUSF2_cast = _tubeImageMathPython.tubeImageMathUSF2_cast


def tubeImageMathUSF3_New():
    return tubeImageMathUSF3.New()

class tubeImageMathUSF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSF3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUSF3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSF3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUSF3

        Create a new object of the class tubeImageMathUSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUSF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUSF3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUSF3_swigregister(tubeImageMathUSF3)
tubeImageMathUSF3___New_orig__ = _tubeImageMathPython.tubeImageMathUSF3___New_orig__
tubeImageMathUSF3_cast = _tubeImageMathPython.tubeImageMathUSF3_cast


def tubeImageMathUSSS2_New():
    return tubeImageMathUSSS2.New()

class tubeImageMathUSSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUSSS2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUSSS2

        Create a new object of the class tubeImageMathUSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUSSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUSSS2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUSSS2_swigregister(tubeImageMathUSSS2)
tubeImageMathUSSS2___New_orig__ = _tubeImageMathPython.tubeImageMathUSSS2___New_orig__
tubeImageMathUSSS2_cast = _tubeImageMathPython.tubeImageMathUSSS2_cast


def tubeImageMathUSSS3_New():
    return tubeImageMathUSSS3.New()

class tubeImageMathUSSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSSS3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUSSS3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUSSS3

        Create a new object of the class tubeImageMathUSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUSSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUSSS3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUSSS3_swigregister(tubeImageMathUSSS3)
tubeImageMathUSSS3___New_orig__ = _tubeImageMathPython.tubeImageMathUSSS3___New_orig__
tubeImageMathUSSS3_cast = _tubeImageMathPython.tubeImageMathUSSS3_cast


def tubeImageMathUSUC2_New():
    return tubeImageMathUSUC2.New()

class tubeImageMathUSUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUSUC2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUSUC2

        Create a new object of the class tubeImageMathUSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUSUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUSUC2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUSUC2_swigregister(tubeImageMathUSUC2)
tubeImageMathUSUC2___New_orig__ = _tubeImageMathPython.tubeImageMathUSUC2___New_orig__
tubeImageMathUSUC2_cast = _tubeImageMathPython.tubeImageMathUSUC2_cast


def tubeImageMathUSUC3_New():
    return tubeImageMathUSUC3.New()

class tubeImageMathUSUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUC3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUSUC3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUSUC3

        Create a new object of the class tubeImageMathUSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUSUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUSUC3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUSUC3_swigregister(tubeImageMathUSUC3)
tubeImageMathUSUC3___New_orig__ = _tubeImageMathPython.tubeImageMathUSUC3___New_orig__
tubeImageMathUSUC3_cast = _tubeImageMathPython.tubeImageMathUSUC3_cast


def tubeImageMathUSUS2_New():
    return tubeImageMathUSUS2.New()

class tubeImageMathUSUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS2_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUSUS2
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUSUS2

        Create a new object of the class tubeImageMathUSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUSUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUSUS2 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUSUS2_swigregister(tubeImageMathUSUS2)
tubeImageMathUSUS2___New_orig__ = _tubeImageMathPython.tubeImageMathUSUS2___New_orig__
tubeImageMathUSUS2_cast = _tubeImageMathPython.tubeImageMathUSUS2_cast


def tubeImageMathUSUS3_New():
    return tubeImageMathUSUS3.New()

class tubeImageMathUSUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeImageMathUSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_Clone)
    SetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_GetInput)
    GetOutput = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_GetOutput)
    GetOutputFloat = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_GetOutputFloat)
    GetOutputUChar = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_GetOutputUChar)
    GetOutputShort = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_GetOutputShort)
    IntensityWindow = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_IntensityWindow)
    IntensityMultiplicativeBiasCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_IntensityMultiplicativeBiasCorrection)
    Resample = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_Resample)
    AddUniformNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_AddUniformNoise)
    AddGaussianNoise = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_AddGaussianNoise)
    AddImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_AddImages)
    MultiplyImages = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_MultiplyImages)
    PadUsingMirroring = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_PadUsingMirroring)
    NormalizeMeanStdDev = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_NormalizeMeanStdDev)
    NormalizeFWHM = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_NormalizeFWHM)
    NormalizeMeanShift = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_NormalizeMeanShift)
    FuseUsingMax = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_FuseUsingMax)
    MedianFilter = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_MedianFilter)
    Threshold = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_Threshold)
    MeanWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_MeanWithinMaskRange)
    StdDevWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_StdDevWithinMaskRange)
    AbsoluteValue = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_AbsoluteValue)
    ReplaceValuesOutsideMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_ReplaceValuesOutsideMaskRange)
    Erode = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_Erode)
    Dilate = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_Dilate)
    ReplaceValueWithinMaskRange = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_ReplaceValueWithinMaskRange)
    Blur = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_Blur)
    BlurOrder = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_BlurOrder)
    HistogramBinMin = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_HistogramBinMin)
    HistogramBinSize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_HistogramBinSize)
    Histogram = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_Histogram)
    IntensityCorrectionBySlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_IntensityCorrectionBySlice)
    IntensityCorrection = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_IntensityCorrection)
    Resize = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_Resize)
    ExtractSlice = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_ExtractSlice)
    EnhanceVessels = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_EnhanceVessels)
    ConnectedComponents = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_ConnectedComponents)
    VoronoiTessellation = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_VoronoiTessellation)
    GetVoronoiTessellationAdjacencyMatrix = _swig_new_instance_method(_tubeImageMathPython.tubeImageMathUSUS3_GetVoronoiTessellationAdjacencyMatrix)
    __swig_destroy__ = _tubeImageMathPython.delete_tubeImageMathUSUS3
    cast = _swig_new_static_method(_tubeImageMathPython.tubeImageMathUSUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeImageMathUSUS3

        Create a new object of the class tubeImageMathUSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeImageMathUSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeImageMathUSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeImageMathUSUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeImageMathUSUS3 in _tubeImageMathPython:
_tubeImageMathPython.tubeImageMathUSUS3_swigregister(tubeImageMathUSUS3)
tubeImageMathUSUS3___New_orig__ = _tubeImageMathPython.tubeImageMathUSUS3___New_orig__
tubeImageMathUSUS3_cast = _tubeImageMathPython.tubeImageMathUSUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_math(*args, **kwargs):
    """Procedural interface for ImageMath"""
    import itk
    instance = itk.ImageMath.New(*args, **kwargs)
    return instance.__internal_call__()

def image_math_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageMath, itkTemplate.itkTemplate):
        filter_object = itk.ImageMath.values()[0]
    else:
        filter_object = itk.ImageMath

    image_math.__doc__ = filter_object.__doc__
    image_math.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_math.__doc__ += "Available Keyword Arguments:\n"
    image_math.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



