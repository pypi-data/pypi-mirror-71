# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _TubeTKPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeResampleImagePython
else:
    import _tubeResampleImagePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _tubeResampleImagePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _tubeResampleImagePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkArray2DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkDiffusionTensor3DPython
import itk.ITKCommonBasePython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkImagePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython

def tubeResampleImageD2_New():
    return tubeResampleImageD2.New()

class tubeResampleImageD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeResampleImageD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageD2___New_orig__)
    Clone = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_Clone)
    SetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_SetInput)
    GetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_GetInput)
    SetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_SetMatchImage)
    GetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_GetMatchImage)
    SetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_SetMakeIsotropic)
    GetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_GetMakeIsotropic)
    SetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_SetMakeHighResIso)
    GetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_GetMakeHighResIso)
    SetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_GetInterpolator)
    SetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_SetLoadTransform)
    GetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_GetLoadTransform)
    GetOutput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_GetOutput)
    SetTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_SetTransform)
    SetSpacing = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_SetSpacing)
    SetOrigin = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_SetOrigin)
    SetIndex = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_SetIndex)
    SetResampleFactor = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD2_SetResampleFactor)
    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageD2
    cast = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageD2_cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageD2

        Create a new object of the class tubeResampleImageD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeResampleImageD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeResampleImageD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeResampleImageD2 in _tubeResampleImagePython:
_tubeResampleImagePython.tubeResampleImageD2_swigregister(tubeResampleImageD2)
tubeResampleImageD2___New_orig__ = _tubeResampleImagePython.tubeResampleImageD2___New_orig__
tubeResampleImageD2_cast = _tubeResampleImagePython.tubeResampleImageD2_cast


def tubeResampleImageD3_New():
    return tubeResampleImageD3.New()

class tubeResampleImageD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeResampleImageD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageD3___New_orig__)
    Clone = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_Clone)
    SetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_SetInput)
    GetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_GetInput)
    SetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_SetMatchImage)
    GetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_GetMatchImage)
    SetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_SetMakeIsotropic)
    GetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_GetMakeIsotropic)
    SetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_SetMakeHighResIso)
    GetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_GetMakeHighResIso)
    SetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_GetInterpolator)
    SetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_SetLoadTransform)
    GetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_GetLoadTransform)
    GetOutput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_GetOutput)
    SetTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_SetTransform)
    SetSpacing = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_SetSpacing)
    SetOrigin = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_SetOrigin)
    SetIndex = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_SetIndex)
    SetResampleFactor = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageD3_SetResampleFactor)
    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageD3
    cast = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageD3_cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageD3

        Create a new object of the class tubeResampleImageD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeResampleImageD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeResampleImageD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeResampleImageD3 in _tubeResampleImagePython:
_tubeResampleImagePython.tubeResampleImageD3_swigregister(tubeResampleImageD3)
tubeResampleImageD3___New_orig__ = _tubeResampleImagePython.tubeResampleImageD3___New_orig__
tubeResampleImageD3_cast = _tubeResampleImagePython.tubeResampleImageD3_cast


def tubeResampleImageF2_New():
    return tubeResampleImageF2.New()

class tubeResampleImageF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeResampleImageF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageF2___New_orig__)
    Clone = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_Clone)
    SetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_SetInput)
    GetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_GetInput)
    SetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_SetMatchImage)
    GetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_GetMatchImage)
    SetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_SetMakeIsotropic)
    GetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_GetMakeIsotropic)
    SetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_SetMakeHighResIso)
    GetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_GetMakeHighResIso)
    SetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_GetInterpolator)
    SetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_SetLoadTransform)
    GetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_GetLoadTransform)
    GetOutput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_GetOutput)
    SetTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_SetTransform)
    SetSpacing = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_SetSpacing)
    SetOrigin = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_SetOrigin)
    SetIndex = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_SetIndex)
    SetResampleFactor = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF2_SetResampleFactor)
    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageF2
    cast = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageF2_cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageF2

        Create a new object of the class tubeResampleImageF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeResampleImageF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeResampleImageF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeResampleImageF2 in _tubeResampleImagePython:
_tubeResampleImagePython.tubeResampleImageF2_swigregister(tubeResampleImageF2)
tubeResampleImageF2___New_orig__ = _tubeResampleImagePython.tubeResampleImageF2___New_orig__
tubeResampleImageF2_cast = _tubeResampleImagePython.tubeResampleImageF2_cast


def tubeResampleImageF3_New():
    return tubeResampleImageF3.New()

class tubeResampleImageF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeResampleImageF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageF3___New_orig__)
    Clone = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_Clone)
    SetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_SetInput)
    GetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_GetInput)
    SetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_SetMatchImage)
    GetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_GetMatchImage)
    SetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_SetMakeIsotropic)
    GetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_GetMakeIsotropic)
    SetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_SetMakeHighResIso)
    GetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_GetMakeHighResIso)
    SetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_GetInterpolator)
    SetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_SetLoadTransform)
    GetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_GetLoadTransform)
    GetOutput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_GetOutput)
    SetTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_SetTransform)
    SetSpacing = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_SetSpacing)
    SetOrigin = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_SetOrigin)
    SetIndex = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_SetIndex)
    SetResampleFactor = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageF3_SetResampleFactor)
    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageF3
    cast = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageF3_cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageF3

        Create a new object of the class tubeResampleImageF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeResampleImageF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeResampleImageF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeResampleImageF3 in _tubeResampleImagePython:
_tubeResampleImagePython.tubeResampleImageF3_swigregister(tubeResampleImageF3)
tubeResampleImageF3___New_orig__ = _tubeResampleImagePython.tubeResampleImageF3___New_orig__
tubeResampleImageF3_cast = _tubeResampleImagePython.tubeResampleImageF3_cast


def tubeResampleImageSS2_New():
    return tubeResampleImageSS2.New()

class tubeResampleImageSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeResampleImageSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageSS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_Clone)
    SetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_GetInput)
    SetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_SetMatchImage)
    GetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_GetMatchImage)
    SetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_SetMakeIsotropic)
    GetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_GetMakeIsotropic)
    SetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_SetMakeHighResIso)
    GetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_GetMakeHighResIso)
    SetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_GetInterpolator)
    SetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_SetLoadTransform)
    GetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_GetLoadTransform)
    GetOutput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_GetOutput)
    SetTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_SetTransform)
    SetSpacing = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_SetSpacing)
    SetOrigin = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_SetOrigin)
    SetIndex = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_SetIndex)
    SetResampleFactor = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS2_SetResampleFactor)
    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageSS2
    cast = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageSS2_cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageSS2

        Create a new object of the class tubeResampleImageSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeResampleImageSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeResampleImageSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeResampleImageSS2 in _tubeResampleImagePython:
_tubeResampleImagePython.tubeResampleImageSS2_swigregister(tubeResampleImageSS2)
tubeResampleImageSS2___New_orig__ = _tubeResampleImagePython.tubeResampleImageSS2___New_orig__
tubeResampleImageSS2_cast = _tubeResampleImagePython.tubeResampleImageSS2_cast


def tubeResampleImageSS3_New():
    return tubeResampleImageSS3.New()

class tubeResampleImageSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeResampleImageSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageSS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_Clone)
    SetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_GetInput)
    SetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_SetMatchImage)
    GetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_GetMatchImage)
    SetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_SetMakeIsotropic)
    GetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_GetMakeIsotropic)
    SetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_SetMakeHighResIso)
    GetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_GetMakeHighResIso)
    SetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_GetInterpolator)
    SetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_SetLoadTransform)
    GetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_GetLoadTransform)
    GetOutput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_GetOutput)
    SetTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_SetTransform)
    SetSpacing = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_SetSpacing)
    SetOrigin = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_SetOrigin)
    SetIndex = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_SetIndex)
    SetResampleFactor = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageSS3_SetResampleFactor)
    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageSS3
    cast = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageSS3_cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageSS3

        Create a new object of the class tubeResampleImageSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeResampleImageSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeResampleImageSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeResampleImageSS3 in _tubeResampleImagePython:
_tubeResampleImagePython.tubeResampleImageSS3_swigregister(tubeResampleImageSS3)
tubeResampleImageSS3___New_orig__ = _tubeResampleImagePython.tubeResampleImageSS3___New_orig__
tubeResampleImageSS3_cast = _tubeResampleImagePython.tubeResampleImageSS3_cast


def tubeResampleImageUC2_New():
    return tubeResampleImageUC2.New()

class tubeResampleImageUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeResampleImageUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageUC2___New_orig__)
    Clone = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_Clone)
    SetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_SetInput)
    GetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_GetInput)
    SetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_SetMatchImage)
    GetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_GetMatchImage)
    SetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_SetMakeIsotropic)
    GetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_GetMakeIsotropic)
    SetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_SetMakeHighResIso)
    GetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_GetMakeHighResIso)
    SetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_GetInterpolator)
    SetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_SetLoadTransform)
    GetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_GetLoadTransform)
    GetOutput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_GetOutput)
    SetTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_SetTransform)
    SetSpacing = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_SetSpacing)
    SetOrigin = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_SetOrigin)
    SetIndex = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_SetIndex)
    SetResampleFactor = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC2_SetResampleFactor)
    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageUC2
    cast = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageUC2_cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageUC2

        Create a new object of the class tubeResampleImageUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeResampleImageUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeResampleImageUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeResampleImageUC2 in _tubeResampleImagePython:
_tubeResampleImagePython.tubeResampleImageUC2_swigregister(tubeResampleImageUC2)
tubeResampleImageUC2___New_orig__ = _tubeResampleImagePython.tubeResampleImageUC2___New_orig__
tubeResampleImageUC2_cast = _tubeResampleImagePython.tubeResampleImageUC2_cast


def tubeResampleImageUC3_New():
    return tubeResampleImageUC3.New()

class tubeResampleImageUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeResampleImageUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageUC3___New_orig__)
    Clone = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_Clone)
    SetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_SetInput)
    GetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_GetInput)
    SetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_SetMatchImage)
    GetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_GetMatchImage)
    SetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_SetMakeIsotropic)
    GetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_GetMakeIsotropic)
    SetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_SetMakeHighResIso)
    GetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_GetMakeHighResIso)
    SetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_GetInterpolator)
    SetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_SetLoadTransform)
    GetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_GetLoadTransform)
    GetOutput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_GetOutput)
    SetTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_SetTransform)
    SetSpacing = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_SetSpacing)
    SetOrigin = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_SetOrigin)
    SetIndex = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_SetIndex)
    SetResampleFactor = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUC3_SetResampleFactor)
    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageUC3
    cast = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageUC3_cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageUC3

        Create a new object of the class tubeResampleImageUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeResampleImageUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeResampleImageUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeResampleImageUC3 in _tubeResampleImagePython:
_tubeResampleImagePython.tubeResampleImageUC3_swigregister(tubeResampleImageUC3)
tubeResampleImageUC3___New_orig__ = _tubeResampleImagePython.tubeResampleImageUC3___New_orig__
tubeResampleImageUC3_cast = _tubeResampleImagePython.tubeResampleImageUC3_cast


def tubeResampleImageUS2_New():
    return tubeResampleImageUS2.New()

class tubeResampleImageUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeResampleImageUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageUS2___New_orig__)
    Clone = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_Clone)
    SetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_SetInput)
    GetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_GetInput)
    SetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_SetMatchImage)
    GetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_GetMatchImage)
    SetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_SetMakeIsotropic)
    GetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_GetMakeIsotropic)
    SetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_SetMakeHighResIso)
    GetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_GetMakeHighResIso)
    SetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_GetInterpolator)
    SetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_SetLoadTransform)
    GetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_GetLoadTransform)
    GetOutput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_GetOutput)
    SetTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_SetTransform)
    SetSpacing = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_SetSpacing)
    SetOrigin = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_SetOrigin)
    SetIndex = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_SetIndex)
    SetResampleFactor = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS2_SetResampleFactor)
    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageUS2
    cast = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageUS2_cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageUS2

        Create a new object of the class tubeResampleImageUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeResampleImageUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeResampleImageUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeResampleImageUS2 in _tubeResampleImagePython:
_tubeResampleImagePython.tubeResampleImageUS2_swigregister(tubeResampleImageUS2)
tubeResampleImageUS2___New_orig__ = _tubeResampleImagePython.tubeResampleImageUS2___New_orig__
tubeResampleImageUS2_cast = _tubeResampleImagePython.tubeResampleImageUS2_cast


def tubeResampleImageUS3_New():
    return tubeResampleImageUS3.New()

class tubeResampleImageUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeResampleImageUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageUS3___New_orig__)
    Clone = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_Clone)
    SetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_SetInput)
    GetInput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_GetInput)
    SetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_SetMatchImage)
    GetMatchImage = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_GetMatchImage)
    SetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_SetMakeIsotropic)
    GetMakeIsotropic = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_GetMakeIsotropic)
    SetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_SetMakeHighResIso)
    GetMakeHighResIso = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_GetMakeHighResIso)
    SetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_SetInterpolator)
    GetInterpolator = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_GetInterpolator)
    SetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_SetLoadTransform)
    GetLoadTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_GetLoadTransform)
    GetOutput = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_GetOutput)
    SetTransform = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_SetTransform)
    SetSpacing = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_SetSpacing)
    SetOrigin = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_SetOrigin)
    SetIndex = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_SetIndex)
    SetResampleFactor = _swig_new_instance_method(_tubeResampleImagePython.tubeResampleImageUS3_SetResampleFactor)
    __swig_destroy__ = _tubeResampleImagePython.delete_tubeResampleImageUS3
    cast = _swig_new_static_method(_tubeResampleImagePython.tubeResampleImageUS3_cast)

    def New(*args, **kargs):
        """New() -> tubeResampleImageUS3

        Create a new object of the class tubeResampleImageUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeResampleImageUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeResampleImageUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeResampleImageUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeResampleImageUS3 in _tubeResampleImagePython:
_tubeResampleImagePython.tubeResampleImageUS3_swigregister(tubeResampleImageUS3)
tubeResampleImageUS3___New_orig__ = _tubeResampleImagePython.tubeResampleImageUS3___New_orig__
tubeResampleImageUS3_cast = _tubeResampleImagePython.tubeResampleImageUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def resample_image(*args, **kwargs):
    """Procedural interface for ResampleImage"""
    import itk
    instance = itk.ResampleImage.New(*args, **kwargs)
    return instance.__internal_call__()

def resample_image_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ResampleImage, itkTemplate.itkTemplate):
        filter_object = itk.ResampleImage.values()[0]
    else:
        filter_object = itk.ResampleImage

    resample_image.__doc__ = filter_object.__doc__
    resample_image.__doc__ += "\n Args are Input(s) to the filter.\n"
    resample_image.__doc__ += "Available Keyword Arguments:\n"
    resample_image.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



